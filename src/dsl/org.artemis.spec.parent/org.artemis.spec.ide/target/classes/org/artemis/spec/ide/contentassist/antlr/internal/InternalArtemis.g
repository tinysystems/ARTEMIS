/*
 * generated by Xtext 2.25.0
 */
grammar InternalArtemis;

options {
	superClass=AbstractInternalContentAssistParser;
}

@lexer::header {
package org.artemis.spec.ide.contentassist.antlr.internal;

// Hack: Use our own Lexer superclass by means of import. 
// Currently there is no other way to specify the superclass for the lexer.
import org.eclipse.xtext.ide.editor.contentassist.antlr.internal.Lexer;
}

@parser::header {
package org.artemis.spec.ide.contentassist.antlr.internal;

import java.io.InputStream;
import org.eclipse.xtext.*;
import org.eclipse.xtext.parser.*;
import org.eclipse.xtext.parser.impl.*;
import org.eclipse.emf.ecore.util.EcoreUtil;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.xtext.parser.antlr.XtextTokenStream;
import org.eclipse.xtext.parser.antlr.XtextTokenStream.HiddenTokens;
import org.eclipse.xtext.ide.editor.contentassist.antlr.internal.AbstractInternalContentAssistParser;
import org.eclipse.xtext.ide.editor.contentassist.antlr.internal.DFA;
import org.artemis.spec.services.ArtemisGrammarAccess;

}
@parser::members {
	private ArtemisGrammarAccess grammarAccess;

	public void setGrammarAccess(ArtemisGrammarAccess grammarAccess) {
		this.grammarAccess = grammarAccess;
	}

	@Override
	protected Grammar getGrammar() {
		return grammarAccess.getGrammar();
	}

	@Override
	protected String getValueForTokenName(String tokenName) {
		return tokenName;
	}
}

// Entry rule entryRuleArtemisModel
entryRuleArtemisModel
:
{ before(grammarAccess.getArtemisModelRule()); }
	 ruleArtemisModel
{ after(grammarAccess.getArtemisModelRule()); } 
	 EOF 
;

// Rule ArtemisModel
ruleArtemisModel 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getArtemisModelAccess().getGroup()); }
		(rule__ArtemisModel__Group__0)
		{ after(grammarAccess.getArtemisModelAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleTask
entryRuleTask
:
{ before(grammarAccess.getTaskRule()); }
	 ruleTask
{ after(grammarAccess.getTaskRule()); } 
	 EOF 
;

// Rule Task
ruleTask 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getTaskAccess().getGroup()); }
		(rule__Task__Group__0)
		{ after(grammarAccess.getTaskAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRulePath
entryRulePath
:
{ before(grammarAccess.getPathRule()); }
	 rulePath
{ after(grammarAccess.getPathRule()); } 
	 EOF 
;

// Rule Path
rulePath 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getPathAccess().getGroup()); }
		(rule__Path__Group__0)
		{ after(grammarAccess.getPathAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleTaskProperties
entryRuleTaskProperties
:
{ before(grammarAccess.getTaskPropertiesRule()); }
	 ruleTaskProperties
{ after(grammarAccess.getTaskPropertiesRule()); } 
	 EOF 
;

// Rule TaskProperties
ruleTaskProperties 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getTaskPropertiesAccess().getGroup()); }
		(rule__TaskProperties__Group__0)
		{ after(grammarAccess.getTaskPropertiesAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleProperty
entryRuleProperty
:
{ before(grammarAccess.getPropertyRule()); }
	 ruleProperty
{ after(grammarAccess.getPropertyRule()); } 
	 EOF 
;

// Rule Property
ruleProperty 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getPropertyAccess().getAlternatives()); }
		(rule__Property__Alternatives)
		{ after(grammarAccess.getPropertyAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRulePeriod
entryRulePeriod
:
{ before(grammarAccess.getPeriodRule()); }
	 rulePeriod
{ after(grammarAccess.getPeriodRule()); } 
	 EOF 
;

// Rule Period
rulePeriod 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getPeriodAccess().getGroup()); }
		(rule__Period__Group__0)
		{ after(grammarAccess.getPeriodAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleMaxTries
entryRuleMaxTries
:
{ before(grammarAccess.getMaxTriesRule()); }
	 ruleMaxTries
{ after(grammarAccess.getMaxTriesRule()); } 
	 EOF 
;

// Rule MaxTries
ruleMaxTries 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getMaxTriesAccess().getGroup()); }
		(rule__MaxTries__Group__0)
		{ after(grammarAccess.getMaxTriesAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleMaxDuration
entryRuleMaxDuration
:
{ before(grammarAccess.getMaxDurationRule()); }
	 ruleMaxDuration
{ after(grammarAccess.getMaxDurationRule()); } 
	 EOF 
;

// Rule MaxDuration
ruleMaxDuration 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getMaxDurationAccess().getGroup()); }
		(rule__MaxDuration__Group__0)
		{ after(grammarAccess.getMaxDurationAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleMitd
entryRuleMitd
:
{ before(grammarAccess.getMitdRule()); }
	 ruleMitd
{ after(grammarAccess.getMitdRule()); } 
	 EOF 
;

// Rule Mitd
ruleMitd 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getMitdAccess().getGroup()); }
		(rule__Mitd__Group__0)
		{ after(grammarAccess.getMitdAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleCollect
entryRuleCollect
:
{ before(grammarAccess.getCollectRule()); }
	 ruleCollect
{ after(grammarAccess.getCollectRule()); } 
	 EOF 
;

// Rule Collect
ruleCollect 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getCollectAccess().getGroup()); }
		(rule__Collect__Group__0)
		{ after(grammarAccess.getCollectAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleOnFailAction
entryRuleOnFailAction
:
{ before(grammarAccess.getOnFailActionRule()); }
	 ruleOnFailAction
{ after(grammarAccess.getOnFailActionRule()); } 
	 EOF 
;

// Rule OnFailAction
ruleOnFailAction 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getOnFailActionAccess().getAlternatives()); }
		(rule__OnFailAction__Alternatives)
		{ after(grammarAccess.getOnFailActionAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleRestartPath
entryRuleRestartPath
:
{ before(grammarAccess.getRestartPathRule()); }
	 ruleRestartPath
{ after(grammarAccess.getRestartPathRule()); } 
	 EOF 
;

// Rule RestartPath
ruleRestartPath 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getRestartPathAccess().getGroup()); }
		(rule__RestartPath__Group__0)
		{ after(grammarAccess.getRestartPathAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleSkipPath
entryRuleSkipPath
:
{ before(grammarAccess.getSkipPathRule()); }
	 ruleSkipPath
{ after(grammarAccess.getSkipPathRule()); } 
	 EOF 
;

// Rule SkipPath
ruleSkipPath 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getSkipPathAccess().getGroup()); }
		(rule__SkipPath__Group__0)
		{ after(grammarAccess.getSkipPathAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleRestartTask
entryRuleRestartTask
:
{ before(grammarAccess.getRestartTaskRule()); }
	 ruleRestartTask
{ after(grammarAccess.getRestartTaskRule()); } 
	 EOF 
;

// Rule RestartTask
ruleRestartTask 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getRestartTaskAccess().getGroup()); }
		(rule__RestartTask__Group__0)
		{ after(grammarAccess.getRestartTaskAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleSkipTask
entryRuleSkipTask
:
{ before(grammarAccess.getSkipTaskRule()); }
	 ruleSkipTask
{ after(grammarAccess.getSkipTaskRule()); } 
	 EOF 
;

// Rule SkipTask
ruleSkipTask 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getSkipTaskAccess().getGroup()); }
		(rule__SkipTask__Group__0)
		{ after(grammarAccess.getSkipTaskAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Property__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getPropertyAccess().getPeriodParserRuleCall_0()); }
		rulePeriod
		{ after(grammarAccess.getPropertyAccess().getPeriodParserRuleCall_0()); }
	)
	|
	(
		{ before(grammarAccess.getPropertyAccess().getMaxTriesParserRuleCall_1()); }
		ruleMaxTries
		{ after(grammarAccess.getPropertyAccess().getMaxTriesParserRuleCall_1()); }
	)
	|
	(
		{ before(grammarAccess.getPropertyAccess().getMaxDurationParserRuleCall_2()); }
		ruleMaxDuration
		{ after(grammarAccess.getPropertyAccess().getMaxDurationParserRuleCall_2()); }
	)
	|
	(
		{ before(grammarAccess.getPropertyAccess().getMitdParserRuleCall_3()); }
		ruleMitd
		{ after(grammarAccess.getPropertyAccess().getMitdParserRuleCall_3()); }
	)
	|
	(
		{ before(grammarAccess.getPropertyAccess().getCollectParserRuleCall_4()); }
		ruleCollect
		{ after(grammarAccess.getPropertyAccess().getCollectParserRuleCall_4()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__OnFailAction__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getOnFailActionAccess().getRestartPathParserRuleCall_0()); }
		ruleRestartPath
		{ after(grammarAccess.getOnFailActionAccess().getRestartPathParserRuleCall_0()); }
	)
	|
	(
		{ before(grammarAccess.getOnFailActionAccess().getSkipPathParserRuleCall_1()); }
		ruleSkipPath
		{ after(grammarAccess.getOnFailActionAccess().getSkipPathParserRuleCall_1()); }
	)
	|
	(
		{ before(grammarAccess.getOnFailActionAccess().getRestartTaskParserRuleCall_2()); }
		ruleRestartTask
		{ after(grammarAccess.getOnFailActionAccess().getRestartTaskParserRuleCall_2()); }
	)
	|
	(
		{ before(grammarAccess.getOnFailActionAccess().getSkipTaskParserRuleCall_3()); }
		ruleSkipTask
		{ after(grammarAccess.getOnFailActionAccess().getSkipTaskParserRuleCall_3()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ArtemisModel__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ArtemisModel__Group__0__Impl
	rule__ArtemisModel__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ArtemisModel__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	(
		{ before(grammarAccess.getArtemisModelAccess().getTasksAssignment_0()); }
		(rule__ArtemisModel__TasksAssignment_0)
		{ after(grammarAccess.getArtemisModelAccess().getTasksAssignment_0()); }
	)
	(
		{ before(grammarAccess.getArtemisModelAccess().getTasksAssignment_0()); }
		(rule__ArtemisModel__TasksAssignment_0)*
		{ after(grammarAccess.getArtemisModelAccess().getTasksAssignment_0()); }
	)
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ArtemisModel__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ArtemisModel__Group__1__Impl
	rule__ArtemisModel__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ArtemisModel__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	(
		{ before(grammarAccess.getArtemisModelAccess().getPathsAssignment_1()); }
		(rule__ArtemisModel__PathsAssignment_1)
		{ after(grammarAccess.getArtemisModelAccess().getPathsAssignment_1()); }
	)
	(
		{ before(grammarAccess.getArtemisModelAccess().getPathsAssignment_1()); }
		(rule__ArtemisModel__PathsAssignment_1)*
		{ after(grammarAccess.getArtemisModelAccess().getPathsAssignment_1()); }
	)
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ArtemisModel__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ArtemisModel__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ArtemisModel__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	(
		{ before(grammarAccess.getArtemisModelAccess().getTaskPropertiesAssignment_2()); }
		(rule__ArtemisModel__TaskPropertiesAssignment_2)
		{ after(grammarAccess.getArtemisModelAccess().getTaskPropertiesAssignment_2()); }
	)
	(
		{ before(grammarAccess.getArtemisModelAccess().getTaskPropertiesAssignment_2()); }
		(rule__ArtemisModel__TaskPropertiesAssignment_2)*
		{ after(grammarAccess.getArtemisModelAccess().getTaskPropertiesAssignment_2()); }
	)
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Task__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Task__Group__0__Impl
	rule__Task__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Task__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTaskAccess().getTaskKeyword_0()); }
	'Task'
	{ after(grammarAccess.getTaskAccess().getTaskKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Task__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Task__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Task__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTaskAccess().getNameAssignment_1()); }
	(rule__Task__NameAssignment_1)
	{ after(grammarAccess.getTaskAccess().getNameAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Path__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Path__Group__0__Impl
	rule__Path__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Path__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPathAccess().getLeftParenthesisKeyword_0()); }
	'('
	{ after(grammarAccess.getPathAccess().getLeftParenthesisKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Path__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Path__Group__1__Impl
	rule__Path__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Path__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPathAccess().getPathKeyword_1()); }
	'Path:'
	{ after(grammarAccess.getPathAccess().getPathKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Path__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Path__Group__2__Impl
	rule__Path__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Path__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPathAccess().getIdAssignment_2()); }
	(rule__Path__IdAssignment_2)
	{ after(grammarAccess.getPathAccess().getIdAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Path__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Path__Group__3__Impl
	rule__Path__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Path__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	(
		{ before(grammarAccess.getPathAccess().getGroup_3()); }
		(rule__Path__Group_3__0)
		{ after(grammarAccess.getPathAccess().getGroup_3()); }
	)
	(
		{ before(grammarAccess.getPathAccess().getGroup_3()); }
		(rule__Path__Group_3__0)*
		{ after(grammarAccess.getPathAccess().getGroup_3()); }
	)
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Path__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Path__Group__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Path__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPathAccess().getRightParenthesisKeyword_4()); }
	')'
	{ after(grammarAccess.getPathAccess().getRightParenthesisKeyword_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Path__Group_3__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Path__Group_3__0__Impl
	rule__Path__Group_3__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Path__Group_3__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPathAccess().getCommaKeyword_3_0()); }
	','
	{ after(grammarAccess.getPathAccess().getCommaKeyword_3_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Path__Group_3__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Path__Group_3__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Path__Group_3__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPathAccess().getTasksAssignment_3_1()); }
	(rule__Path__TasksAssignment_3_1)
	{ after(grammarAccess.getPathAccess().getTasksAssignment_3_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__TaskProperties__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__TaskProperties__Group__0__Impl
	rule__TaskProperties__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__TaskProperties__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTaskPropertiesAccess().getTaskAssignment_0()); }
	(rule__TaskProperties__TaskAssignment_0)
	{ after(grammarAccess.getTaskPropertiesAccess().getTaskAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__TaskProperties__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__TaskProperties__Group__1__Impl
	rule__TaskProperties__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__TaskProperties__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTaskPropertiesAccess().getLeftCurlyBracketKeyword_1()); }
	'{'
	{ after(grammarAccess.getTaskPropertiesAccess().getLeftCurlyBracketKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__TaskProperties__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__TaskProperties__Group__2__Impl
	rule__TaskProperties__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__TaskProperties__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	(
		{ before(grammarAccess.getTaskPropertiesAccess().getPropertiesAssignment_2()); }
		(rule__TaskProperties__PropertiesAssignment_2)
		{ after(grammarAccess.getTaskPropertiesAccess().getPropertiesAssignment_2()); }
	)
	(
		{ before(grammarAccess.getTaskPropertiesAccess().getPropertiesAssignment_2()); }
		(rule__TaskProperties__PropertiesAssignment_2)*
		{ after(grammarAccess.getTaskPropertiesAccess().getPropertiesAssignment_2()); }
	)
)
;
finally {
	restoreStackSize(stackSize);
}

rule__TaskProperties__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__TaskProperties__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__TaskProperties__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTaskPropertiesAccess().getRightCurlyBracketKeyword_3()); }
	'}'
	{ after(grammarAccess.getTaskPropertiesAccess().getRightCurlyBracketKeyword_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Period__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Period__Group__0__Impl
	rule__Period__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Period__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPeriodAccess().getPeriodKeyword_0()); }
	'period:'
	{ after(grammarAccess.getPeriodAccess().getPeriodKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Period__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Period__Group__1__Impl
	rule__Period__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Period__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPeriodAccess().getPeriodAssignment_1()); }
	(rule__Period__PeriodAssignment_1)
	{ after(grammarAccess.getPeriodAccess().getPeriodAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Period__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Period__Group__2__Impl
	rule__Period__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Period__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPeriodAccess().getMsKeyword_2()); }
	'ms'
	{ after(grammarAccess.getPeriodAccess().getMsKeyword_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Period__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Period__Group__3__Impl
	rule__Period__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Period__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPeriodAccess().getOnFailKeyword_3()); }
	'onFail:'
	{ after(grammarAccess.getPeriodAccess().getOnFailKeyword_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Period__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Period__Group__4__Impl
	rule__Period__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__Period__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPeriodAccess().getOnFailActionAssignment_4()); }
	(rule__Period__OnFailActionAssignment_4)
	{ after(grammarAccess.getPeriodAccess().getOnFailActionAssignment_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Period__Group__5
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Period__Group__5__Impl
	rule__Period__Group__6
;
finally {
	restoreStackSize(stackSize);
}

rule__Period__Group__5__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPeriodAccess().getMaxAttemptKeyword_5()); }
	'maxAttempt:'
	{ after(grammarAccess.getPeriodAccess().getMaxAttemptKeyword_5()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Period__Group__6
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Period__Group__6__Impl
	rule__Period__Group__7
;
finally {
	restoreStackSize(stackSize);
}

rule__Period__Group__6__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPeriodAccess().getMaxAttemptsAssignment_6()); }
	(rule__Period__MaxAttemptsAssignment_6)
	{ after(grammarAccess.getPeriodAccess().getMaxAttemptsAssignment_6()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Period__Group__7
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Period__Group__7__Impl
	rule__Period__Group__8
;
finally {
	restoreStackSize(stackSize);
}

rule__Period__Group__7__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPeriodAccess().getOnFailKeyword_7()); }
	'onFail:'
	{ after(grammarAccess.getPeriodAccess().getOnFailKeyword_7()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Period__Group__8
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Period__Group__8__Impl
	rule__Period__Group__9
;
finally {
	restoreStackSize(stackSize);
}

rule__Period__Group__8__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPeriodAccess().getOnFailMaxAttemptActionAssignment_8()); }
	(rule__Period__OnFailMaxAttemptActionAssignment_8)
	{ after(grammarAccess.getPeriodAccess().getOnFailMaxAttemptActionAssignment_8()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Period__Group__9
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Period__Group__9__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Period__Group__9__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPeriodAccess().getSemicolonKeyword_9()); }
	';'
	{ after(grammarAccess.getPeriodAccess().getSemicolonKeyword_9()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__MaxTries__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__MaxTries__Group__0__Impl
	rule__MaxTries__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__MaxTries__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMaxTriesAccess().getMaxTriesKeyword_0()); }
	'maxTries:'
	{ after(grammarAccess.getMaxTriesAccess().getMaxTriesKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__MaxTries__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__MaxTries__Group__1__Impl
	rule__MaxTries__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__MaxTries__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMaxTriesAccess().getNrTriesAssignment_1()); }
	(rule__MaxTries__NrTriesAssignment_1)
	{ after(grammarAccess.getMaxTriesAccess().getNrTriesAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__MaxTries__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__MaxTries__Group__2__Impl
	rule__MaxTries__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__MaxTries__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMaxTriesAccess().getOnFailKeyword_2()); }
	'onFail:'
	{ after(grammarAccess.getMaxTriesAccess().getOnFailKeyword_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__MaxTries__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__MaxTries__Group__3__Impl
	rule__MaxTries__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__MaxTries__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMaxTriesAccess().getOnFailActionAssignment_3()); }
	(rule__MaxTries__OnFailActionAssignment_3)
	{ after(grammarAccess.getMaxTriesAccess().getOnFailActionAssignment_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__MaxTries__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__MaxTries__Group__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__MaxTries__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMaxTriesAccess().getSemicolonKeyword_4()); }
	';'
	{ after(grammarAccess.getMaxTriesAccess().getSemicolonKeyword_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__MaxDuration__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__MaxDuration__Group__0__Impl
	rule__MaxDuration__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__MaxDuration__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMaxDurationAccess().getMaxDurationKeyword_0()); }
	'maxDuration:'
	{ after(grammarAccess.getMaxDurationAccess().getMaxDurationKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__MaxDuration__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__MaxDuration__Group__1__Impl
	rule__MaxDuration__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__MaxDuration__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMaxDurationAccess().getMaxDurationAssignment_1()); }
	(rule__MaxDuration__MaxDurationAssignment_1)
	{ after(grammarAccess.getMaxDurationAccess().getMaxDurationAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__MaxDuration__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__MaxDuration__Group__2__Impl
	rule__MaxDuration__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__MaxDuration__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMaxDurationAccess().getMsKeyword_2()); }
	'ms'
	{ after(grammarAccess.getMaxDurationAccess().getMsKeyword_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__MaxDuration__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__MaxDuration__Group__3__Impl
	rule__MaxDuration__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__MaxDuration__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMaxDurationAccess().getOnFailKeyword_3()); }
	'onFail:'
	{ after(grammarAccess.getMaxDurationAccess().getOnFailKeyword_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__MaxDuration__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__MaxDuration__Group__4__Impl
	rule__MaxDuration__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__MaxDuration__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMaxDurationAccess().getOnFailActionAssignment_4()); }
	(rule__MaxDuration__OnFailActionAssignment_4)
	{ after(grammarAccess.getMaxDurationAccess().getOnFailActionAssignment_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__MaxDuration__Group__5
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__MaxDuration__Group__5__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__MaxDuration__Group__5__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMaxDurationAccess().getSemicolonKeyword_5()); }
	';'
	{ after(grammarAccess.getMaxDurationAccess().getSemicolonKeyword_5()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Mitd__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Mitd__Group__0__Impl
	rule__Mitd__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Mitd__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMitdAccess().getMITDKeyword_0()); }
	'MITD:'
	{ after(grammarAccess.getMitdAccess().getMITDKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Mitd__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Mitd__Group__1__Impl
	rule__Mitd__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Mitd__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMitdAccess().getDurationAssignment_1()); }
	(rule__Mitd__DurationAssignment_1)
	{ after(grammarAccess.getMitdAccess().getDurationAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Mitd__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Mitd__Group__2__Impl
	rule__Mitd__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Mitd__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMitdAccess().getMsKeyword_2()); }
	'ms'
	{ after(grammarAccess.getMitdAccess().getMsKeyword_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Mitd__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Mitd__Group__3__Impl
	rule__Mitd__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Mitd__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMitdAccess().getDpTaskKeyword_3()); }
	'dpTask:'
	{ after(grammarAccess.getMitdAccess().getDpTaskKeyword_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Mitd__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Mitd__Group__4__Impl
	rule__Mitd__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__Mitd__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMitdAccess().getDependsOnAssignment_4()); }
	(rule__Mitd__DependsOnAssignment_4)
	{ after(grammarAccess.getMitdAccess().getDependsOnAssignment_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Mitd__Group__5
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Mitd__Group__5__Impl
	rule__Mitd__Group__6
;
finally {
	restoreStackSize(stackSize);
}

rule__Mitd__Group__5__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMitdAccess().getOnFailKeyword_5()); }
	'onFail:'
	{ after(grammarAccess.getMitdAccess().getOnFailKeyword_5()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Mitd__Group__6
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Mitd__Group__6__Impl
	rule__Mitd__Group__7
;
finally {
	restoreStackSize(stackSize);
}

rule__Mitd__Group__6__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMitdAccess().getOnFailActionAssignment_6()); }
	(rule__Mitd__OnFailActionAssignment_6)
	{ after(grammarAccess.getMitdAccess().getOnFailActionAssignment_6()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Mitd__Group__7
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Mitd__Group__7__Impl
	rule__Mitd__Group__8
;
finally {
	restoreStackSize(stackSize);
}

rule__Mitd__Group__7__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMitdAccess().getMaxAttemptKeyword_7()); }
	'maxAttempt:'
	{ after(grammarAccess.getMitdAccess().getMaxAttemptKeyword_7()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Mitd__Group__8
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Mitd__Group__8__Impl
	rule__Mitd__Group__9
;
finally {
	restoreStackSize(stackSize);
}

rule__Mitd__Group__8__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMitdAccess().getMaxAttemptsAssignment_8()); }
	(rule__Mitd__MaxAttemptsAssignment_8)
	{ after(grammarAccess.getMitdAccess().getMaxAttemptsAssignment_8()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Mitd__Group__9
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Mitd__Group__9__Impl
	rule__Mitd__Group__10
;
finally {
	restoreStackSize(stackSize);
}

rule__Mitd__Group__9__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMitdAccess().getOnFailKeyword_9()); }
	'onFail:'
	{ after(grammarAccess.getMitdAccess().getOnFailKeyword_9()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Mitd__Group__10
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Mitd__Group__10__Impl
	rule__Mitd__Group__11
;
finally {
	restoreStackSize(stackSize);
}

rule__Mitd__Group__10__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMitdAccess().getOnFailMaxAttemptActionAssignment_10()); }
	(rule__Mitd__OnFailMaxAttemptActionAssignment_10)
	{ after(grammarAccess.getMitdAccess().getOnFailMaxAttemptActionAssignment_10()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Mitd__Group__11
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Mitd__Group__11__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Mitd__Group__11__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMitdAccess().getSemicolonKeyword_11()); }
	';'
	{ after(grammarAccess.getMitdAccess().getSemicolonKeyword_11()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Collect__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Collect__Group__0__Impl
	rule__Collect__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Collect__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCollectAccess().getCollectKeyword_0()); }
	'collect:'
	{ after(grammarAccess.getCollectAccess().getCollectKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Collect__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Collect__Group__1__Impl
	rule__Collect__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Collect__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCollectAccess().getNrItemsAssignment_1()); }
	(rule__Collect__NrItemsAssignment_1)
	{ after(grammarAccess.getCollectAccess().getNrItemsAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Collect__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Collect__Group__2__Impl
	rule__Collect__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Collect__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCollectAccess().getDpTaskKeyword_2()); }
	'dpTask:'
	{ after(grammarAccess.getCollectAccess().getDpTaskKeyword_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Collect__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Collect__Group__3__Impl
	rule__Collect__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Collect__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCollectAccess().getDependsOnAssignment_3()); }
	(rule__Collect__DependsOnAssignment_3)
	{ after(grammarAccess.getCollectAccess().getDependsOnAssignment_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Collect__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Collect__Group__4__Impl
	rule__Collect__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__Collect__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCollectAccess().getOnFailKeyword_4()); }
	'onFail:'
	{ after(grammarAccess.getCollectAccess().getOnFailKeyword_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Collect__Group__5
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Collect__Group__5__Impl
	rule__Collect__Group__6
;
finally {
	restoreStackSize(stackSize);
}

rule__Collect__Group__5__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCollectAccess().getOnFailActionAssignment_5()); }
	(rule__Collect__OnFailActionAssignment_5)
	{ after(grammarAccess.getCollectAccess().getOnFailActionAssignment_5()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Collect__Group__6
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Collect__Group__6__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Collect__Group__6__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCollectAccess().getSemicolonKeyword_6()); }
	';'
	{ after(grammarAccess.getCollectAccess().getSemicolonKeyword_6()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__RestartPath__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__RestartPath__Group__0__Impl
	rule__RestartPath__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__RestartPath__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRestartPathAccess().getRestartPathAction_0()); }
	()
	{ after(grammarAccess.getRestartPathAccess().getRestartPathAction_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__RestartPath__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__RestartPath__Group__1__Impl
	rule__RestartPath__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__RestartPath__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRestartPathAccess().getRestartPathKeyword_1()); }
	'restartPath'
	{ after(grammarAccess.getRestartPathAccess().getRestartPathKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__RestartPath__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__RestartPath__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__RestartPath__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRestartPathAccess().getGroup_2()); }
	(rule__RestartPath__Group_2__0)?
	{ after(grammarAccess.getRestartPathAccess().getGroup_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__RestartPath__Group_2__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__RestartPath__Group_2__0__Impl
	rule__RestartPath__Group_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__RestartPath__Group_2__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRestartPathAccess().getPathKeyword_2_0()); }
	'Path:'
	{ after(grammarAccess.getRestartPathAccess().getPathKeyword_2_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__RestartPath__Group_2__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__RestartPath__Group_2__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__RestartPath__Group_2__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRestartPathAccess().getPathAssignment_2_1()); }
	(rule__RestartPath__PathAssignment_2_1)
	{ after(grammarAccess.getRestartPathAccess().getPathAssignment_2_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__SkipPath__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__SkipPath__Group__0__Impl
	rule__SkipPath__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__SkipPath__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSkipPathAccess().getSkipPathAction_0()); }
	()
	{ after(grammarAccess.getSkipPathAccess().getSkipPathAction_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__SkipPath__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__SkipPath__Group__1__Impl
	rule__SkipPath__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__SkipPath__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSkipPathAccess().getSkipPathKeyword_1()); }
	'skipPath'
	{ after(grammarAccess.getSkipPathAccess().getSkipPathKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__SkipPath__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__SkipPath__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__SkipPath__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSkipPathAccess().getGroup_2()); }
	(rule__SkipPath__Group_2__0)?
	{ after(grammarAccess.getSkipPathAccess().getGroup_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__SkipPath__Group_2__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__SkipPath__Group_2__0__Impl
	rule__SkipPath__Group_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__SkipPath__Group_2__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSkipPathAccess().getPathKeyword_2_0()); }
	'Path:'
	{ after(grammarAccess.getSkipPathAccess().getPathKeyword_2_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__SkipPath__Group_2__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__SkipPath__Group_2__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__SkipPath__Group_2__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSkipPathAccess().getPathAssignment_2_1()); }
	(rule__SkipPath__PathAssignment_2_1)
	{ after(grammarAccess.getSkipPathAccess().getPathAssignment_2_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__RestartTask__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__RestartTask__Group__0__Impl
	rule__RestartTask__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__RestartTask__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRestartTaskAccess().getRestartTaskAction_0()); }
	()
	{ after(grammarAccess.getRestartTaskAccess().getRestartTaskAction_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__RestartTask__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__RestartTask__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__RestartTask__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRestartTaskAccess().getRestartTaskKeyword_1()); }
	'restartTask'
	{ after(grammarAccess.getRestartTaskAccess().getRestartTaskKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__SkipTask__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__SkipTask__Group__0__Impl
	rule__SkipTask__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__SkipTask__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSkipTaskAccess().getSkipTaskAction_0()); }
	()
	{ after(grammarAccess.getSkipTaskAccess().getSkipTaskAction_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__SkipTask__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__SkipTask__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__SkipTask__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSkipTaskAccess().getSkipTaskKeyword_1()); }
	'skipTask'
	{ after(grammarAccess.getSkipTaskAccess().getSkipTaskKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ArtemisModel__TasksAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getArtemisModelAccess().getTasksTaskParserRuleCall_0_0()); }
		ruleTask
		{ after(grammarAccess.getArtemisModelAccess().getTasksTaskParserRuleCall_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ArtemisModel__PathsAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getArtemisModelAccess().getPathsPathParserRuleCall_1_0()); }
		rulePath
		{ after(grammarAccess.getArtemisModelAccess().getPathsPathParserRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ArtemisModel__TaskPropertiesAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getArtemisModelAccess().getTaskPropertiesTaskPropertiesParserRuleCall_2_0()); }
		ruleTaskProperties
		{ after(grammarAccess.getArtemisModelAccess().getTaskPropertiesTaskPropertiesParserRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Task__NameAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getTaskAccess().getNameIDTerminalRuleCall_1_0()); }
		RULE_ID
		{ after(grammarAccess.getTaskAccess().getNameIDTerminalRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Path__IdAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getPathAccess().getIdINTTerminalRuleCall_2_0()); }
		RULE_INT
		{ after(grammarAccess.getPathAccess().getIdINTTerminalRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Path__TasksAssignment_3_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getPathAccess().getTasksTaskCrossReference_3_1_0()); }
		(
			{ before(grammarAccess.getPathAccess().getTasksTaskIDTerminalRuleCall_3_1_0_1()); }
			RULE_ID
			{ after(grammarAccess.getPathAccess().getTasksTaskIDTerminalRuleCall_3_1_0_1()); }
		)
		{ after(grammarAccess.getPathAccess().getTasksTaskCrossReference_3_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__TaskProperties__TaskAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getTaskPropertiesAccess().getTaskTaskCrossReference_0_0()); }
		(
			{ before(grammarAccess.getTaskPropertiesAccess().getTaskTaskIDTerminalRuleCall_0_0_1()); }
			RULE_ID
			{ after(grammarAccess.getTaskPropertiesAccess().getTaskTaskIDTerminalRuleCall_0_0_1()); }
		)
		{ after(grammarAccess.getTaskPropertiesAccess().getTaskTaskCrossReference_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__TaskProperties__PropertiesAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getTaskPropertiesAccess().getPropertiesPropertyParserRuleCall_2_0()); }
		ruleProperty
		{ after(grammarAccess.getTaskPropertiesAccess().getPropertiesPropertyParserRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Period__PeriodAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getPeriodAccess().getPeriodFLOATTerminalRuleCall_1_0()); }
		RULE_FLOAT
		{ after(grammarAccess.getPeriodAccess().getPeriodFLOATTerminalRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Period__OnFailActionAssignment_4
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getPeriodAccess().getOnFailActionOnFailActionParserRuleCall_4_0()); }
		ruleOnFailAction
		{ after(grammarAccess.getPeriodAccess().getOnFailActionOnFailActionParserRuleCall_4_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Period__MaxAttemptsAssignment_6
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getPeriodAccess().getMaxAttemptsINTTerminalRuleCall_6_0()); }
		RULE_INT
		{ after(grammarAccess.getPeriodAccess().getMaxAttemptsINTTerminalRuleCall_6_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Period__OnFailMaxAttemptActionAssignment_8
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getPeriodAccess().getOnFailMaxAttemptActionOnFailActionParserRuleCall_8_0()); }
		ruleOnFailAction
		{ after(grammarAccess.getPeriodAccess().getOnFailMaxAttemptActionOnFailActionParserRuleCall_8_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__MaxTries__NrTriesAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getMaxTriesAccess().getNrTriesINTTerminalRuleCall_1_0()); }
		RULE_INT
		{ after(grammarAccess.getMaxTriesAccess().getNrTriesINTTerminalRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__MaxTries__OnFailActionAssignment_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getMaxTriesAccess().getOnFailActionOnFailActionParserRuleCall_3_0()); }
		ruleOnFailAction
		{ after(grammarAccess.getMaxTriesAccess().getOnFailActionOnFailActionParserRuleCall_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__MaxDuration__MaxDurationAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getMaxDurationAccess().getMaxDurationFLOATTerminalRuleCall_1_0()); }
		RULE_FLOAT
		{ after(grammarAccess.getMaxDurationAccess().getMaxDurationFLOATTerminalRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__MaxDuration__OnFailActionAssignment_4
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getMaxDurationAccess().getOnFailActionOnFailActionParserRuleCall_4_0()); }
		ruleOnFailAction
		{ after(grammarAccess.getMaxDurationAccess().getOnFailActionOnFailActionParserRuleCall_4_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Mitd__DurationAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getMitdAccess().getDurationFLOATTerminalRuleCall_1_0()); }
		RULE_FLOAT
		{ after(grammarAccess.getMitdAccess().getDurationFLOATTerminalRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Mitd__DependsOnAssignment_4
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getMitdAccess().getDependsOnTaskCrossReference_4_0()); }
		(
			{ before(grammarAccess.getMitdAccess().getDependsOnTaskIDTerminalRuleCall_4_0_1()); }
			RULE_ID
			{ after(grammarAccess.getMitdAccess().getDependsOnTaskIDTerminalRuleCall_4_0_1()); }
		)
		{ after(grammarAccess.getMitdAccess().getDependsOnTaskCrossReference_4_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Mitd__OnFailActionAssignment_6
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getMitdAccess().getOnFailActionOnFailActionParserRuleCall_6_0()); }
		ruleOnFailAction
		{ after(grammarAccess.getMitdAccess().getOnFailActionOnFailActionParserRuleCall_6_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Mitd__MaxAttemptsAssignment_8
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getMitdAccess().getMaxAttemptsINTTerminalRuleCall_8_0()); }
		RULE_INT
		{ after(grammarAccess.getMitdAccess().getMaxAttemptsINTTerminalRuleCall_8_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Mitd__OnFailMaxAttemptActionAssignment_10
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getMitdAccess().getOnFailMaxAttemptActionOnFailActionParserRuleCall_10_0()); }
		ruleOnFailAction
		{ after(grammarAccess.getMitdAccess().getOnFailMaxAttemptActionOnFailActionParserRuleCall_10_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Collect__NrItemsAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getCollectAccess().getNrItemsINTTerminalRuleCall_1_0()); }
		RULE_INT
		{ after(grammarAccess.getCollectAccess().getNrItemsINTTerminalRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Collect__DependsOnAssignment_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getCollectAccess().getDependsOnTaskCrossReference_3_0()); }
		(
			{ before(grammarAccess.getCollectAccess().getDependsOnTaskIDTerminalRuleCall_3_0_1()); }
			RULE_ID
			{ after(grammarAccess.getCollectAccess().getDependsOnTaskIDTerminalRuleCall_3_0_1()); }
		)
		{ after(grammarAccess.getCollectAccess().getDependsOnTaskCrossReference_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Collect__OnFailActionAssignment_5
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getCollectAccess().getOnFailActionOnFailActionParserRuleCall_5_0()); }
		ruleOnFailAction
		{ after(grammarAccess.getCollectAccess().getOnFailActionOnFailActionParserRuleCall_5_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__RestartPath__PathAssignment_2_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getRestartPathAccess().getPathINTTerminalRuleCall_2_1_0()); }
		RULE_INT
		{ after(grammarAccess.getRestartPathAccess().getPathINTTerminalRuleCall_2_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__SkipPath__PathAssignment_2_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getSkipPathAccess().getPathINTTerminalRuleCall_2_1_0()); }
		RULE_INT
		{ after(grammarAccess.getSkipPathAccess().getPathINTTerminalRuleCall_2_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

RULE_FLOAT : RULE_INT '.' RULE_INT (('E'|'e') '-'? RULE_INT)?;

RULE_ID : '^'? ('a'..'z'|'A'..'Z'|'_') ('a'..'z'|'A'..'Z'|'_'|'0'..'9')*;

RULE_INT : ('0'..'9')+;

RULE_STRING : ('"' ('\\' .|~(('\\'|'"')))* '"'|'\'' ('\\' .|~(('\\'|'\'')))* '\'');

RULE_ML_COMMENT : '/*' ( options {greedy=false;} : . )*'*/';

RULE_SL_COMMENT : '//' ~(('\n'|'\r'))* ('\r'? '\n')?;

RULE_WS : (' '|'\t'|'\r'|'\n')+;

RULE_ANY_OTHER : .;
