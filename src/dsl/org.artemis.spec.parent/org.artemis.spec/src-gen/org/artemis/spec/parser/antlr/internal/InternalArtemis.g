/*
 * generated by Xtext 2.25.0
 */
grammar InternalArtemis;

options {
	superClass=AbstractInternalAntlrParser;
}

@lexer::header {
package org.artemis.spec.parser.antlr.internal;

// Hack: Use our own Lexer superclass by means of import. 
// Currently there is no other way to specify the superclass for the lexer.
import org.eclipse.xtext.parser.antlr.Lexer;
}

@parser::header {
package org.artemis.spec.parser.antlr.internal;

import org.eclipse.xtext.*;
import org.eclipse.xtext.parser.*;
import org.eclipse.xtext.parser.impl.*;
import org.eclipse.emf.ecore.util.EcoreUtil;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.xtext.parser.antlr.AbstractInternalAntlrParser;
import org.eclipse.xtext.parser.antlr.XtextTokenStream;
import org.eclipse.xtext.parser.antlr.XtextTokenStream.HiddenTokens;
import org.eclipse.xtext.parser.antlr.AntlrDatatypeRuleToken;
import org.artemis.spec.services.ArtemisGrammarAccess;

}

@parser::members {

 	private ArtemisGrammarAccess grammarAccess;

    public InternalArtemisParser(TokenStream input, ArtemisGrammarAccess grammarAccess) {
        this(input);
        this.grammarAccess = grammarAccess;
        registerRules(grammarAccess.getGrammar());
    }

    @Override
    protected String getFirstRuleName() {
    	return "ArtemisModel";
   	}

   	@Override
   	protected ArtemisGrammarAccess getGrammarAccess() {
   		return grammarAccess;
   	}

}

@rulecatch {
    catch (RecognitionException re) {
        recover(input,re);
        appendSkippedTokens();
    }
}

// Entry rule entryRuleArtemisModel
entryRuleArtemisModel returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getArtemisModelRule()); }
	iv_ruleArtemisModel=ruleArtemisModel
	{ $current=$iv_ruleArtemisModel.current; }
	EOF;

// Rule ArtemisModel
ruleArtemisModel returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				{
					newCompositeNode(grammarAccess.getArtemisModelAccess().getTasksTaskParserRuleCall_0_0());
				}
				lv_tasks_0_0=ruleTask
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getArtemisModelRule());
					}
					add(
						$current,
						"tasks",
						lv_tasks_0_0,
						"org.artemis.spec.Artemis.Task");
					afterParserOrEnumRuleCall();
				}
			)
		)+
		(
			(
				{
					newCompositeNode(grammarAccess.getArtemisModelAccess().getPathsPathParserRuleCall_1_0());
				}
				lv_paths_1_0=rulePath
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getArtemisModelRule());
					}
					add(
						$current,
						"paths",
						lv_paths_1_0,
						"org.artemis.spec.Artemis.Path");
					afterParserOrEnumRuleCall();
				}
			)
		)+
		(
			(
				{
					newCompositeNode(grammarAccess.getArtemisModelAccess().getTaskPropertiesTaskPropertiesParserRuleCall_2_0());
				}
				lv_taskProperties_2_0=ruleTaskProperties
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getArtemisModelRule());
					}
					add(
						$current,
						"taskProperties",
						lv_taskProperties_2_0,
						"org.artemis.spec.Artemis.TaskProperties");
					afterParserOrEnumRuleCall();
				}
			)
		)+
	)
;

// Entry rule entryRuleTask
entryRuleTask returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getTaskRule()); }
	iv_ruleTask=ruleTask
	{ $current=$iv_ruleTask.current; }
	EOF;

// Rule Task
ruleTask returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='Task'
		{
			newLeafNode(otherlv_0, grammarAccess.getTaskAccess().getTaskKeyword_0());
		}
		(
			(
				lv_name_1_0=RULE_ID
				{
					newLeafNode(lv_name_1_0, grammarAccess.getTaskAccess().getNameIDTerminalRuleCall_1_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getTaskRule());
					}
					setWithLastConsumed(
						$current,
						"name",
						lv_name_1_0,
						"org.eclipse.xtext.common.Terminals.ID");
				}
			)
		)
	)
;

// Entry rule entryRulePath
entryRulePath returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getPathRule()); }
	iv_rulePath=rulePath
	{ $current=$iv_rulePath.current; }
	EOF;

// Rule Path
rulePath returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='('
		{
			newLeafNode(otherlv_0, grammarAccess.getPathAccess().getLeftParenthesisKeyword_0());
		}
		otherlv_1='Path:'
		{
			newLeafNode(otherlv_1, grammarAccess.getPathAccess().getPathKeyword_1());
		}
		(
			(
				lv_id_2_0=RULE_INT
				{
					newLeafNode(lv_id_2_0, grammarAccess.getPathAccess().getIdINTTerminalRuleCall_2_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getPathRule());
					}
					setWithLastConsumed(
						$current,
						"id",
						lv_id_2_0,
						"org.eclipse.xtext.common.Terminals.INT");
				}
			)
		)
		(
			otherlv_3=','
			{
				newLeafNode(otherlv_3, grammarAccess.getPathAccess().getCommaKeyword_3_0());
			}
			(
				(
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getPathRule());
						}
					}
					otherlv_4=RULE_ID
					{
						newLeafNode(otherlv_4, grammarAccess.getPathAccess().getTasksTaskCrossReference_3_1_0());
					}
				)
			)
		)+
		otherlv_5=')'
		{
			newLeafNode(otherlv_5, grammarAccess.getPathAccess().getRightParenthesisKeyword_4());
		}
	)
;

// Entry rule entryRuleTaskProperties
entryRuleTaskProperties returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getTaskPropertiesRule()); }
	iv_ruleTaskProperties=ruleTaskProperties
	{ $current=$iv_ruleTaskProperties.current; }
	EOF;

// Rule TaskProperties
ruleTaskProperties returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getTaskPropertiesRule());
					}
				}
				otherlv_0=RULE_ID
				{
					newLeafNode(otherlv_0, grammarAccess.getTaskPropertiesAccess().getTaskTaskCrossReference_0_0());
				}
			)
		)
		otherlv_1='{'
		{
			newLeafNode(otherlv_1, grammarAccess.getTaskPropertiesAccess().getLeftCurlyBracketKeyword_1());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getTaskPropertiesAccess().getPropertiesPropertyParserRuleCall_2_0());
				}
				lv_properties_2_0=ruleProperty
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getTaskPropertiesRule());
					}
					add(
						$current,
						"properties",
						lv_properties_2_0,
						"org.artemis.spec.Artemis.Property");
					afterParserOrEnumRuleCall();
				}
			)
		)+
		otherlv_3='}'
		{
			newLeafNode(otherlv_3, grammarAccess.getTaskPropertiesAccess().getRightCurlyBracketKeyword_3());
		}
	)
;

// Entry rule entryRuleProperty
entryRuleProperty returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getPropertyRule()); }
	iv_ruleProperty=ruleProperty
	{ $current=$iv_ruleProperty.current; }
	EOF;

// Rule Property
ruleProperty returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		{
			newCompositeNode(grammarAccess.getPropertyAccess().getPeriodParserRuleCall_0());
		}
		this_Period_0=rulePeriod
		{
			$current = $this_Period_0.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getPropertyAccess().getMaxTriesParserRuleCall_1());
		}
		this_MaxTries_1=ruleMaxTries
		{
			$current = $this_MaxTries_1.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getPropertyAccess().getMaxDurationParserRuleCall_2());
		}
		this_MaxDuration_2=ruleMaxDuration
		{
			$current = $this_MaxDuration_2.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getPropertyAccess().getMitdParserRuleCall_3());
		}
		this_Mitd_3=ruleMitd
		{
			$current = $this_Mitd_3.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getPropertyAccess().getCollectParserRuleCall_4());
		}
		this_Collect_4=ruleCollect
		{
			$current = $this_Collect_4.current;
			afterParserOrEnumRuleCall();
		}
	)
;

// Entry rule entryRulePeriod
entryRulePeriod returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getPeriodRule()); }
	iv_rulePeriod=rulePeriod
	{ $current=$iv_rulePeriod.current; }
	EOF;

// Rule Period
rulePeriod returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='period:'
		{
			newLeafNode(otherlv_0, grammarAccess.getPeriodAccess().getPeriodKeyword_0());
		}
		(
			(
				lv_period_1_0=RULE_FLOAT
				{
					newLeafNode(lv_period_1_0, grammarAccess.getPeriodAccess().getPeriodFLOATTerminalRuleCall_1_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getPeriodRule());
					}
					setWithLastConsumed(
						$current,
						"period",
						lv_period_1_0,
						"org.artemis.spec.Artemis.FLOAT");
				}
			)
		)
		otherlv_2='ms'
		{
			newLeafNode(otherlv_2, grammarAccess.getPeriodAccess().getMsKeyword_2());
		}
		otherlv_3='onFail:'
		{
			newLeafNode(otherlv_3, grammarAccess.getPeriodAccess().getOnFailKeyword_3());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getPeriodAccess().getOnFailActionOnFailActionParserRuleCall_4_0());
				}
				lv_onFailAction_4_0=ruleOnFailAction
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getPeriodRule());
					}
					set(
						$current,
						"onFailAction",
						lv_onFailAction_4_0,
						"org.artemis.spec.Artemis.OnFailAction");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_5='maxAttempt:'
		{
			newLeafNode(otherlv_5, grammarAccess.getPeriodAccess().getMaxAttemptKeyword_5());
		}
		(
			(
				lv_maxAttempts_6_0=RULE_INT
				{
					newLeafNode(lv_maxAttempts_6_0, grammarAccess.getPeriodAccess().getMaxAttemptsINTTerminalRuleCall_6_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getPeriodRule());
					}
					setWithLastConsumed(
						$current,
						"maxAttempts",
						lv_maxAttempts_6_0,
						"org.eclipse.xtext.common.Terminals.INT");
				}
			)
		)
		otherlv_7='onFail:'
		{
			newLeafNode(otherlv_7, grammarAccess.getPeriodAccess().getOnFailKeyword_7());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getPeriodAccess().getOnFailMaxAttemptActionOnFailActionParserRuleCall_8_0());
				}
				lv_onFailMaxAttemptAction_8_0=ruleOnFailAction
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getPeriodRule());
					}
					set(
						$current,
						"onFailMaxAttemptAction",
						lv_onFailMaxAttemptAction_8_0,
						"org.artemis.spec.Artemis.OnFailAction");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_9=';'
		{
			newLeafNode(otherlv_9, grammarAccess.getPeriodAccess().getSemicolonKeyword_9());
		}
	)
;

// Entry rule entryRuleMaxTries
entryRuleMaxTries returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getMaxTriesRule()); }
	iv_ruleMaxTries=ruleMaxTries
	{ $current=$iv_ruleMaxTries.current; }
	EOF;

// Rule MaxTries
ruleMaxTries returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='maxTries:'
		{
			newLeafNode(otherlv_0, grammarAccess.getMaxTriesAccess().getMaxTriesKeyword_0());
		}
		(
			(
				lv_nrTries_1_0=RULE_INT
				{
					newLeafNode(lv_nrTries_1_0, grammarAccess.getMaxTriesAccess().getNrTriesINTTerminalRuleCall_1_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getMaxTriesRule());
					}
					setWithLastConsumed(
						$current,
						"nrTries",
						lv_nrTries_1_0,
						"org.eclipse.xtext.common.Terminals.INT");
				}
			)
		)
		otherlv_2='onFail:'
		{
			newLeafNode(otherlv_2, grammarAccess.getMaxTriesAccess().getOnFailKeyword_2());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getMaxTriesAccess().getOnFailActionOnFailActionParserRuleCall_3_0());
				}
				lv_onFailAction_3_0=ruleOnFailAction
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getMaxTriesRule());
					}
					set(
						$current,
						"onFailAction",
						lv_onFailAction_3_0,
						"org.artemis.spec.Artemis.OnFailAction");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_4=';'
		{
			newLeafNode(otherlv_4, grammarAccess.getMaxTriesAccess().getSemicolonKeyword_4());
		}
	)
;

// Entry rule entryRuleMaxDuration
entryRuleMaxDuration returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getMaxDurationRule()); }
	iv_ruleMaxDuration=ruleMaxDuration
	{ $current=$iv_ruleMaxDuration.current; }
	EOF;

// Rule MaxDuration
ruleMaxDuration returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='maxDuration:'
		{
			newLeafNode(otherlv_0, grammarAccess.getMaxDurationAccess().getMaxDurationKeyword_0());
		}
		(
			(
				lv_maxDuration_1_0=RULE_FLOAT
				{
					newLeafNode(lv_maxDuration_1_0, grammarAccess.getMaxDurationAccess().getMaxDurationFLOATTerminalRuleCall_1_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getMaxDurationRule());
					}
					setWithLastConsumed(
						$current,
						"maxDuration",
						lv_maxDuration_1_0,
						"org.artemis.spec.Artemis.FLOAT");
				}
			)
		)
		otherlv_2='ms'
		{
			newLeafNode(otherlv_2, grammarAccess.getMaxDurationAccess().getMsKeyword_2());
		}
		otherlv_3='onFail:'
		{
			newLeafNode(otherlv_3, grammarAccess.getMaxDurationAccess().getOnFailKeyword_3());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getMaxDurationAccess().getOnFailActionOnFailActionParserRuleCall_4_0());
				}
				lv_onFailAction_4_0=ruleOnFailAction
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getMaxDurationRule());
					}
					set(
						$current,
						"onFailAction",
						lv_onFailAction_4_0,
						"org.artemis.spec.Artemis.OnFailAction");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_5=';'
		{
			newLeafNode(otherlv_5, grammarAccess.getMaxDurationAccess().getSemicolonKeyword_5());
		}
	)
;

// Entry rule entryRuleMitd
entryRuleMitd returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getMitdRule()); }
	iv_ruleMitd=ruleMitd
	{ $current=$iv_ruleMitd.current; }
	EOF;

// Rule Mitd
ruleMitd returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='MITD:'
		{
			newLeafNode(otherlv_0, grammarAccess.getMitdAccess().getMITDKeyword_0());
		}
		(
			(
				lv_duration_1_0=RULE_FLOAT
				{
					newLeafNode(lv_duration_1_0, grammarAccess.getMitdAccess().getDurationFLOATTerminalRuleCall_1_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getMitdRule());
					}
					setWithLastConsumed(
						$current,
						"duration",
						lv_duration_1_0,
						"org.artemis.spec.Artemis.FLOAT");
				}
			)
		)
		otherlv_2='ms'
		{
			newLeafNode(otherlv_2, grammarAccess.getMitdAccess().getMsKeyword_2());
		}
		otherlv_3='dpTask:'
		{
			newLeafNode(otherlv_3, grammarAccess.getMitdAccess().getDpTaskKeyword_3());
		}
		(
			(
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getMitdRule());
					}
				}
				otherlv_4=RULE_ID
				{
					newLeafNode(otherlv_4, grammarAccess.getMitdAccess().getDependsOnTaskCrossReference_4_0());
				}
			)
		)
		otherlv_5='onFail:'
		{
			newLeafNode(otherlv_5, grammarAccess.getMitdAccess().getOnFailKeyword_5());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getMitdAccess().getOnFailActionOnFailActionParserRuleCall_6_0());
				}
				lv_onFailAction_6_0=ruleOnFailAction
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getMitdRule());
					}
					set(
						$current,
						"onFailAction",
						lv_onFailAction_6_0,
						"org.artemis.spec.Artemis.OnFailAction");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_7='maxAttempt:'
		{
			newLeafNode(otherlv_7, grammarAccess.getMitdAccess().getMaxAttemptKeyword_7());
		}
		(
			(
				lv_maxAttempts_8_0=RULE_INT
				{
					newLeafNode(lv_maxAttempts_8_0, grammarAccess.getMitdAccess().getMaxAttemptsINTTerminalRuleCall_8_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getMitdRule());
					}
					setWithLastConsumed(
						$current,
						"maxAttempts",
						lv_maxAttempts_8_0,
						"org.eclipse.xtext.common.Terminals.INT");
				}
			)
		)
		otherlv_9='onFail:'
		{
			newLeafNode(otherlv_9, grammarAccess.getMitdAccess().getOnFailKeyword_9());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getMitdAccess().getOnFailMaxAttemptActionOnFailActionParserRuleCall_10_0());
				}
				lv_onFailMaxAttemptAction_10_0=ruleOnFailAction
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getMitdRule());
					}
					set(
						$current,
						"onFailMaxAttemptAction",
						lv_onFailMaxAttemptAction_10_0,
						"org.artemis.spec.Artemis.OnFailAction");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_11=';'
		{
			newLeafNode(otherlv_11, grammarAccess.getMitdAccess().getSemicolonKeyword_11());
		}
	)
;

// Entry rule entryRuleCollect
entryRuleCollect returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getCollectRule()); }
	iv_ruleCollect=ruleCollect
	{ $current=$iv_ruleCollect.current; }
	EOF;

// Rule Collect
ruleCollect returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='collect:'
		{
			newLeafNode(otherlv_0, grammarAccess.getCollectAccess().getCollectKeyword_0());
		}
		(
			(
				lv_nrItems_1_0=RULE_INT
				{
					newLeafNode(lv_nrItems_1_0, grammarAccess.getCollectAccess().getNrItemsINTTerminalRuleCall_1_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getCollectRule());
					}
					setWithLastConsumed(
						$current,
						"nrItems",
						lv_nrItems_1_0,
						"org.eclipse.xtext.common.Terminals.INT");
				}
			)
		)
		otherlv_2='dpTask:'
		{
			newLeafNode(otherlv_2, grammarAccess.getCollectAccess().getDpTaskKeyword_2());
		}
		(
			(
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getCollectRule());
					}
				}
				otherlv_3=RULE_ID
				{
					newLeafNode(otherlv_3, grammarAccess.getCollectAccess().getDependsOnTaskCrossReference_3_0());
				}
			)
		)
		otherlv_4='onFail:'
		{
			newLeafNode(otherlv_4, grammarAccess.getCollectAccess().getOnFailKeyword_4());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getCollectAccess().getOnFailActionOnFailActionParserRuleCall_5_0());
				}
				lv_onFailAction_5_0=ruleOnFailAction
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getCollectRule());
					}
					set(
						$current,
						"onFailAction",
						lv_onFailAction_5_0,
						"org.artemis.spec.Artemis.OnFailAction");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_6=';'
		{
			newLeafNode(otherlv_6, grammarAccess.getCollectAccess().getSemicolonKeyword_6());
		}
	)
;

// Entry rule entryRuleOnFailAction
entryRuleOnFailAction returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getOnFailActionRule()); }
	iv_ruleOnFailAction=ruleOnFailAction
	{ $current=$iv_ruleOnFailAction.current; }
	EOF;

// Rule OnFailAction
ruleOnFailAction returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		{
			newCompositeNode(grammarAccess.getOnFailActionAccess().getRestartPathParserRuleCall_0());
		}
		this_RestartPath_0=ruleRestartPath
		{
			$current = $this_RestartPath_0.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getOnFailActionAccess().getSkipPathParserRuleCall_1());
		}
		this_SkipPath_1=ruleSkipPath
		{
			$current = $this_SkipPath_1.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getOnFailActionAccess().getRestartTaskParserRuleCall_2());
		}
		this_RestartTask_2=ruleRestartTask
		{
			$current = $this_RestartTask_2.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getOnFailActionAccess().getSkipTaskParserRuleCall_3());
		}
		this_SkipTask_3=ruleSkipTask
		{
			$current = $this_SkipTask_3.current;
			afterParserOrEnumRuleCall();
		}
	)
;

// Entry rule entryRuleRestartPath
entryRuleRestartPath returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getRestartPathRule()); }
	iv_ruleRestartPath=ruleRestartPath
	{ $current=$iv_ruleRestartPath.current; }
	EOF;

// Rule RestartPath
ruleRestartPath returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				$current = forceCreateModelElement(
					grammarAccess.getRestartPathAccess().getRestartPathAction_0(),
					$current);
			}
		)
		otherlv_1='restartPath'
		{
			newLeafNode(otherlv_1, grammarAccess.getRestartPathAccess().getRestartPathKeyword_1());
		}
		(
			otherlv_2='Path:'
			{
				newLeafNode(otherlv_2, grammarAccess.getRestartPathAccess().getPathKeyword_2_0());
			}
			(
				(
					lv_path_3_0=RULE_INT
					{
						newLeafNode(lv_path_3_0, grammarAccess.getRestartPathAccess().getPathINTTerminalRuleCall_2_1_0());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getRestartPathRule());
						}
						setWithLastConsumed(
							$current,
							"path",
							lv_path_3_0,
							"org.eclipse.xtext.common.Terminals.INT");
					}
				)
			)
		)?
	)
;

// Entry rule entryRuleSkipPath
entryRuleSkipPath returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getSkipPathRule()); }
	iv_ruleSkipPath=ruleSkipPath
	{ $current=$iv_ruleSkipPath.current; }
	EOF;

// Rule SkipPath
ruleSkipPath returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				$current = forceCreateModelElement(
					grammarAccess.getSkipPathAccess().getSkipPathAction_0(),
					$current);
			}
		)
		otherlv_1='skipPath'
		{
			newLeafNode(otherlv_1, grammarAccess.getSkipPathAccess().getSkipPathKeyword_1());
		}
		(
			otherlv_2='Path:'
			{
				newLeafNode(otherlv_2, grammarAccess.getSkipPathAccess().getPathKeyword_2_0());
			}
			(
				(
					lv_path_3_0=RULE_INT
					{
						newLeafNode(lv_path_3_0, grammarAccess.getSkipPathAccess().getPathINTTerminalRuleCall_2_1_0());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getSkipPathRule());
						}
						setWithLastConsumed(
							$current,
							"path",
							lv_path_3_0,
							"org.eclipse.xtext.common.Terminals.INT");
					}
				)
			)
		)?
	)
;

// Entry rule entryRuleRestartTask
entryRuleRestartTask returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getRestartTaskRule()); }
	iv_ruleRestartTask=ruleRestartTask
	{ $current=$iv_ruleRestartTask.current; }
	EOF;

// Rule RestartTask
ruleRestartTask returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				$current = forceCreateModelElement(
					grammarAccess.getRestartTaskAccess().getRestartTaskAction_0(),
					$current);
			}
		)
		otherlv_1='restartTask'
		{
			newLeafNode(otherlv_1, grammarAccess.getRestartTaskAccess().getRestartTaskKeyword_1());
		}
	)
;

// Entry rule entryRuleSkipTask
entryRuleSkipTask returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getSkipTaskRule()); }
	iv_ruleSkipTask=ruleSkipTask
	{ $current=$iv_ruleSkipTask.current; }
	EOF;

// Rule SkipTask
ruleSkipTask returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				$current = forceCreateModelElement(
					grammarAccess.getSkipTaskAccess().getSkipTaskAction_0(),
					$current);
			}
		)
		otherlv_1='skipTask'
		{
			newLeafNode(otherlv_1, grammarAccess.getSkipTaskAccess().getSkipTaskKeyword_1());
		}
	)
;

RULE_FLOAT : RULE_INT '.' RULE_INT (('E'|'e') '-'? RULE_INT)?;

RULE_ID : '^'? ('a'..'z'|'A'..'Z'|'_') ('a'..'z'|'A'..'Z'|'_'|'0'..'9')*;

RULE_INT : ('0'..'9')+;

RULE_STRING : ('"' ('\\' .|~(('\\'|'"')))* '"'|'\'' ('\\' .|~(('\\'|'\'')))* '\'');

RULE_ML_COMMENT : '/*' ( options {greedy=false;} : . )*'*/';

RULE_SL_COMMENT : '//' ~(('\n'|'\r'))* ('\r'? '\n')?;

RULE_WS : (' '|'\t'|'\r'|'\n')+;

RULE_ANY_OTHER : .;
