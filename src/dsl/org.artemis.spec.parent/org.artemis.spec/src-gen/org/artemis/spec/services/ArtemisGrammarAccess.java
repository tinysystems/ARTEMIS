/*
 * generated by Xtext 2.25.0
 */
package org.artemis.spec.services;

import com.google.inject.Inject;
import com.google.inject.Singleton;
import java.util.List;
import org.eclipse.xtext.Action;
import org.eclipse.xtext.Alternatives;
import org.eclipse.xtext.Assignment;
import org.eclipse.xtext.CrossReference;
import org.eclipse.xtext.Grammar;
import org.eclipse.xtext.GrammarUtil;
import org.eclipse.xtext.Group;
import org.eclipse.xtext.Keyword;
import org.eclipse.xtext.ParserRule;
import org.eclipse.xtext.RuleCall;
import org.eclipse.xtext.TerminalRule;
import org.eclipse.xtext.common.services.TerminalsGrammarAccess;
import org.eclipse.xtext.service.AbstractElementFinder;
import org.eclipse.xtext.service.GrammarProvider;

@Singleton
public class ArtemisGrammarAccess extends AbstractElementFinder.AbstractGrammarElementFinder {
	
	public class ArtemisModelElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.artemis.spec.Artemis.ArtemisModel");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Assignment cTasksAssignment_0 = (Assignment)cGroup.eContents().get(0);
		private final RuleCall cTasksTaskParserRuleCall_0_0 = (RuleCall)cTasksAssignment_0.eContents().get(0);
		private final Assignment cPathsAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cPathsPathParserRuleCall_1_0 = (RuleCall)cPathsAssignment_1.eContents().get(0);
		private final Assignment cTaskPropertiesAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cTaskPropertiesTaskPropertiesParserRuleCall_2_0 = (RuleCall)cTaskPropertiesAssignment_2.eContents().get(0);
		
		//ArtemisModel:
		//    tasks += Task+
		//    paths += Path+
		//    taskProperties += TaskProperties +
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//tasks += Task+
		//paths += Path+
		//taskProperties += TaskProperties +
		public Group getGroup() { return cGroup; }
		
		//tasks += Task+
		public Assignment getTasksAssignment_0() { return cTasksAssignment_0; }
		
		//Task
		public RuleCall getTasksTaskParserRuleCall_0_0() { return cTasksTaskParserRuleCall_0_0; }
		
		//paths += Path+
		public Assignment getPathsAssignment_1() { return cPathsAssignment_1; }
		
		//Path
		public RuleCall getPathsPathParserRuleCall_1_0() { return cPathsPathParserRuleCall_1_0; }
		
		//taskProperties += TaskProperties +
		public Assignment getTaskPropertiesAssignment_2() { return cTaskPropertiesAssignment_2; }
		
		//TaskProperties
		public RuleCall getTaskPropertiesTaskPropertiesParserRuleCall_2_0() { return cTaskPropertiesTaskPropertiesParserRuleCall_2_0; }
	}
	public class TaskElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.artemis.spec.Artemis.Task");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cTaskKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Assignment cNameAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cNameIDTerminalRuleCall_1_0 = (RuleCall)cNameAssignment_1.eContents().get(0);
		
		//Task:
		//    'Task' name = ID
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//'Task' name = ID
		public Group getGroup() { return cGroup; }
		
		//'Task'
		public Keyword getTaskKeyword_0() { return cTaskKeyword_0; }
		
		//name = ID
		public Assignment getNameAssignment_1() { return cNameAssignment_1; }
		
		//ID
		public RuleCall getNameIDTerminalRuleCall_1_0() { return cNameIDTerminalRuleCall_1_0; }
	}
	public class PathElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.artemis.spec.Artemis.Path");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cLeftParenthesisKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Keyword cPathKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Assignment cIdAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cIdINTTerminalRuleCall_2_0 = (RuleCall)cIdAssignment_2.eContents().get(0);
		private final Group cGroup_3 = (Group)cGroup.eContents().get(3);
		private final Keyword cCommaKeyword_3_0 = (Keyword)cGroup_3.eContents().get(0);
		private final Assignment cTasksAssignment_3_1 = (Assignment)cGroup_3.eContents().get(1);
		private final CrossReference cTasksTaskCrossReference_3_1_0 = (CrossReference)cTasksAssignment_3_1.eContents().get(0);
		private final RuleCall cTasksTaskIDTerminalRuleCall_3_1_0_1 = (RuleCall)cTasksTaskCrossReference_3_1_0.eContents().get(1);
		private final Keyword cRightParenthesisKeyword_4 = (Keyword)cGroup.eContents().get(4);
		
		//Path:
		//    '(' 'Path:' id = INT (',' tasks += [Task | ID])+ ')'
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//'(' 'Path:' id = INT (',' tasks += [Task | ID])+ ')'
		public Group getGroup() { return cGroup; }
		
		//'('
		public Keyword getLeftParenthesisKeyword_0() { return cLeftParenthesisKeyword_0; }
		
		//'Path:'
		public Keyword getPathKeyword_1() { return cPathKeyword_1; }
		
		//id = INT
		public Assignment getIdAssignment_2() { return cIdAssignment_2; }
		
		//INT
		public RuleCall getIdINTTerminalRuleCall_2_0() { return cIdINTTerminalRuleCall_2_0; }
		
		//(',' tasks += [Task | ID])+
		public Group getGroup_3() { return cGroup_3; }
		
		//','
		public Keyword getCommaKeyword_3_0() { return cCommaKeyword_3_0; }
		
		//tasks += [Task | ID]
		public Assignment getTasksAssignment_3_1() { return cTasksAssignment_3_1; }
		
		//[Task | ID]
		public CrossReference getTasksTaskCrossReference_3_1_0() { return cTasksTaskCrossReference_3_1_0; }
		
		//ID
		public RuleCall getTasksTaskIDTerminalRuleCall_3_1_0_1() { return cTasksTaskIDTerminalRuleCall_3_1_0_1; }
		
		//')'
		public Keyword getRightParenthesisKeyword_4() { return cRightParenthesisKeyword_4; }
	}
	public class TaskPropertiesElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.artemis.spec.Artemis.TaskProperties");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Assignment cTaskAssignment_0 = (Assignment)cGroup.eContents().get(0);
		private final CrossReference cTaskTaskCrossReference_0_0 = (CrossReference)cTaskAssignment_0.eContents().get(0);
		private final RuleCall cTaskTaskIDTerminalRuleCall_0_0_1 = (RuleCall)cTaskTaskCrossReference_0_0.eContents().get(1);
		private final Keyword cLeftCurlyBracketKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Assignment cPropertiesAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cPropertiesPropertyParserRuleCall_2_0 = (RuleCall)cPropertiesAssignment_2.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_3 = (Keyword)cGroup.eContents().get(3);
		
		//TaskProperties:
		//    task = [Task | ID] '{'
		//        properties += Property+
		//     '}'
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//task = [Task | ID] '{'
		//    properties += Property+
		// '}'
		public Group getGroup() { return cGroup; }
		
		//task = [Task | ID]
		public Assignment getTaskAssignment_0() { return cTaskAssignment_0; }
		
		//[Task | ID]
		public CrossReference getTaskTaskCrossReference_0_0() { return cTaskTaskCrossReference_0_0; }
		
		//ID
		public RuleCall getTaskTaskIDTerminalRuleCall_0_0_1() { return cTaskTaskIDTerminalRuleCall_0_0_1; }
		
		//'{'
		public Keyword getLeftCurlyBracketKeyword_1() { return cLeftCurlyBracketKeyword_1; }
		
		//properties += Property+
		public Assignment getPropertiesAssignment_2() { return cPropertiesAssignment_2; }
		
		//Property
		public RuleCall getPropertiesPropertyParserRuleCall_2_0() { return cPropertiesPropertyParserRuleCall_2_0; }
		
		//'}'
		public Keyword getRightCurlyBracketKeyword_3() { return cRightCurlyBracketKeyword_3; }
	}
	public class PropertyElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.artemis.spec.Artemis.Property");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final RuleCall cPeriodParserRuleCall_0 = (RuleCall)cAlternatives.eContents().get(0);
		private final RuleCall cMaxTriesParserRuleCall_1 = (RuleCall)cAlternatives.eContents().get(1);
		private final RuleCall cMaxDurationParserRuleCall_2 = (RuleCall)cAlternatives.eContents().get(2);
		private final RuleCall cMitdParserRuleCall_3 = (RuleCall)cAlternatives.eContents().get(3);
		private final RuleCall cCollectParserRuleCall_4 = (RuleCall)cAlternatives.eContents().get(4);
		
		//Property:
		//    Period | MaxTries | MaxDuration | Mitd | Collect
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//Period | MaxTries | MaxDuration | Mitd | Collect
		public Alternatives getAlternatives() { return cAlternatives; }
		
		//Period
		public RuleCall getPeriodParserRuleCall_0() { return cPeriodParserRuleCall_0; }
		
		//MaxTries
		public RuleCall getMaxTriesParserRuleCall_1() { return cMaxTriesParserRuleCall_1; }
		
		//MaxDuration
		public RuleCall getMaxDurationParserRuleCall_2() { return cMaxDurationParserRuleCall_2; }
		
		//Mitd
		public RuleCall getMitdParserRuleCall_3() { return cMitdParserRuleCall_3; }
		
		//Collect
		public RuleCall getCollectParserRuleCall_4() { return cCollectParserRuleCall_4; }
	}
	public class PeriodElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.artemis.spec.Artemis.Period");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cPeriodKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Assignment cPeriodAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cPeriodFLOATTerminalRuleCall_1_0 = (RuleCall)cPeriodAssignment_1.eContents().get(0);
		private final Keyword cMsKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Keyword cOnFailKeyword_3 = (Keyword)cGroup.eContents().get(3);
		private final Assignment cOnFailActionAssignment_4 = (Assignment)cGroup.eContents().get(4);
		private final RuleCall cOnFailActionOnFailActionParserRuleCall_4_0 = (RuleCall)cOnFailActionAssignment_4.eContents().get(0);
		private final Keyword cMaxAttemptKeyword_5 = (Keyword)cGroup.eContents().get(5);
		private final Assignment cMaxAttemptsAssignment_6 = (Assignment)cGroup.eContents().get(6);
		private final RuleCall cMaxAttemptsINTTerminalRuleCall_6_0 = (RuleCall)cMaxAttemptsAssignment_6.eContents().get(0);
		private final Keyword cOnFailKeyword_7 = (Keyword)cGroup.eContents().get(7);
		private final Assignment cOnFailMaxAttemptActionAssignment_8 = (Assignment)cGroup.eContents().get(8);
		private final RuleCall cOnFailMaxAttemptActionOnFailActionParserRuleCall_8_0 = (RuleCall)cOnFailMaxAttemptActionAssignment_8.eContents().get(0);
		private final Keyword cSemicolonKeyword_9 = (Keyword)cGroup.eContents().get(9);
		
		//Period:
		//    'period:' period = FLOAT 'ms' 'onFail:' onFailAction = OnFailAction
		//        'maxAttempt:' maxAttempts = INT 'onFail:' onFailMaxAttemptAction = OnFailAction ';' //TODO different time units
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//'period:' period = FLOAT 'ms' 'onFail:' onFailAction = OnFailAction
		//    'maxAttempt:' maxAttempts = INT 'onFail:' onFailMaxAttemptAction = OnFailAction ';'
		public Group getGroup() { return cGroup; }
		
		//'period:'
		public Keyword getPeriodKeyword_0() { return cPeriodKeyword_0; }
		
		//period = FLOAT
		public Assignment getPeriodAssignment_1() { return cPeriodAssignment_1; }
		
		//FLOAT
		public RuleCall getPeriodFLOATTerminalRuleCall_1_0() { return cPeriodFLOATTerminalRuleCall_1_0; }
		
		//'ms'
		public Keyword getMsKeyword_2() { return cMsKeyword_2; }
		
		//'onFail:'
		public Keyword getOnFailKeyword_3() { return cOnFailKeyword_3; }
		
		//onFailAction = OnFailAction
		public Assignment getOnFailActionAssignment_4() { return cOnFailActionAssignment_4; }
		
		//OnFailAction
		public RuleCall getOnFailActionOnFailActionParserRuleCall_4_0() { return cOnFailActionOnFailActionParserRuleCall_4_0; }
		
		//'maxAttempt:'
		public Keyword getMaxAttemptKeyword_5() { return cMaxAttemptKeyword_5; }
		
		//maxAttempts = INT
		public Assignment getMaxAttemptsAssignment_6() { return cMaxAttemptsAssignment_6; }
		
		//INT
		public RuleCall getMaxAttemptsINTTerminalRuleCall_6_0() { return cMaxAttemptsINTTerminalRuleCall_6_0; }
		
		//'onFail:'
		public Keyword getOnFailKeyword_7() { return cOnFailKeyword_7; }
		
		//onFailMaxAttemptAction = OnFailAction
		public Assignment getOnFailMaxAttemptActionAssignment_8() { return cOnFailMaxAttemptActionAssignment_8; }
		
		//OnFailAction
		public RuleCall getOnFailMaxAttemptActionOnFailActionParserRuleCall_8_0() { return cOnFailMaxAttemptActionOnFailActionParserRuleCall_8_0; }
		
		//';'
		public Keyword getSemicolonKeyword_9() { return cSemicolonKeyword_9; }
	}
	public class MaxTriesElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.artemis.spec.Artemis.MaxTries");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cMaxTriesKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Assignment cNrTriesAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cNrTriesINTTerminalRuleCall_1_0 = (RuleCall)cNrTriesAssignment_1.eContents().get(0);
		private final Keyword cOnFailKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Assignment cOnFailActionAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final RuleCall cOnFailActionOnFailActionParserRuleCall_3_0 = (RuleCall)cOnFailActionAssignment_3.eContents().get(0);
		private final Keyword cSemicolonKeyword_4 = (Keyword)cGroup.eContents().get(4);
		
		//MaxTries:
		//    'maxTries:' nrTries = INT 'onFail:' onFailAction = OnFailAction ';'
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//'maxTries:' nrTries = INT 'onFail:' onFailAction = OnFailAction ';'
		public Group getGroup() { return cGroup; }
		
		//'maxTries:'
		public Keyword getMaxTriesKeyword_0() { return cMaxTriesKeyword_0; }
		
		//nrTries = INT
		public Assignment getNrTriesAssignment_1() { return cNrTriesAssignment_1; }
		
		//INT
		public RuleCall getNrTriesINTTerminalRuleCall_1_0() { return cNrTriesINTTerminalRuleCall_1_0; }
		
		//'onFail:'
		public Keyword getOnFailKeyword_2() { return cOnFailKeyword_2; }
		
		//onFailAction = OnFailAction
		public Assignment getOnFailActionAssignment_3() { return cOnFailActionAssignment_3; }
		
		//OnFailAction
		public RuleCall getOnFailActionOnFailActionParserRuleCall_3_0() { return cOnFailActionOnFailActionParserRuleCall_3_0; }
		
		//';'
		public Keyword getSemicolonKeyword_4() { return cSemicolonKeyword_4; }
	}
	public class MaxDurationElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.artemis.spec.Artemis.MaxDuration");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cMaxDurationKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Assignment cMaxDurationAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cMaxDurationFLOATTerminalRuleCall_1_0 = (RuleCall)cMaxDurationAssignment_1.eContents().get(0);
		private final Keyword cMsKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Keyword cOnFailKeyword_3 = (Keyword)cGroup.eContents().get(3);
		private final Assignment cOnFailActionAssignment_4 = (Assignment)cGroup.eContents().get(4);
		private final RuleCall cOnFailActionOnFailActionParserRuleCall_4_0 = (RuleCall)cOnFailActionAssignment_4.eContents().get(0);
		private final Keyword cSemicolonKeyword_5 = (Keyword)cGroup.eContents().get(5);
		
		//MaxDuration:
		//    'maxDuration:' maxDuration = FLOAT 'ms' 'onFail:' onFailAction = OnFailAction ';'
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//'maxDuration:' maxDuration = FLOAT 'ms' 'onFail:' onFailAction = OnFailAction ';'
		public Group getGroup() { return cGroup; }
		
		//'maxDuration:'
		public Keyword getMaxDurationKeyword_0() { return cMaxDurationKeyword_0; }
		
		//maxDuration = FLOAT
		public Assignment getMaxDurationAssignment_1() { return cMaxDurationAssignment_1; }
		
		//FLOAT
		public RuleCall getMaxDurationFLOATTerminalRuleCall_1_0() { return cMaxDurationFLOATTerminalRuleCall_1_0; }
		
		//'ms'
		public Keyword getMsKeyword_2() { return cMsKeyword_2; }
		
		//'onFail:'
		public Keyword getOnFailKeyword_3() { return cOnFailKeyword_3; }
		
		//onFailAction = OnFailAction
		public Assignment getOnFailActionAssignment_4() { return cOnFailActionAssignment_4; }
		
		//OnFailAction
		public RuleCall getOnFailActionOnFailActionParserRuleCall_4_0() { return cOnFailActionOnFailActionParserRuleCall_4_0; }
		
		//';'
		public Keyword getSemicolonKeyword_5() { return cSemicolonKeyword_5; }
	}
	public class MitdElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.artemis.spec.Artemis.Mitd");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cMITDKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Assignment cDurationAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cDurationFLOATTerminalRuleCall_1_0 = (RuleCall)cDurationAssignment_1.eContents().get(0);
		private final Keyword cMsKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Keyword cDpTaskKeyword_3 = (Keyword)cGroup.eContents().get(3);
		private final Assignment cDependsOnAssignment_4 = (Assignment)cGroup.eContents().get(4);
		private final CrossReference cDependsOnTaskCrossReference_4_0 = (CrossReference)cDependsOnAssignment_4.eContents().get(0);
		private final RuleCall cDependsOnTaskIDTerminalRuleCall_4_0_1 = (RuleCall)cDependsOnTaskCrossReference_4_0.eContents().get(1);
		private final Keyword cOnFailKeyword_5 = (Keyword)cGroup.eContents().get(5);
		private final Assignment cOnFailActionAssignment_6 = (Assignment)cGroup.eContents().get(6);
		private final RuleCall cOnFailActionOnFailActionParserRuleCall_6_0 = (RuleCall)cOnFailActionAssignment_6.eContents().get(0);
		private final Keyword cMaxAttemptKeyword_7 = (Keyword)cGroup.eContents().get(7);
		private final Assignment cMaxAttemptsAssignment_8 = (Assignment)cGroup.eContents().get(8);
		private final RuleCall cMaxAttemptsINTTerminalRuleCall_8_0 = (RuleCall)cMaxAttemptsAssignment_8.eContents().get(0);
		private final Keyword cOnFailKeyword_9 = (Keyword)cGroup.eContents().get(9);
		private final Assignment cOnFailMaxAttemptActionAssignment_10 = (Assignment)cGroup.eContents().get(10);
		private final RuleCall cOnFailMaxAttemptActionOnFailActionParserRuleCall_10_0 = (RuleCall)cOnFailMaxAttemptActionAssignment_10.eContents().get(0);
		private final Keyword cSemicolonKeyword_11 = (Keyword)cGroup.eContents().get(11);
		
		//Mitd:
		//    'MITD:' duration = FLOAT 'ms' 'dpTask:' dependsOn = [Task | ID] 'onFail:' onFailAction = OnFailAction
		//        'maxAttempt:' maxAttempts = INT 'onFail:' onFailMaxAttemptAction = OnFailAction ';'
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//'MITD:' duration = FLOAT 'ms' 'dpTask:' dependsOn = [Task | ID] 'onFail:' onFailAction = OnFailAction
		//    'maxAttempt:' maxAttempts = INT 'onFail:' onFailMaxAttemptAction = OnFailAction ';'
		public Group getGroup() { return cGroup; }
		
		//'MITD:'
		public Keyword getMITDKeyword_0() { return cMITDKeyword_0; }
		
		//duration = FLOAT
		public Assignment getDurationAssignment_1() { return cDurationAssignment_1; }
		
		//FLOAT
		public RuleCall getDurationFLOATTerminalRuleCall_1_0() { return cDurationFLOATTerminalRuleCall_1_0; }
		
		//'ms'
		public Keyword getMsKeyword_2() { return cMsKeyword_2; }
		
		//'dpTask:'
		public Keyword getDpTaskKeyword_3() { return cDpTaskKeyword_3; }
		
		//dependsOn = [Task | ID]
		public Assignment getDependsOnAssignment_4() { return cDependsOnAssignment_4; }
		
		//[Task | ID]
		public CrossReference getDependsOnTaskCrossReference_4_0() { return cDependsOnTaskCrossReference_4_0; }
		
		//ID
		public RuleCall getDependsOnTaskIDTerminalRuleCall_4_0_1() { return cDependsOnTaskIDTerminalRuleCall_4_0_1; }
		
		//'onFail:'
		public Keyword getOnFailKeyword_5() { return cOnFailKeyword_5; }
		
		//onFailAction = OnFailAction
		public Assignment getOnFailActionAssignment_6() { return cOnFailActionAssignment_6; }
		
		//OnFailAction
		public RuleCall getOnFailActionOnFailActionParserRuleCall_6_0() { return cOnFailActionOnFailActionParserRuleCall_6_0; }
		
		//'maxAttempt:'
		public Keyword getMaxAttemptKeyword_7() { return cMaxAttemptKeyword_7; }
		
		//maxAttempts = INT
		public Assignment getMaxAttemptsAssignment_8() { return cMaxAttemptsAssignment_8; }
		
		//INT
		public RuleCall getMaxAttemptsINTTerminalRuleCall_8_0() { return cMaxAttemptsINTTerminalRuleCall_8_0; }
		
		//'onFail:'
		public Keyword getOnFailKeyword_9() { return cOnFailKeyword_9; }
		
		//onFailMaxAttemptAction = OnFailAction
		public Assignment getOnFailMaxAttemptActionAssignment_10() { return cOnFailMaxAttemptActionAssignment_10; }
		
		//OnFailAction
		public RuleCall getOnFailMaxAttemptActionOnFailActionParserRuleCall_10_0() { return cOnFailMaxAttemptActionOnFailActionParserRuleCall_10_0; }
		
		//';'
		public Keyword getSemicolonKeyword_11() { return cSemicolonKeyword_11; }
	}
	public class CollectElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.artemis.spec.Artemis.Collect");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cCollectKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Assignment cNrItemsAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cNrItemsINTTerminalRuleCall_1_0 = (RuleCall)cNrItemsAssignment_1.eContents().get(0);
		private final Keyword cDpTaskKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Assignment cDependsOnAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final CrossReference cDependsOnTaskCrossReference_3_0 = (CrossReference)cDependsOnAssignment_3.eContents().get(0);
		private final RuleCall cDependsOnTaskIDTerminalRuleCall_3_0_1 = (RuleCall)cDependsOnTaskCrossReference_3_0.eContents().get(1);
		private final Keyword cOnFailKeyword_4 = (Keyword)cGroup.eContents().get(4);
		private final Assignment cOnFailActionAssignment_5 = (Assignment)cGroup.eContents().get(5);
		private final RuleCall cOnFailActionOnFailActionParserRuleCall_5_0 = (RuleCall)cOnFailActionAssignment_5.eContents().get(0);
		private final Keyword cSemicolonKeyword_6 = (Keyword)cGroup.eContents().get(6);
		
		//Collect:
		//    'collect:' nrItems = INT 'dpTask:' dependsOn = [Task | ID] 'onFail:' onFailAction = OnFailAction ';'
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//'collect:' nrItems = INT 'dpTask:' dependsOn = [Task | ID] 'onFail:' onFailAction = OnFailAction ';'
		public Group getGroup() { return cGroup; }
		
		//'collect:'
		public Keyword getCollectKeyword_0() { return cCollectKeyword_0; }
		
		//nrItems = INT
		public Assignment getNrItemsAssignment_1() { return cNrItemsAssignment_1; }
		
		//INT
		public RuleCall getNrItemsINTTerminalRuleCall_1_0() { return cNrItemsINTTerminalRuleCall_1_0; }
		
		//'dpTask:'
		public Keyword getDpTaskKeyword_2() { return cDpTaskKeyword_2; }
		
		//dependsOn = [Task | ID]
		public Assignment getDependsOnAssignment_3() { return cDependsOnAssignment_3; }
		
		//[Task | ID]
		public CrossReference getDependsOnTaskCrossReference_3_0() { return cDependsOnTaskCrossReference_3_0; }
		
		//ID
		public RuleCall getDependsOnTaskIDTerminalRuleCall_3_0_1() { return cDependsOnTaskIDTerminalRuleCall_3_0_1; }
		
		//'onFail:'
		public Keyword getOnFailKeyword_4() { return cOnFailKeyword_4; }
		
		//onFailAction = OnFailAction
		public Assignment getOnFailActionAssignment_5() { return cOnFailActionAssignment_5; }
		
		//OnFailAction
		public RuleCall getOnFailActionOnFailActionParserRuleCall_5_0() { return cOnFailActionOnFailActionParserRuleCall_5_0; }
		
		//';'
		public Keyword getSemicolonKeyword_6() { return cSemicolonKeyword_6; }
	}
	public class OnFailActionElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.artemis.spec.Artemis.OnFailAction");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final RuleCall cRestartPathParserRuleCall_0 = (RuleCall)cAlternatives.eContents().get(0);
		private final RuleCall cSkipPathParserRuleCall_1 = (RuleCall)cAlternatives.eContents().get(1);
		private final RuleCall cRestartTaskParserRuleCall_2 = (RuleCall)cAlternatives.eContents().get(2);
		private final RuleCall cSkipTaskParserRuleCall_3 = (RuleCall)cAlternatives.eContents().get(3);
		
		//OnFailAction:
		//    RestartPath | SkipPath | RestartTask | SkipTask
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//RestartPath | SkipPath | RestartTask | SkipTask
		public Alternatives getAlternatives() { return cAlternatives; }
		
		//RestartPath
		public RuleCall getRestartPathParserRuleCall_0() { return cRestartPathParserRuleCall_0; }
		
		//SkipPath
		public RuleCall getSkipPathParserRuleCall_1() { return cSkipPathParserRuleCall_1; }
		
		//RestartTask
		public RuleCall getRestartTaskParserRuleCall_2() { return cRestartTaskParserRuleCall_2; }
		
		//SkipTask
		public RuleCall getSkipTaskParserRuleCall_3() { return cSkipTaskParserRuleCall_3; }
	}
	public class RestartPathElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.artemis.spec.Artemis.RestartPath");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Action cRestartPathAction_0 = (Action)cGroup.eContents().get(0);
		private final Keyword cRestartPathKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Group cGroup_2 = (Group)cGroup.eContents().get(2);
		private final Keyword cPathKeyword_2_0 = (Keyword)cGroup_2.eContents().get(0);
		private final Assignment cPathAssignment_2_1 = (Assignment)cGroup_2.eContents().get(1);
		private final RuleCall cPathINTTerminalRuleCall_2_1_0 = (RuleCall)cPathAssignment_2_1.eContents().get(0);
		
		//RestartPath: {RestartPath}
		//    'restartPath' ('Path:' path = INT)?
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//{RestartPath}
		//   'restartPath' ('Path:' path = INT)?
		public Group getGroup() { return cGroup; }
		
		//{RestartPath}
		public Action getRestartPathAction_0() { return cRestartPathAction_0; }
		
		//'restartPath'
		public Keyword getRestartPathKeyword_1() { return cRestartPathKeyword_1; }
		
		//('Path:' path = INT)?
		public Group getGroup_2() { return cGroup_2; }
		
		//'Path:'
		public Keyword getPathKeyword_2_0() { return cPathKeyword_2_0; }
		
		//path = INT
		public Assignment getPathAssignment_2_1() { return cPathAssignment_2_1; }
		
		//INT
		public RuleCall getPathINTTerminalRuleCall_2_1_0() { return cPathINTTerminalRuleCall_2_1_0; }
	}
	public class SkipPathElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.artemis.spec.Artemis.SkipPath");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Action cSkipPathAction_0 = (Action)cGroup.eContents().get(0);
		private final Keyword cSkipPathKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Group cGroup_2 = (Group)cGroup.eContents().get(2);
		private final Keyword cPathKeyword_2_0 = (Keyword)cGroup_2.eContents().get(0);
		private final Assignment cPathAssignment_2_1 = (Assignment)cGroup_2.eContents().get(1);
		private final RuleCall cPathINTTerminalRuleCall_2_1_0 = (RuleCall)cPathAssignment_2_1.eContents().get(0);
		
		//SkipPath: {SkipPath}
		//    'skipPath' ('Path:' path = INT)?
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//{SkipPath}
		//   'skipPath' ('Path:' path = INT)?
		public Group getGroup() { return cGroup; }
		
		//{SkipPath}
		public Action getSkipPathAction_0() { return cSkipPathAction_0; }
		
		//'skipPath'
		public Keyword getSkipPathKeyword_1() { return cSkipPathKeyword_1; }
		
		//('Path:' path = INT)?
		public Group getGroup_2() { return cGroup_2; }
		
		//'Path:'
		public Keyword getPathKeyword_2_0() { return cPathKeyword_2_0; }
		
		//path = INT
		public Assignment getPathAssignment_2_1() { return cPathAssignment_2_1; }
		
		//INT
		public RuleCall getPathINTTerminalRuleCall_2_1_0() { return cPathINTTerminalRuleCall_2_1_0; }
	}
	public class RestartTaskElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.artemis.spec.Artemis.RestartTask");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Action cRestartTaskAction_0 = (Action)cGroup.eContents().get(0);
		private final Keyword cRestartTaskKeyword_1 = (Keyword)cGroup.eContents().get(1);
		
		//RestartTask: {RestartTask}
		//    'restartTask'
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//{RestartTask}
		//   'restartTask'
		public Group getGroup() { return cGroup; }
		
		//{RestartTask}
		public Action getRestartTaskAction_0() { return cRestartTaskAction_0; }
		
		//'restartTask'
		public Keyword getRestartTaskKeyword_1() { return cRestartTaskKeyword_1; }
	}
	public class SkipTaskElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.artemis.spec.Artemis.SkipTask");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Action cSkipTaskAction_0 = (Action)cGroup.eContents().get(0);
		private final Keyword cSkipTaskKeyword_1 = (Keyword)cGroup.eContents().get(1);
		
		//SkipTask: {SkipTask}
		//    'skipTask'
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//{SkipTask}
		//   'skipTask'
		public Group getGroup() { return cGroup; }
		
		//{SkipTask}
		public Action getSkipTaskAction_0() { return cSkipTaskAction_0; }
		
		//'skipTask'
		public Keyword getSkipTaskKeyword_1() { return cSkipTaskKeyword_1; }
	}
	
	
	private final ArtemisModelElements pArtemisModel;
	private final TaskElements pTask;
	private final PathElements pPath;
	private final TaskPropertiesElements pTaskProperties;
	private final PropertyElements pProperty;
	private final PeriodElements pPeriod;
	private final MaxTriesElements pMaxTries;
	private final MaxDurationElements pMaxDuration;
	private final MitdElements pMitd;
	private final CollectElements pCollect;
	private final OnFailActionElements pOnFailAction;
	private final RestartPathElements pRestartPath;
	private final SkipPathElements pSkipPath;
	private final RestartTaskElements pRestartTask;
	private final SkipTaskElements pSkipTask;
	private final TerminalRule tFLOAT;
	
	private final Grammar grammar;
	
	private final TerminalsGrammarAccess gaTerminals;

	@Inject
	public ArtemisGrammarAccess(GrammarProvider grammarProvider,
			TerminalsGrammarAccess gaTerminals) {
		this.grammar = internalFindGrammar(grammarProvider);
		this.gaTerminals = gaTerminals;
		this.pArtemisModel = new ArtemisModelElements();
		this.pTask = new TaskElements();
		this.pPath = new PathElements();
		this.pTaskProperties = new TaskPropertiesElements();
		this.pProperty = new PropertyElements();
		this.pPeriod = new PeriodElements();
		this.pMaxTries = new MaxTriesElements();
		this.pMaxDuration = new MaxDurationElements();
		this.pMitd = new MitdElements();
		this.pCollect = new CollectElements();
		this.pOnFailAction = new OnFailActionElements();
		this.pRestartPath = new RestartPathElements();
		this.pSkipPath = new SkipPathElements();
		this.pRestartTask = new RestartTaskElements();
		this.pSkipTask = new SkipTaskElements();
		this.tFLOAT = (TerminalRule) GrammarUtil.findRuleForName(getGrammar(), "org.artemis.spec.Artemis.FLOAT");
	}
	
	protected Grammar internalFindGrammar(GrammarProvider grammarProvider) {
		Grammar grammar = grammarProvider.getGrammar(this);
		while (grammar != null) {
			if ("org.artemis.spec.Artemis".equals(grammar.getName())) {
				return grammar;
			}
			List<Grammar> grammars = grammar.getUsedGrammars();
			if (!grammars.isEmpty()) {
				grammar = grammars.iterator().next();
			} else {
				return null;
			}
		}
		return grammar;
	}
	
	@Override
	public Grammar getGrammar() {
		return grammar;
	}
	
	
	public TerminalsGrammarAccess getTerminalsGrammarAccess() {
		return gaTerminals;
	}

	
	//ArtemisModel:
	//    tasks += Task+
	//    paths += Path+
	//    taskProperties += TaskProperties +
	//;
	public ArtemisModelElements getArtemisModelAccess() {
		return pArtemisModel;
	}
	
	public ParserRule getArtemisModelRule() {
		return getArtemisModelAccess().getRule();
	}
	
	//Task:
	//    'Task' name = ID
	//;
	public TaskElements getTaskAccess() {
		return pTask;
	}
	
	public ParserRule getTaskRule() {
		return getTaskAccess().getRule();
	}
	
	//Path:
	//    '(' 'Path:' id = INT (',' tasks += [Task | ID])+ ')'
	//;
	public PathElements getPathAccess() {
		return pPath;
	}
	
	public ParserRule getPathRule() {
		return getPathAccess().getRule();
	}
	
	//TaskProperties:
	//    task = [Task | ID] '{'
	//        properties += Property+
	//     '}'
	//;
	public TaskPropertiesElements getTaskPropertiesAccess() {
		return pTaskProperties;
	}
	
	public ParserRule getTaskPropertiesRule() {
		return getTaskPropertiesAccess().getRule();
	}
	
	//Property:
	//    Period | MaxTries | MaxDuration | Mitd | Collect
	//;
	public PropertyElements getPropertyAccess() {
		return pProperty;
	}
	
	public ParserRule getPropertyRule() {
		return getPropertyAccess().getRule();
	}
	
	//Period:
	//    'period:' period = FLOAT 'ms' 'onFail:' onFailAction = OnFailAction
	//        'maxAttempt:' maxAttempts = INT 'onFail:' onFailMaxAttemptAction = OnFailAction ';' //TODO different time units
	//;
	public PeriodElements getPeriodAccess() {
		return pPeriod;
	}
	
	public ParserRule getPeriodRule() {
		return getPeriodAccess().getRule();
	}
	
	//MaxTries:
	//    'maxTries:' nrTries = INT 'onFail:' onFailAction = OnFailAction ';'
	//;
	public MaxTriesElements getMaxTriesAccess() {
		return pMaxTries;
	}
	
	public ParserRule getMaxTriesRule() {
		return getMaxTriesAccess().getRule();
	}
	
	//MaxDuration:
	//    'maxDuration:' maxDuration = FLOAT 'ms' 'onFail:' onFailAction = OnFailAction ';'
	//;
	public MaxDurationElements getMaxDurationAccess() {
		return pMaxDuration;
	}
	
	public ParserRule getMaxDurationRule() {
		return getMaxDurationAccess().getRule();
	}
	
	//Mitd:
	//    'MITD:' duration = FLOAT 'ms' 'dpTask:' dependsOn = [Task | ID] 'onFail:' onFailAction = OnFailAction
	//        'maxAttempt:' maxAttempts = INT 'onFail:' onFailMaxAttemptAction = OnFailAction ';'
	//;
	public MitdElements getMitdAccess() {
		return pMitd;
	}
	
	public ParserRule getMitdRule() {
		return getMitdAccess().getRule();
	}
	
	//Collect:
	//    'collect:' nrItems = INT 'dpTask:' dependsOn = [Task | ID] 'onFail:' onFailAction = OnFailAction ';'
	//;
	public CollectElements getCollectAccess() {
		return pCollect;
	}
	
	public ParserRule getCollectRule() {
		return getCollectAccess().getRule();
	}
	
	//OnFailAction:
	//    RestartPath | SkipPath | RestartTask | SkipTask
	//;
	public OnFailActionElements getOnFailActionAccess() {
		return pOnFailAction;
	}
	
	public ParserRule getOnFailActionRule() {
		return getOnFailActionAccess().getRule();
	}
	
	//RestartPath: {RestartPath}
	//    'restartPath' ('Path:' path = INT)?
	//;
	public RestartPathElements getRestartPathAccess() {
		return pRestartPath;
	}
	
	public ParserRule getRestartPathRule() {
		return getRestartPathAccess().getRule();
	}
	
	//SkipPath: {SkipPath}
	//    'skipPath' ('Path:' path = INT)?
	//;
	public SkipPathElements getSkipPathAccess() {
		return pSkipPath;
	}
	
	public ParserRule getSkipPathRule() {
		return getSkipPathAccess().getRule();
	}
	
	//RestartTask: {RestartTask}
	//    'restartTask'
	//;
	public RestartTaskElements getRestartTaskAccess() {
		return pRestartTask;
	}
	
	public ParserRule getRestartTaskRule() {
		return getRestartTaskAccess().getRule();
	}
	
	//SkipTask: {SkipTask}
	//    'skipTask'
	//;
	public SkipTaskElements getSkipTaskAccess() {
		return pSkipTask;
	}
	
	public ParserRule getSkipTaskRule() {
		return getSkipTaskAccess().getRule();
	}
	
	//terminal FLOAT returns ecore::EDouble:
	//    INT '.' INT (('E' | 'e') ('-')? INT)?
	//;
	public TerminalRule getFLOATRule() {
		return tFLOAT;
	}
	
	//terminal ID: '^'?('a'..'z'|'A'..'Z'|'_') ('a'..'z'|'A'..'Z'|'_'|'0'..'9')*;
	public TerminalRule getIDRule() {
		return gaTerminals.getIDRule();
	}
	
	//terminal INT returns ecore::EInt: ('0'..'9')+;
	public TerminalRule getINTRule() {
		return gaTerminals.getINTRule();
	}
	
	//terminal STRING:
	//            '"' ( '\\' . /* 'b'|'t'|'n'|'f'|'r'|'u'|'"'|"'"|'\\' */ | !('\\'|'"') )* '"' |
	//            "'" ( '\\' . /* 'b'|'t'|'n'|'f'|'r'|'u'|'"'|"'"|'\\' */ | !('\\'|"'") )* "'"
	//        ;
	public TerminalRule getSTRINGRule() {
		return gaTerminals.getSTRINGRule();
	}
	
	//terminal ML_COMMENT : '/*' -> '*/';
	public TerminalRule getML_COMMENTRule() {
		return gaTerminals.getML_COMMENTRule();
	}
	
	//terminal SL_COMMENT : '//' !('\n'|'\r')* ('\r'? '\n')?;
	public TerminalRule getSL_COMMENTRule() {
		return gaTerminals.getSL_COMMENTRule();
	}
	
	//terminal WS         : (' '|'\t'|'\r'|'\n')+;
	public TerminalRule getWSRule() {
		return gaTerminals.getWSRule();
	}
	
	//terminal ANY_OTHER: .;
	public TerminalRule getANY_OTHERRule() {
		return gaTerminals.getANY_OTHERRule();
	}
}
