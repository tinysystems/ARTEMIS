/**
 * generated by Xtext 2.25.0
 */
package org.artemis.spec.artemis.impl;

import org.artemis.spec.artemis.ArtemisPackage;
import org.artemis.spec.artemis.OnFailAction;
import org.artemis.spec.artemis.Property;

import org.eclipse.emf.common.notify.Notification;
import org.eclipse.emf.common.notify.NotificationChain;

import org.eclipse.emf.ecore.EClass;
import org.eclipse.emf.ecore.InternalEObject;

import org.eclipse.emf.ecore.impl.ENotificationImpl;
import org.eclipse.emf.ecore.impl.MinimalEObjectImpl;

/**
 * <!-- begin-user-doc -->
 * An implementation of the model object '<em><b>Property</b></em>'.
 * <!-- end-user-doc -->
 * <p>
 * The following features are implemented:
 * </p>
 * <ul>
 *   <li>{@link org.artemis.spec.artemis.impl.PropertyImpl#getOnFailAction <em>On Fail Action</em>}</li>
 * </ul>
 *
 * @generated
 */
public class PropertyImpl extends MinimalEObjectImpl.Container implements Property
{
  /**
   * The cached value of the '{@link #getOnFailAction() <em>On Fail Action</em>}' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getOnFailAction()
   * @generated
   * @ordered
   */
  protected OnFailAction onFailAction;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  protected PropertyImpl()
  {
    super();
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  protected EClass eStaticClass()
  {
    return ArtemisPackage.Literals.PROPERTY;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public OnFailAction getOnFailAction()
  {
    return onFailAction;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public NotificationChain basicSetOnFailAction(OnFailAction newOnFailAction, NotificationChain msgs)
  {
    OnFailAction oldOnFailAction = onFailAction;
    onFailAction = newOnFailAction;
    if (eNotificationRequired())
    {
      ENotificationImpl notification = new ENotificationImpl(this, Notification.SET, ArtemisPackage.PROPERTY__ON_FAIL_ACTION, oldOnFailAction, newOnFailAction);
      if (msgs == null) msgs = notification; else msgs.add(notification);
    }
    return msgs;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setOnFailAction(OnFailAction newOnFailAction)
  {
    if (newOnFailAction != onFailAction)
    {
      NotificationChain msgs = null;
      if (onFailAction != null)
        msgs = ((InternalEObject)onFailAction).eInverseRemove(this, EOPPOSITE_FEATURE_BASE - ArtemisPackage.PROPERTY__ON_FAIL_ACTION, null, msgs);
      if (newOnFailAction != null)
        msgs = ((InternalEObject)newOnFailAction).eInverseAdd(this, EOPPOSITE_FEATURE_BASE - ArtemisPackage.PROPERTY__ON_FAIL_ACTION, null, msgs);
      msgs = basicSetOnFailAction(newOnFailAction, msgs);
      if (msgs != null) msgs.dispatch();
    }
    else if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, ArtemisPackage.PROPERTY__ON_FAIL_ACTION, newOnFailAction, newOnFailAction));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public NotificationChain eInverseRemove(InternalEObject otherEnd, int featureID, NotificationChain msgs)
  {
    switch (featureID)
    {
      case ArtemisPackage.PROPERTY__ON_FAIL_ACTION:
        return basicSetOnFailAction(null, msgs);
    }
    return super.eInverseRemove(otherEnd, featureID, msgs);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Object eGet(int featureID, boolean resolve, boolean coreType)
  {
    switch (featureID)
    {
      case ArtemisPackage.PROPERTY__ON_FAIL_ACTION:
        return getOnFailAction();
    }
    return super.eGet(featureID, resolve, coreType);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void eSet(int featureID, Object newValue)
  {
    switch (featureID)
    {
      case ArtemisPackage.PROPERTY__ON_FAIL_ACTION:
        setOnFailAction((OnFailAction)newValue);
        return;
    }
    super.eSet(featureID, newValue);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void eUnset(int featureID)
  {
    switch (featureID)
    {
      case ArtemisPackage.PROPERTY__ON_FAIL_ACTION:
        setOnFailAction((OnFailAction)null);
        return;
    }
    super.eUnset(featureID);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public boolean eIsSet(int featureID)
  {
    switch (featureID)
    {
      case ArtemisPackage.PROPERTY__ON_FAIL_ACTION:
        return onFailAction != null;
    }
    return super.eIsSet(featureID);
  }

} //PropertyImpl
