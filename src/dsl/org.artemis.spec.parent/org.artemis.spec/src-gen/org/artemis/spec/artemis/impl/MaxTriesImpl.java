/**
 * generated by Xtext 2.25.0
 */
package org.artemis.spec.artemis.impl;

import org.artemis.spec.artemis.ArtemisPackage;
import org.artemis.spec.artemis.MaxTries;

import org.eclipse.emf.common.notify.Notification;

import org.eclipse.emf.ecore.EClass;

import org.eclipse.emf.ecore.impl.ENotificationImpl;

/**
 * <!-- begin-user-doc -->
 * An implementation of the model object '<em><b>Max Tries</b></em>'.
 * <!-- end-user-doc -->
 * <p>
 * The following features are implemented:
 * </p>
 * <ul>
 *   <li>{@link org.artemis.spec.artemis.impl.MaxTriesImpl#getNrTries <em>Nr Tries</em>}</li>
 * </ul>
 *
 * @generated
 */
public class MaxTriesImpl extends PropertyImpl implements MaxTries
{
  /**
   * The default value of the '{@link #getNrTries() <em>Nr Tries</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getNrTries()
   * @generated
   * @ordered
   */
  protected static final int NR_TRIES_EDEFAULT = 0;

  /**
   * The cached value of the '{@link #getNrTries() <em>Nr Tries</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getNrTries()
   * @generated
   * @ordered
   */
  protected int nrTries = NR_TRIES_EDEFAULT;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  protected MaxTriesImpl()
  {
    super();
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  protected EClass eStaticClass()
  {
    return ArtemisPackage.Literals.MAX_TRIES;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public int getNrTries()
  {
    return nrTries;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setNrTries(int newNrTries)
  {
    int oldNrTries = nrTries;
    nrTries = newNrTries;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, ArtemisPackage.MAX_TRIES__NR_TRIES, oldNrTries, nrTries));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Object eGet(int featureID, boolean resolve, boolean coreType)
  {
    switch (featureID)
    {
      case ArtemisPackage.MAX_TRIES__NR_TRIES:
        return getNrTries();
    }
    return super.eGet(featureID, resolve, coreType);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void eSet(int featureID, Object newValue)
  {
    switch (featureID)
    {
      case ArtemisPackage.MAX_TRIES__NR_TRIES:
        setNrTries((Integer)newValue);
        return;
    }
    super.eSet(featureID, newValue);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void eUnset(int featureID)
  {
    switch (featureID)
    {
      case ArtemisPackage.MAX_TRIES__NR_TRIES:
        setNrTries(NR_TRIES_EDEFAULT);
        return;
    }
    super.eUnset(featureID);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public boolean eIsSet(int featureID)
  {
    switch (featureID)
    {
      case ArtemisPackage.MAX_TRIES__NR_TRIES:
        return nrTries != NR_TRIES_EDEFAULT;
    }
    return super.eIsSet(featureID);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public String toString()
  {
    if (eIsProxy()) return super.toString();

    StringBuilder result = new StringBuilder(super.toString());
    result.append(" (nrTries: ");
    result.append(nrTries);
    result.append(')');
    return result.toString();
  }

} //MaxTriesImpl
