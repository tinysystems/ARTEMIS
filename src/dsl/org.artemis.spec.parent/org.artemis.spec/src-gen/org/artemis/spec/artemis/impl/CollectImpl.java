/**
 * generated by Xtext 2.25.0
 */
package org.artemis.spec.artemis.impl;

import org.artemis.spec.artemis.ArtemisPackage;
import org.artemis.spec.artemis.Collect;
import org.artemis.spec.artemis.Task;

import org.eclipse.emf.common.notify.Notification;

import org.eclipse.emf.ecore.EClass;
import org.eclipse.emf.ecore.InternalEObject;

import org.eclipse.emf.ecore.impl.ENotificationImpl;

/**
 * <!-- begin-user-doc -->
 * An implementation of the model object '<em><b>Collect</b></em>'.
 * <!-- end-user-doc -->
 * <p>
 * The following features are implemented:
 * </p>
 * <ul>
 *   <li>{@link org.artemis.spec.artemis.impl.CollectImpl#getNrItems <em>Nr Items</em>}</li>
 *   <li>{@link org.artemis.spec.artemis.impl.CollectImpl#getDependsOn <em>Depends On</em>}</li>
 * </ul>
 *
 * @generated
 */
public class CollectImpl extends PropertyImpl implements Collect
{
  /**
   * The default value of the '{@link #getNrItems() <em>Nr Items</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getNrItems()
   * @generated
   * @ordered
   */
  protected static final int NR_ITEMS_EDEFAULT = 0;

  /**
   * The cached value of the '{@link #getNrItems() <em>Nr Items</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getNrItems()
   * @generated
   * @ordered
   */
  protected int nrItems = NR_ITEMS_EDEFAULT;

  /**
   * The cached value of the '{@link #getDependsOn() <em>Depends On</em>}' reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getDependsOn()
   * @generated
   * @ordered
   */
  protected Task dependsOn;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  protected CollectImpl()
  {
    super();
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  protected EClass eStaticClass()
  {
    return ArtemisPackage.Literals.COLLECT;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public int getNrItems()
  {
    return nrItems;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setNrItems(int newNrItems)
  {
    int oldNrItems = nrItems;
    nrItems = newNrItems;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, ArtemisPackage.COLLECT__NR_ITEMS, oldNrItems, nrItems));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Task getDependsOn()
  {
    if (dependsOn != null && dependsOn.eIsProxy())
    {
      InternalEObject oldDependsOn = (InternalEObject)dependsOn;
      dependsOn = (Task)eResolveProxy(oldDependsOn);
      if (dependsOn != oldDependsOn)
      {
        if (eNotificationRequired())
          eNotify(new ENotificationImpl(this, Notification.RESOLVE, ArtemisPackage.COLLECT__DEPENDS_ON, oldDependsOn, dependsOn));
      }
    }
    return dependsOn;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public Task basicGetDependsOn()
  {
    return dependsOn;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setDependsOn(Task newDependsOn)
  {
    Task oldDependsOn = dependsOn;
    dependsOn = newDependsOn;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, ArtemisPackage.COLLECT__DEPENDS_ON, oldDependsOn, dependsOn));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Object eGet(int featureID, boolean resolve, boolean coreType)
  {
    switch (featureID)
    {
      case ArtemisPackage.COLLECT__NR_ITEMS:
        return getNrItems();
      case ArtemisPackage.COLLECT__DEPENDS_ON:
        if (resolve) return getDependsOn();
        return basicGetDependsOn();
    }
    return super.eGet(featureID, resolve, coreType);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void eSet(int featureID, Object newValue)
  {
    switch (featureID)
    {
      case ArtemisPackage.COLLECT__NR_ITEMS:
        setNrItems((Integer)newValue);
        return;
      case ArtemisPackage.COLLECT__DEPENDS_ON:
        setDependsOn((Task)newValue);
        return;
    }
    super.eSet(featureID, newValue);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void eUnset(int featureID)
  {
    switch (featureID)
    {
      case ArtemisPackage.COLLECT__NR_ITEMS:
        setNrItems(NR_ITEMS_EDEFAULT);
        return;
      case ArtemisPackage.COLLECT__DEPENDS_ON:
        setDependsOn((Task)null);
        return;
    }
    super.eUnset(featureID);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public boolean eIsSet(int featureID)
  {
    switch (featureID)
    {
      case ArtemisPackage.COLLECT__NR_ITEMS:
        return nrItems != NR_ITEMS_EDEFAULT;
      case ArtemisPackage.COLLECT__DEPENDS_ON:
        return dependsOn != null;
    }
    return super.eIsSet(featureID);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public String toString()
  {
    if (eIsProxy()) return super.toString();

    StringBuilder result = new StringBuilder(super.toString());
    result.append(" (nrItems: ");
    result.append(nrItems);
    result.append(')');
    return result.toString();
  }

} //CollectImpl
