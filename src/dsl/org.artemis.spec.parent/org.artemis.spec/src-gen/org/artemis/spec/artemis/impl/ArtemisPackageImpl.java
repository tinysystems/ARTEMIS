/**
 * generated by Xtext 2.25.0
 */
package org.artemis.spec.artemis.impl;

import org.artemis.spec.artemis.ArtemisFactory;
import org.artemis.spec.artemis.ArtemisModel;
import org.artemis.spec.artemis.ArtemisPackage;
import org.artemis.spec.artemis.Collect;
import org.artemis.spec.artemis.MaxDuration;
import org.artemis.spec.artemis.MaxTries;
import org.artemis.spec.artemis.Mitd;
import org.artemis.spec.artemis.OnFailAction;
import org.artemis.spec.artemis.Path;
import org.artemis.spec.artemis.Period;
import org.artemis.spec.artemis.Property;
import org.artemis.spec.artemis.RestartPath;
import org.artemis.spec.artemis.RestartTask;
import org.artemis.spec.artemis.SkipPath;
import org.artemis.spec.artemis.SkipTask;
import org.artemis.spec.artemis.Task;
import org.artemis.spec.artemis.TaskProperties;

import org.eclipse.emf.ecore.EAttribute;
import org.eclipse.emf.ecore.EClass;
import org.eclipse.emf.ecore.EPackage;
import org.eclipse.emf.ecore.EReference;

import org.eclipse.emf.ecore.impl.EPackageImpl;

/**
 * <!-- begin-user-doc -->
 * An implementation of the model <b>Package</b>.
 * <!-- end-user-doc -->
 * @generated
 */
public class ArtemisPackageImpl extends EPackageImpl implements ArtemisPackage
{
  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass artemisModelEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass taskEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass pathEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass taskPropertiesEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass propertyEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass periodEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass maxTriesEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass maxDurationEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass mitdEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass collectEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass onFailActionEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass restartPathEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass skipPathEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass restartTaskEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass skipTaskEClass = null;

  /**
   * Creates an instance of the model <b>Package</b>, registered with
   * {@link org.eclipse.emf.ecore.EPackage.Registry EPackage.Registry} by the package
   * package URI value.
   * <p>Note: the correct way to create the package is via the static
   * factory method {@link #init init()}, which also performs
   * initialization of the package, or returns the registered package,
   * if one already exists.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see org.eclipse.emf.ecore.EPackage.Registry
   * @see org.artemis.spec.artemis.ArtemisPackage#eNS_URI
   * @see #init()
   * @generated
   */
  private ArtemisPackageImpl()
  {
    super(eNS_URI, ArtemisFactory.eINSTANCE);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private static boolean isInited = false;

  /**
   * Creates, registers, and initializes the <b>Package</b> for this model, and for any others upon which it depends.
   *
   * <p>This method is used to initialize {@link ArtemisPackage#eINSTANCE} when that field is accessed.
   * Clients should not invoke it directly. Instead, they should simply access that field to obtain the package.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #eNS_URI
   * @see #createPackageContents()
   * @see #initializePackageContents()
   * @generated
   */
  public static ArtemisPackage init()
  {
    if (isInited) return (ArtemisPackage)EPackage.Registry.INSTANCE.getEPackage(ArtemisPackage.eNS_URI);

    // Obtain or create and register package
    Object registeredArtemisPackage = EPackage.Registry.INSTANCE.get(eNS_URI);
    ArtemisPackageImpl theArtemisPackage = registeredArtemisPackage instanceof ArtemisPackageImpl ? (ArtemisPackageImpl)registeredArtemisPackage : new ArtemisPackageImpl();

    isInited = true;

    // Create package meta-data objects
    theArtemisPackage.createPackageContents();

    // Initialize created meta-data
    theArtemisPackage.initializePackageContents();

    // Mark meta-data to indicate it can't be changed
    theArtemisPackage.freeze();

    // Update the registry and return the package
    EPackage.Registry.INSTANCE.put(ArtemisPackage.eNS_URI, theArtemisPackage);
    return theArtemisPackage;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EClass getArtemisModel()
  {
    return artemisModelEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EReference getArtemisModel_Tasks()
  {
    return (EReference)artemisModelEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EReference getArtemisModel_Paths()
  {
    return (EReference)artemisModelEClass.getEStructuralFeatures().get(1);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EReference getArtemisModel_TaskProperties()
  {
    return (EReference)artemisModelEClass.getEStructuralFeatures().get(2);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EClass getTask()
  {
    return taskEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EAttribute getTask_Name()
  {
    return (EAttribute)taskEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EClass getPath()
  {
    return pathEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EAttribute getPath_Id()
  {
    return (EAttribute)pathEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EReference getPath_Tasks()
  {
    return (EReference)pathEClass.getEStructuralFeatures().get(1);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EClass getTaskProperties()
  {
    return taskPropertiesEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EReference getTaskProperties_Task()
  {
    return (EReference)taskPropertiesEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EReference getTaskProperties_Properties()
  {
    return (EReference)taskPropertiesEClass.getEStructuralFeatures().get(1);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EClass getProperty()
  {
    return propertyEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EReference getProperty_OnFailAction()
  {
    return (EReference)propertyEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EClass getPeriod()
  {
    return periodEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EAttribute getPeriod_Period()
  {
    return (EAttribute)periodEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EAttribute getPeriod_MaxAttempts()
  {
    return (EAttribute)periodEClass.getEStructuralFeatures().get(1);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EReference getPeriod_OnFailMaxAttemptAction()
  {
    return (EReference)periodEClass.getEStructuralFeatures().get(2);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EClass getMaxTries()
  {
    return maxTriesEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EAttribute getMaxTries_NrTries()
  {
    return (EAttribute)maxTriesEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EClass getMaxDuration()
  {
    return maxDurationEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EAttribute getMaxDuration_MaxDuration()
  {
    return (EAttribute)maxDurationEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EClass getMitd()
  {
    return mitdEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EAttribute getMitd_Duration()
  {
    return (EAttribute)mitdEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EReference getMitd_DependsOn()
  {
    return (EReference)mitdEClass.getEStructuralFeatures().get(1);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EAttribute getMitd_MaxAttempts()
  {
    return (EAttribute)mitdEClass.getEStructuralFeatures().get(2);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EReference getMitd_OnFailMaxAttemptAction()
  {
    return (EReference)mitdEClass.getEStructuralFeatures().get(3);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EClass getCollect()
  {
    return collectEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EAttribute getCollect_NrItems()
  {
    return (EAttribute)collectEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EReference getCollect_DependsOn()
  {
    return (EReference)collectEClass.getEStructuralFeatures().get(1);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EClass getOnFailAction()
  {
    return onFailActionEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EClass getRestartPath()
  {
    return restartPathEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EAttribute getRestartPath_Path()
  {
    return (EAttribute)restartPathEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EClass getSkipPath()
  {
    return skipPathEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EAttribute getSkipPath_Path()
  {
    return (EAttribute)skipPathEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EClass getRestartTask()
  {
    return restartTaskEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EClass getSkipTask()
  {
    return skipTaskEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public ArtemisFactory getArtemisFactory()
  {
    return (ArtemisFactory)getEFactoryInstance();
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private boolean isCreated = false;

  /**
   * Creates the meta-model objects for the package.  This method is
   * guarded to have no affect on any invocation but its first.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public void createPackageContents()
  {
    if (isCreated) return;
    isCreated = true;

    // Create classes and their features
    artemisModelEClass = createEClass(ARTEMIS_MODEL);
    createEReference(artemisModelEClass, ARTEMIS_MODEL__TASKS);
    createEReference(artemisModelEClass, ARTEMIS_MODEL__PATHS);
    createEReference(artemisModelEClass, ARTEMIS_MODEL__TASK_PROPERTIES);

    taskEClass = createEClass(TASK);
    createEAttribute(taskEClass, TASK__NAME);

    pathEClass = createEClass(PATH);
    createEAttribute(pathEClass, PATH__ID);
    createEReference(pathEClass, PATH__TASKS);

    taskPropertiesEClass = createEClass(TASK_PROPERTIES);
    createEReference(taskPropertiesEClass, TASK_PROPERTIES__TASK);
    createEReference(taskPropertiesEClass, TASK_PROPERTIES__PROPERTIES);

    propertyEClass = createEClass(PROPERTY);
    createEReference(propertyEClass, PROPERTY__ON_FAIL_ACTION);

    periodEClass = createEClass(PERIOD);
    createEAttribute(periodEClass, PERIOD__PERIOD);
    createEAttribute(periodEClass, PERIOD__MAX_ATTEMPTS);
    createEReference(periodEClass, PERIOD__ON_FAIL_MAX_ATTEMPT_ACTION);

    maxTriesEClass = createEClass(MAX_TRIES);
    createEAttribute(maxTriesEClass, MAX_TRIES__NR_TRIES);

    maxDurationEClass = createEClass(MAX_DURATION);
    createEAttribute(maxDurationEClass, MAX_DURATION__MAX_DURATION);

    mitdEClass = createEClass(MITD);
    createEAttribute(mitdEClass, MITD__DURATION);
    createEReference(mitdEClass, MITD__DEPENDS_ON);
    createEAttribute(mitdEClass, MITD__MAX_ATTEMPTS);
    createEReference(mitdEClass, MITD__ON_FAIL_MAX_ATTEMPT_ACTION);

    collectEClass = createEClass(COLLECT);
    createEAttribute(collectEClass, COLLECT__NR_ITEMS);
    createEReference(collectEClass, COLLECT__DEPENDS_ON);

    onFailActionEClass = createEClass(ON_FAIL_ACTION);

    restartPathEClass = createEClass(RESTART_PATH);
    createEAttribute(restartPathEClass, RESTART_PATH__PATH);

    skipPathEClass = createEClass(SKIP_PATH);
    createEAttribute(skipPathEClass, SKIP_PATH__PATH);

    restartTaskEClass = createEClass(RESTART_TASK);

    skipTaskEClass = createEClass(SKIP_TASK);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private boolean isInitialized = false;

  /**
   * Complete the initialization of the package and its meta-model.  This
   * method is guarded to have no affect on any invocation but its first.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public void initializePackageContents()
  {
    if (isInitialized) return;
    isInitialized = true;

    // Initialize package
    setName(eNAME);
    setNsPrefix(eNS_PREFIX);
    setNsURI(eNS_URI);

    // Create type parameters

    // Set bounds for type parameters

    // Add supertypes to classes
    periodEClass.getESuperTypes().add(this.getProperty());
    maxTriesEClass.getESuperTypes().add(this.getProperty());
    maxDurationEClass.getESuperTypes().add(this.getProperty());
    mitdEClass.getESuperTypes().add(this.getProperty());
    collectEClass.getESuperTypes().add(this.getProperty());
    restartPathEClass.getESuperTypes().add(this.getOnFailAction());
    skipPathEClass.getESuperTypes().add(this.getOnFailAction());
    restartTaskEClass.getESuperTypes().add(this.getOnFailAction());
    skipTaskEClass.getESuperTypes().add(this.getOnFailAction());

    // Initialize classes and features; add operations and parameters
    initEClass(artemisModelEClass, ArtemisModel.class, "ArtemisModel", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEReference(getArtemisModel_Tasks(), this.getTask(), null, "tasks", null, 0, -1, ArtemisModel.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEReference(getArtemisModel_Paths(), this.getPath(), null, "paths", null, 0, -1, ArtemisModel.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEReference(getArtemisModel_TaskProperties(), this.getTaskProperties(), null, "taskProperties", null, 0, -1, ArtemisModel.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(taskEClass, Task.class, "Task", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEAttribute(getTask_Name(), ecorePackage.getEString(), "name", null, 0, 1, Task.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(pathEClass, Path.class, "Path", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEAttribute(getPath_Id(), ecorePackage.getEInt(), "id", null, 0, 1, Path.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEReference(getPath_Tasks(), this.getTask(), null, "tasks", null, 0, -1, Path.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_COMPOSITE, IS_RESOLVE_PROXIES, !IS_UNSETTABLE, !IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(taskPropertiesEClass, TaskProperties.class, "TaskProperties", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEReference(getTaskProperties_Task(), this.getTask(), null, "task", null, 0, 1, TaskProperties.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_COMPOSITE, IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEReference(getTaskProperties_Properties(), this.getProperty(), null, "properties", null, 0, -1, TaskProperties.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(propertyEClass, Property.class, "Property", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEReference(getProperty_OnFailAction(), this.getOnFailAction(), null, "onFailAction", null, 0, 1, Property.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(periodEClass, Period.class, "Period", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEAttribute(getPeriod_Period(), ecorePackage.getEDouble(), "period", null, 0, 1, Period.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEAttribute(getPeriod_MaxAttempts(), ecorePackage.getEInt(), "maxAttempts", null, 0, 1, Period.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEReference(getPeriod_OnFailMaxAttemptAction(), this.getOnFailAction(), null, "onFailMaxAttemptAction", null, 0, 1, Period.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(maxTriesEClass, MaxTries.class, "MaxTries", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEAttribute(getMaxTries_NrTries(), ecorePackage.getEInt(), "nrTries", null, 0, 1, MaxTries.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(maxDurationEClass, MaxDuration.class, "MaxDuration", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEAttribute(getMaxDuration_MaxDuration(), ecorePackage.getEDouble(), "maxDuration", null, 0, 1, MaxDuration.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(mitdEClass, Mitd.class, "Mitd", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEAttribute(getMitd_Duration(), ecorePackage.getEDouble(), "duration", null, 0, 1, Mitd.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEReference(getMitd_DependsOn(), this.getTask(), null, "dependsOn", null, 0, 1, Mitd.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_COMPOSITE, IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEAttribute(getMitd_MaxAttempts(), ecorePackage.getEInt(), "maxAttempts", null, 0, 1, Mitd.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEReference(getMitd_OnFailMaxAttemptAction(), this.getOnFailAction(), null, "onFailMaxAttemptAction", null, 0, 1, Mitd.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(collectEClass, Collect.class, "Collect", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEAttribute(getCollect_NrItems(), ecorePackage.getEInt(), "nrItems", null, 0, 1, Collect.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEReference(getCollect_DependsOn(), this.getTask(), null, "dependsOn", null, 0, 1, Collect.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_COMPOSITE, IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(onFailActionEClass, OnFailAction.class, "OnFailAction", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);

    initEClass(restartPathEClass, RestartPath.class, "RestartPath", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEAttribute(getRestartPath_Path(), ecorePackage.getEInt(), "path", null, 0, 1, RestartPath.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(skipPathEClass, SkipPath.class, "SkipPath", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEAttribute(getSkipPath_Path(), ecorePackage.getEInt(), "path", null, 0, 1, SkipPath.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(restartTaskEClass, RestartTask.class, "RestartTask", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);

    initEClass(skipTaskEClass, SkipTask.class, "SkipTask", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);

    // Create resource
    createResource(eNS_URI);
  }

} //ArtemisPackageImpl
