/**
 * generated by Xtext 2.25.0
 */
package org.artemis.spec.artemis.impl;

import org.artemis.spec.artemis.*;

import org.eclipse.emf.ecore.EClass;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.emf.ecore.EPackage;

import org.eclipse.emf.ecore.impl.EFactoryImpl;

import org.eclipse.emf.ecore.plugin.EcorePlugin;

/**
 * <!-- begin-user-doc -->
 * An implementation of the model <b>Factory</b>.
 * <!-- end-user-doc -->
 * @generated
 */
public class ArtemisFactoryImpl extends EFactoryImpl implements ArtemisFactory
{
  /**
   * Creates the default factory implementation.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public static ArtemisFactory init()
  {
    try
    {
      ArtemisFactory theArtemisFactory = (ArtemisFactory)EPackage.Registry.INSTANCE.getEFactory(ArtemisPackage.eNS_URI);
      if (theArtemisFactory != null)
      {
        return theArtemisFactory;
      }
    }
    catch (Exception exception)
    {
      EcorePlugin.INSTANCE.log(exception);
    }
    return new ArtemisFactoryImpl();
  }

  /**
   * Creates an instance of the factory.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public ArtemisFactoryImpl()
  {
    super();
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EObject create(EClass eClass)
  {
    switch (eClass.getClassifierID())
    {
      case ArtemisPackage.ARTEMIS_MODEL: return createArtemisModel();
      case ArtemisPackage.TASK: return createTask();
      case ArtemisPackage.PATH: return createPath();
      case ArtemisPackage.TASK_PROPERTIES: return createTaskProperties();
      case ArtemisPackage.PROPERTY: return createProperty();
      case ArtemisPackage.PERIOD: return createPeriod();
      case ArtemisPackage.MAX_TRIES: return createMaxTries();
      case ArtemisPackage.MAX_DURATION: return createMaxDuration();
      case ArtemisPackage.MITD: return createMitd();
      case ArtemisPackage.COLLECT: return createCollect();
      case ArtemisPackage.ON_FAIL_ACTION: return createOnFailAction();
      case ArtemisPackage.RESTART_PATH: return createRestartPath();
      case ArtemisPackage.SKIP_PATH: return createSkipPath();
      case ArtemisPackage.RESTART_TASK: return createRestartTask();
      case ArtemisPackage.SKIP_TASK: return createSkipTask();
      default:
        throw new IllegalArgumentException("The class '" + eClass.getName() + "' is not a valid classifier");
    }
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public ArtemisModel createArtemisModel()
  {
    ArtemisModelImpl artemisModel = new ArtemisModelImpl();
    return artemisModel;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Task createTask()
  {
    TaskImpl task = new TaskImpl();
    return task;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Path createPath()
  {
    PathImpl path = new PathImpl();
    return path;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public TaskProperties createTaskProperties()
  {
    TaskPropertiesImpl taskProperties = new TaskPropertiesImpl();
    return taskProperties;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Property createProperty()
  {
    PropertyImpl property = new PropertyImpl();
    return property;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Period createPeriod()
  {
    PeriodImpl period = new PeriodImpl();
    return period;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public MaxTries createMaxTries()
  {
    MaxTriesImpl maxTries = new MaxTriesImpl();
    return maxTries;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public MaxDuration createMaxDuration()
  {
    MaxDurationImpl maxDuration = new MaxDurationImpl();
    return maxDuration;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Mitd createMitd()
  {
    MitdImpl mitd = new MitdImpl();
    return mitd;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Collect createCollect()
  {
    CollectImpl collect = new CollectImpl();
    return collect;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public OnFailAction createOnFailAction()
  {
    OnFailActionImpl onFailAction = new OnFailActionImpl();
    return onFailAction;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public RestartPath createRestartPath()
  {
    RestartPathImpl restartPath = new RestartPathImpl();
    return restartPath;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public SkipPath createSkipPath()
  {
    SkipPathImpl skipPath = new SkipPathImpl();
    return skipPath;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public RestartTask createRestartTask()
  {
    RestartTaskImpl restartTask = new RestartTaskImpl();
    return restartTask;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public SkipTask createSkipTask()
  {
    SkipTaskImpl skipTask = new SkipTaskImpl();
    return skipTask;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public ArtemisPackage getArtemisPackage()
  {
    return (ArtemisPackage)getEPackage();
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @deprecated
   * @generated
   */
  @Deprecated
  public static ArtemisPackage getPackage()
  {
    return ArtemisPackage.eINSTANCE;
  }

} //ArtemisFactoryImpl
