/**
 * generated by Xtext 2.25.0
 */
package org.artemis.spec.artemis.impl;

import java.util.Collection;

import org.artemis.spec.artemis.ArtemisModel;
import org.artemis.spec.artemis.ArtemisPackage;
import org.artemis.spec.artemis.Path;
import org.artemis.spec.artemis.Task;
import org.artemis.spec.artemis.TaskProperties;

import org.eclipse.emf.common.notify.NotificationChain;

import org.eclipse.emf.common.util.EList;

import org.eclipse.emf.ecore.EClass;
import org.eclipse.emf.ecore.InternalEObject;

import org.eclipse.emf.ecore.impl.MinimalEObjectImpl;

import org.eclipse.emf.ecore.util.EObjectContainmentEList;
import org.eclipse.emf.ecore.util.InternalEList;

/**
 * <!-- begin-user-doc -->
 * An implementation of the model object '<em><b>Model</b></em>'.
 * <!-- end-user-doc -->
 * <p>
 * The following features are implemented:
 * </p>
 * <ul>
 *   <li>{@link org.artemis.spec.artemis.impl.ArtemisModelImpl#getTasks <em>Tasks</em>}</li>
 *   <li>{@link org.artemis.spec.artemis.impl.ArtemisModelImpl#getPaths <em>Paths</em>}</li>
 *   <li>{@link org.artemis.spec.artemis.impl.ArtemisModelImpl#getTaskProperties <em>Task Properties</em>}</li>
 * </ul>
 *
 * @generated
 */
public class ArtemisModelImpl extends MinimalEObjectImpl.Container implements ArtemisModel
{
  /**
   * The cached value of the '{@link #getTasks() <em>Tasks</em>}' containment reference list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getTasks()
   * @generated
   * @ordered
   */
  protected EList<Task> tasks;

  /**
   * The cached value of the '{@link #getPaths() <em>Paths</em>}' containment reference list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getPaths()
   * @generated
   * @ordered
   */
  protected EList<Path> paths;

  /**
   * The cached value of the '{@link #getTaskProperties() <em>Task Properties</em>}' containment reference list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getTaskProperties()
   * @generated
   * @ordered
   */
  protected EList<TaskProperties> taskProperties;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  protected ArtemisModelImpl()
  {
    super();
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  protected EClass eStaticClass()
  {
    return ArtemisPackage.Literals.ARTEMIS_MODEL;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EList<Task> getTasks()
  {
    if (tasks == null)
    {
      tasks = new EObjectContainmentEList<Task>(Task.class, this, ArtemisPackage.ARTEMIS_MODEL__TASKS);
    }
    return tasks;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EList<Path> getPaths()
  {
    if (paths == null)
    {
      paths = new EObjectContainmentEList<Path>(Path.class, this, ArtemisPackage.ARTEMIS_MODEL__PATHS);
    }
    return paths;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EList<TaskProperties> getTaskProperties()
  {
    if (taskProperties == null)
    {
      taskProperties = new EObjectContainmentEList<TaskProperties>(TaskProperties.class, this, ArtemisPackage.ARTEMIS_MODEL__TASK_PROPERTIES);
    }
    return taskProperties;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public NotificationChain eInverseRemove(InternalEObject otherEnd, int featureID, NotificationChain msgs)
  {
    switch (featureID)
    {
      case ArtemisPackage.ARTEMIS_MODEL__TASKS:
        return ((InternalEList<?>)getTasks()).basicRemove(otherEnd, msgs);
      case ArtemisPackage.ARTEMIS_MODEL__PATHS:
        return ((InternalEList<?>)getPaths()).basicRemove(otherEnd, msgs);
      case ArtemisPackage.ARTEMIS_MODEL__TASK_PROPERTIES:
        return ((InternalEList<?>)getTaskProperties()).basicRemove(otherEnd, msgs);
    }
    return super.eInverseRemove(otherEnd, featureID, msgs);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Object eGet(int featureID, boolean resolve, boolean coreType)
  {
    switch (featureID)
    {
      case ArtemisPackage.ARTEMIS_MODEL__TASKS:
        return getTasks();
      case ArtemisPackage.ARTEMIS_MODEL__PATHS:
        return getPaths();
      case ArtemisPackage.ARTEMIS_MODEL__TASK_PROPERTIES:
        return getTaskProperties();
    }
    return super.eGet(featureID, resolve, coreType);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @SuppressWarnings("unchecked")
  @Override
  public void eSet(int featureID, Object newValue)
  {
    switch (featureID)
    {
      case ArtemisPackage.ARTEMIS_MODEL__TASKS:
        getTasks().clear();
        getTasks().addAll((Collection<? extends Task>)newValue);
        return;
      case ArtemisPackage.ARTEMIS_MODEL__PATHS:
        getPaths().clear();
        getPaths().addAll((Collection<? extends Path>)newValue);
        return;
      case ArtemisPackage.ARTEMIS_MODEL__TASK_PROPERTIES:
        getTaskProperties().clear();
        getTaskProperties().addAll((Collection<? extends TaskProperties>)newValue);
        return;
    }
    super.eSet(featureID, newValue);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void eUnset(int featureID)
  {
    switch (featureID)
    {
      case ArtemisPackage.ARTEMIS_MODEL__TASKS:
        getTasks().clear();
        return;
      case ArtemisPackage.ARTEMIS_MODEL__PATHS:
        getPaths().clear();
        return;
      case ArtemisPackage.ARTEMIS_MODEL__TASK_PROPERTIES:
        getTaskProperties().clear();
        return;
    }
    super.eUnset(featureID);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public boolean eIsSet(int featureID)
  {
    switch (featureID)
    {
      case ArtemisPackage.ARTEMIS_MODEL__TASKS:
        return tasks != null && !tasks.isEmpty();
      case ArtemisPackage.ARTEMIS_MODEL__PATHS:
        return paths != null && !paths.isEmpty();
      case ArtemisPackage.ARTEMIS_MODEL__TASK_PROPERTIES:
        return taskProperties != null && !taskProperties.isEmpty();
    }
    return super.eIsSet(featureID);
  }

} //ArtemisModelImpl
