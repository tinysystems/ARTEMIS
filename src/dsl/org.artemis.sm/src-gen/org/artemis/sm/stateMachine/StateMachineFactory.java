/**
 * generated by Xtext 2.25.0
 */
package org.artemis.sm.stateMachine;

import org.eclipse.emf.ecore.EFactory;

/**
 * <!-- begin-user-doc -->
 * The <b>Factory</b> for the model.
 * It provides a create method for each non-abstract class of the model.
 * <!-- end-user-doc -->
 * @see org.artemis.sm.stateMachine.StateMachinePackage
 * @generated
 */
public interface StateMachineFactory extends EFactory
{
  /**
   * The singleton instance of the factory.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  StateMachineFactory eINSTANCE = org.artemis.sm.stateMachine.impl.StateMachineFactoryImpl.init();

  /**
   * Returns a new object of class '<em>Monitor</em>'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return a new object of class '<em>Monitor</em>'.
   * @generated
   */
  Monitor createMonitor();

  /**
   * Returns a new object of class '<em>State Machine</em>'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return a new object of class '<em>State Machine</em>'.
   * @generated
   */
  StateMachine createStateMachine();

  /**
   * Returns a new object of class '<em>State</em>'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return a new object of class '<em>State</em>'.
   * @generated
   */
  State createState();

  /**
   * Returns a new object of class '<em>Transition</em>'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return a new object of class '<em>Transition</em>'.
   * @generated
   */
  Transition createTransition();

  /**
   * Returns a new object of class '<em>Event</em>'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return a new object of class '<em>Event</em>'.
   * @generated
   */
  Event createEvent();

  /**
   * Returns a new object of class '<em>Start Task</em>'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return a new object of class '<em>Start Task</em>'.
   * @generated
   */
  StartTask createStartTask();

  /**
   * Returns a new object of class '<em>End Task</em>'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return a new object of class '<em>End Task</em>'.
   * @generated
   */
  EndTask createEndTask();

  /**
   * Returns a new object of class '<em>Any Event</em>'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return a new object of class '<em>Any Event</em>'.
   * @generated
   */
  AnyEvent createAnyEvent();

  /**
   * Returns a new object of class '<em>Variable</em>'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return a new object of class '<em>Variable</em>'.
   * @generated
   */
  Variable createVariable();

  /**
   * Returns a new object of class '<em>Untyped Variable</em>'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return a new object of class '<em>Untyped Variable</em>'.
   * @generated
   */
  UntypedVariable createUntypedVariable();

  /**
   * Returns a new object of class '<em>Typed Variable</em>'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return a new object of class '<em>Typed Variable</em>'.
   * @generated
   */
  TypedVariable createTypedVariable();

  /**
   * Returns a new object of class '<em>Action</em>'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return a new object of class '<em>Action</em>'.
   * @generated
   */
  Action createAction();

  /**
   * Returns a new object of class '<em>Assignment Action</em>'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return a new object of class '<em>Assignment Action</em>'.
   * @generated
   */
  AssignmentAction createAssignmentAction();

  /**
   * Returns a new object of class '<em>On Fail Action</em>'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return a new object of class '<em>On Fail Action</em>'.
   * @generated
   */
  OnFailAction createOnFailAction();

  /**
   * Returns a new object of class '<em>Restart Path</em>'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return a new object of class '<em>Restart Path</em>'.
   * @generated
   */
  RestartPath createRestartPath();

  /**
   * Returns a new object of class '<em>Skip Path</em>'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return a new object of class '<em>Skip Path</em>'.
   * @generated
   */
  SkipPath createSkipPath();

  /**
   * Returns a new object of class '<em>Restart Task</em>'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return a new object of class '<em>Restart Task</em>'.
   * @generated
   */
  RestartTask createRestartTask();

  /**
   * Returns a new object of class '<em>Skip Task</em>'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return a new object of class '<em>Skip Task</em>'.
   * @generated
   */
  SkipTask createSkipTask();

  /**
   * Returns a new object of class '<em>Expression</em>'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return a new object of class '<em>Expression</em>'.
   * @generated
   */
  Expression createExpression();

  /**
   * Returns a new object of class '<em>Expression Not</em>'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return a new object of class '<em>Expression Not</em>'.
   * @generated
   */
  ExpressionNot createExpressionNot();

  /**
   * Returns a new object of class '<em>Expression Minus</em>'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return a new object of class '<em>Expression Minus</em>'.
   * @generated
   */
  ExpressionMinus createExpressionMinus();

  /**
   * Returns a new object of class '<em>Expression Plus</em>'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return a new object of class '<em>Expression Plus</em>'.
   * @generated
   */
  ExpressionPlus createExpressionPlus();

  /**
   * Returns a new object of class '<em>Expression Level8</em>'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return a new object of class '<em>Expression Level8</em>'.
   * @generated
   */
  ExpressionLevel8 createExpressionLevel8();

  /**
   * Returns a new object of class '<em>Expression Bracket</em>'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return a new object of class '<em>Expression Bracket</em>'.
   * @generated
   */
  ExpressionBracket createExpressionBracket();

  /**
   * Returns a new object of class '<em>Expression Constant Bool</em>'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return a new object of class '<em>Expression Constant Bool</em>'.
   * @generated
   */
  ExpressionConstantBool createExpressionConstantBool();

  /**
   * Returns a new object of class '<em>Expression Constant Int</em>'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return a new object of class '<em>Expression Constant Int</em>'.
   * @generated
   */
  ExpressionConstantInt createExpressionConstantInt();

  /**
   * Returns a new object of class '<em>Expression Constant Real</em>'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return a new object of class '<em>Expression Constant Real</em>'.
   * @generated
   */
  ExpressionConstantReal createExpressionConstantReal();

  /**
   * Returns a new object of class '<em>Expression Constant String</em>'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return a new object of class '<em>Expression Constant String</em>'.
   * @generated
   */
  ExpressionConstantString createExpressionConstantString();

  /**
   * Returns a new object of class '<em>Expression Variable</em>'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return a new object of class '<em>Expression Variable</em>'.
   * @generated
   */
  ExpressionVariable createExpressionVariable();

  /**
   * Returns a new object of class '<em>Expression And</em>'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return a new object of class '<em>Expression And</em>'.
   * @generated
   */
  ExpressionAnd createExpressionAnd();

  /**
   * Returns a new object of class '<em>Expression Or</em>'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return a new object of class '<em>Expression Or</em>'.
   * @generated
   */
  ExpressionOr createExpressionOr();

  /**
   * Returns a new object of class '<em>Expression Equal</em>'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return a new object of class '<em>Expression Equal</em>'.
   * @generated
   */
  ExpressionEqual createExpressionEqual();

  /**
   * Returns a new object of class '<em>Expression NEqual</em>'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return a new object of class '<em>Expression NEqual</em>'.
   * @generated
   */
  ExpressionNEqual createExpressionNEqual();

  /**
   * Returns a new object of class '<em>Expression Geq</em>'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return a new object of class '<em>Expression Geq</em>'.
   * @generated
   */
  ExpressionGeq createExpressionGeq();

  /**
   * Returns a new object of class '<em>Expression Greater</em>'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return a new object of class '<em>Expression Greater</em>'.
   * @generated
   */
  ExpressionGreater createExpressionGreater();

  /**
   * Returns a new object of class '<em>Expression Leq</em>'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return a new object of class '<em>Expression Leq</em>'.
   * @generated
   */
  ExpressionLeq createExpressionLeq();

  /**
   * Returns a new object of class '<em>Expression Less</em>'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return a new object of class '<em>Expression Less</em>'.
   * @generated
   */
  ExpressionLess createExpressionLess();

  /**
   * Returns a new object of class '<em>Expression Addition</em>'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return a new object of class '<em>Expression Addition</em>'.
   * @generated
   */
  ExpressionAddition createExpressionAddition();

  /**
   * Returns a new object of class '<em>Expression Subtraction</em>'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return a new object of class '<em>Expression Subtraction</em>'.
   * @generated
   */
  ExpressionSubtraction createExpressionSubtraction();

  /**
   * Returns a new object of class '<em>Expression Multiply</em>'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return a new object of class '<em>Expression Multiply</em>'.
   * @generated
   */
  ExpressionMultiply createExpressionMultiply();

  /**
   * Returns a new object of class '<em>Expression Division</em>'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return a new object of class '<em>Expression Division</em>'.
   * @generated
   */
  ExpressionDivision createExpressionDivision();

  /**
   * Returns a new object of class '<em>Expression Maximum</em>'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return a new object of class '<em>Expression Maximum</em>'.
   * @generated
   */
  ExpressionMaximum createExpressionMaximum();

  /**
   * Returns a new object of class '<em>Expression Minimum</em>'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return a new object of class '<em>Expression Minimum</em>'.
   * @generated
   */
  ExpressionMinimum createExpressionMinimum();

  /**
   * Returns a new object of class '<em>Expression Power</em>'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return a new object of class '<em>Expression Power</em>'.
   * @generated
   */
  ExpressionPower createExpressionPower();

  /**
   * Returns the package supported by this factory.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the package supported by this factory.
   * @generated
   */
  StateMachinePackage getStateMachinePackage();

} //StateMachineFactory
