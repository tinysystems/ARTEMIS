/*
 * generated by Xtext 2.25.0
 */
grammar InternalStateMachine;

options {
	superClass=AbstractInternalAntlrParser;
}

@lexer::header {
package org.artemis.sm.parser.antlr.internal;

// Hack: Use our own Lexer superclass by means of import. 
// Currently there is no other way to specify the superclass for the lexer.
import org.eclipse.xtext.parser.antlr.Lexer;
}

@parser::header {
package org.artemis.sm.parser.antlr.internal;

import org.eclipse.xtext.*;
import org.eclipse.xtext.parser.*;
import org.eclipse.xtext.parser.impl.*;
import org.eclipse.emf.ecore.util.EcoreUtil;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.xtext.parser.antlr.AbstractInternalAntlrParser;
import org.eclipse.xtext.parser.antlr.XtextTokenStream;
import org.eclipse.xtext.parser.antlr.XtextTokenStream.HiddenTokens;
import org.eclipse.xtext.parser.antlr.AntlrDatatypeRuleToken;
import org.artemis.sm.services.StateMachineGrammarAccess;

}

@parser::members {

 	private StateMachineGrammarAccess grammarAccess;

    public InternalStateMachineParser(TokenStream input, StateMachineGrammarAccess grammarAccess) {
        this(input);
        this.grammarAccess = grammarAccess;
        registerRules(grammarAccess.getGrammar());
    }

    @Override
    protected String getFirstRuleName() {
    	return "Monitor";
   	}

   	@Override
   	protected StateMachineGrammarAccess getGrammarAccess() {
   		return grammarAccess;
   	}

}

@rulecatch {
    catch (RecognitionException re) {
        recover(input,re);
        appendSkippedTokens();
    }
}

// Entry rule entryRuleMonitor
entryRuleMonitor returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getMonitorRule()); }
	iv_ruleMonitor=ruleMonitor
	{ $current=$iv_ruleMonitor.current; }
	EOF;

// Rule Monitor
ruleMonitor returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				newCompositeNode(grammarAccess.getMonitorAccess().getMachinesStateMachineParserRuleCall_0());
			}
			lv_machines_0_0=ruleStateMachine
			{
				if ($current==null) {
					$current = createModelElementForParent(grammarAccess.getMonitorRule());
				}
				add(
					$current,
					"machines",
					lv_machines_0_0,
					"org.artemis.sm.StateMachine.StateMachine");
				afterParserOrEnumRuleCall();
			}
		)
	)+
;

// Entry rule entryRuleStateMachine
entryRuleStateMachine returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getStateMachineRule()); }
	iv_ruleStateMachine=ruleStateMachine
	{ $current=$iv_ruleStateMachine.current; }
	EOF;

// Rule StateMachine
ruleStateMachine returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='machine'
		{
			newLeafNode(otherlv_0, grammarAccess.getStateMachineAccess().getMachineKeyword_0());
		}
		(
			(
				lv_name_1_0=RULE_ID
				{
					newLeafNode(lv_name_1_0, grammarAccess.getStateMachineAccess().getNameIDTerminalRuleCall_1_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getStateMachineRule());
					}
					setWithLastConsumed(
						$current,
						"name",
						lv_name_1_0,
						"org.eclipse.xtext.common.Terminals.ID");
				}
			)
		)
		otherlv_2='{'
		{
			newLeafNode(otherlv_2, grammarAccess.getStateMachineAccess().getLeftCurlyBracketKeyword_2());
		}
		(
			otherlv_3='variables'
			{
				newLeafNode(otherlv_3, grammarAccess.getStateMachineAccess().getVariablesKeyword_3_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getStateMachineAccess().getVarsTypedVariableParserRuleCall_3_1_0());
					}
					lv_vars_4_0=ruleTypedVariable
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getStateMachineRule());
						}
						add(
							$current,
							"vars",
							lv_vars_4_0,
							"org.artemis.sm.StateMachine.TypedVariable");
						afterParserOrEnumRuleCall();
					}
				)
			)+
		)?
		(
			(
				{
					newCompositeNode(grammarAccess.getStateMachineAccess().getStatesStateParserRuleCall_4_0());
				}
				lv_states_5_0=ruleState
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getStateMachineRule());
					}
					add(
						$current,
						"states",
						lv_states_5_0,
						"org.artemis.sm.StateMachine.State");
					afterParserOrEnumRuleCall();
				}
			)
		)+
		otherlv_6='}'
		{
			newLeafNode(otherlv_6, grammarAccess.getStateMachineAccess().getRightCurlyBracketKeyword_5());
		}
	)
;

// Entry rule entryRuleState
entryRuleState returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getStateRule()); }
	iv_ruleState=ruleState
	{ $current=$iv_ruleState.current; }
	EOF;

// Rule State
ruleState returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				lv_initial_0_0='initial'
				{
					newLeafNode(lv_initial_0_0, grammarAccess.getStateAccess().getInitialInitialKeyword_0_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getStateRule());
					}
					setWithLastConsumed($current, "initial", lv_initial_0_0 != null, "initial");
				}
			)
		)?
		otherlv_1='state'
		{
			newLeafNode(otherlv_1, grammarAccess.getStateAccess().getStateKeyword_1());
		}
		(
			(
				lv_name_2_0=RULE_ID
				{
					newLeafNode(lv_name_2_0, grammarAccess.getStateAccess().getNameIDTerminalRuleCall_2_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getStateRule());
					}
					setWithLastConsumed(
						$current,
						"name",
						lv_name_2_0,
						"org.eclipse.xtext.common.Terminals.ID");
				}
			)
		)
		otherlv_3='{'
		{
			newLeafNode(otherlv_3, grammarAccess.getStateAccess().getLeftCurlyBracketKeyword_3());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getStateAccess().getTransitionsTransitionParserRuleCall_4_0());
				}
				lv_transitions_4_0=ruleTransition
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getStateRule());
					}
					add(
						$current,
						"transitions",
						lv_transitions_4_0,
						"org.artemis.sm.StateMachine.Transition");
					afterParserOrEnumRuleCall();
				}
			)
		)*
		otherlv_5='}'
		{
			newLeafNode(otherlv_5, grammarAccess.getStateAccess().getRightCurlyBracketKeyword_5());
		}
	)
;

// Entry rule entryRuleTransition
entryRuleTransition returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getTransitionRule()); }
	iv_ruleTransition=ruleTransition
	{ $current=$iv_ruleTransition.current; }
	EOF;

// Rule Transition
ruleTransition returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='on'
		{
			newLeafNode(otherlv_0, grammarAccess.getTransitionAccess().getOnKeyword_0());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getTransitionAccess().getEventEventParserRuleCall_1_0());
				}
				lv_event_1_0=ruleEvent
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getTransitionRule());
					}
					set(
						$current,
						"event",
						lv_event_1_0,
						"org.artemis.sm.StateMachine.Event");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			otherlv_2='guard:'
			{
				newLeafNode(otherlv_2, grammarAccess.getTransitionAccess().getGuardKeyword_2_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getTransitionAccess().getGuardExpressionParserRuleCall_2_1_0());
					}
					lv_guard_3_0=ruleExpression
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getTransitionRule());
						}
						set(
							$current,
							"guard",
							lv_guard_3_0,
							"org.artemis.sm.StateMachine.Expression");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)?
		(
			(
				{
					newCompositeNode(grammarAccess.getTransitionAccess().getActionsActionParserRuleCall_3_0());
				}
				lv_actions_4_0=ruleAction
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getTransitionRule());
					}
					add(
						$current,
						"actions",
						lv_actions_4_0,
						"org.artemis.sm.StateMachine.Action");
					afterParserOrEnumRuleCall();
				}
			)
		)*
		(
			(
				{
					newCompositeNode(grammarAccess.getTransitionAccess().getOnFailOnFailActionParserRuleCall_4_0());
				}
				lv_onFail_5_0=ruleOnFailAction
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getTransitionRule());
					}
					set(
						$current,
						"onFail",
						lv_onFail_5_0,
						"org.artemis.sm.StateMachine.OnFailAction");
					afterParserOrEnumRuleCall();
				}
			)
		)?
		otherlv_6='next'
		{
			newLeafNode(otherlv_6, grammarAccess.getTransitionAccess().getNextKeyword_5());
		}
		otherlv_7='state:'
		{
			newLeafNode(otherlv_7, grammarAccess.getTransitionAccess().getStateKeyword_6());
		}
		(
			(
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getTransitionRule());
					}
				}
				otherlv_8=RULE_ID
				{
					newLeafNode(otherlv_8, grammarAccess.getTransitionAccess().getNextStateCrossReference_7_0());
				}
			)
		)
	)
;

// Entry rule entryRuleEvent
entryRuleEvent returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getEventRule()); }
	iv_ruleEvent=ruleEvent
	{ $current=$iv_ruleEvent.current; }
	EOF;

// Rule Event
ruleEvent returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		{
			newCompositeNode(grammarAccess.getEventAccess().getStartTaskParserRuleCall_0());
		}
		this_StartTask_0=ruleStartTask
		{
			$current = $this_StartTask_0.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getEventAccess().getEndTaskParserRuleCall_1());
		}
		this_EndTask_1=ruleEndTask
		{
			$current = $this_EndTask_1.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getEventAccess().getAnyEventParserRuleCall_2());
		}
		this_AnyEvent_2=ruleAnyEvent
		{
			$current = $this_AnyEvent_2.current;
			afterParserOrEnumRuleCall();
		}
	)
;

// Entry rule entryRuleStartTask
entryRuleStartTask returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getStartTaskRule()); }
	iv_ruleStartTask=ruleStartTask
	{ $current=$iv_ruleStartTask.current; }
	EOF;

// Rule StartTask
ruleStartTask returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='startTask'
		{
			newLeafNode(otherlv_0, grammarAccess.getStartTaskAccess().getStartTaskKeyword_0());
		}
		otherlv_1='('
		{
			newLeafNode(otherlv_1, grammarAccess.getStartTaskAccess().getLeftParenthesisKeyword_1());
		}
		(
			(
				lv_task_2_0=RULE_ID
				{
					newLeafNode(lv_task_2_0, grammarAccess.getStartTaskAccess().getTaskIDTerminalRuleCall_2_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getStartTaskRule());
					}
					setWithLastConsumed(
						$current,
						"task",
						lv_task_2_0,
						"org.eclipse.xtext.common.Terminals.ID");
				}
			)
		)
		otherlv_3=','
		{
			newLeafNode(otherlv_3, grammarAccess.getStartTaskAccess().getCommaKeyword_3());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getStartTaskAccess().getTimeVarUntypedVariableParserRuleCall_4_0());
				}
				lv_timeVar_4_0=ruleUntypedVariable
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getStartTaskRule());
					}
					set(
						$current,
						"timeVar",
						lv_timeVar_4_0,
						"org.artemis.sm.StateMachine.UntypedVariable");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_5=')'
		{
			newLeafNode(otherlv_5, grammarAccess.getStartTaskAccess().getRightParenthesisKeyword_5());
		}
	)
;

// Entry rule entryRuleEndTask
entryRuleEndTask returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getEndTaskRule()); }
	iv_ruleEndTask=ruleEndTask
	{ $current=$iv_ruleEndTask.current; }
	EOF;

// Rule EndTask
ruleEndTask returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='endTask'
		{
			newLeafNode(otherlv_0, grammarAccess.getEndTaskAccess().getEndTaskKeyword_0());
		}
		otherlv_1='('
		{
			newLeafNode(otherlv_1, grammarAccess.getEndTaskAccess().getLeftParenthesisKeyword_1());
		}
		(
			(
				lv_task_2_0=RULE_ID
				{
					newLeafNode(lv_task_2_0, grammarAccess.getEndTaskAccess().getTaskIDTerminalRuleCall_2_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getEndTaskRule());
					}
					setWithLastConsumed(
						$current,
						"task",
						lv_task_2_0,
						"org.eclipse.xtext.common.Terminals.ID");
				}
			)
		)
		otherlv_3=','
		{
			newLeafNode(otherlv_3, grammarAccess.getEndTaskAccess().getCommaKeyword_3());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getEndTaskAccess().getTimeVarUntypedVariableParserRuleCall_4_0());
				}
				lv_timeVar_4_0=ruleUntypedVariable
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getEndTaskRule());
					}
					set(
						$current,
						"timeVar",
						lv_timeVar_4_0,
						"org.artemis.sm.StateMachine.UntypedVariable");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_5=')'
		{
			newLeafNode(otherlv_5, grammarAccess.getEndTaskAccess().getRightParenthesisKeyword_5());
		}
	)
;

// Entry rule entryRuleAnyEvent
entryRuleAnyEvent returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getAnyEventRule()); }
	iv_ruleAnyEvent=ruleAnyEvent
	{ $current=$iv_ruleAnyEvent.current; }
	EOF;

// Rule AnyEvent
ruleAnyEvent returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='anyEvent'
		{
			newLeafNode(otherlv_0, grammarAccess.getAnyEventAccess().getAnyEventKeyword_0());
		}
		otherlv_1='('
		{
			newLeafNode(otherlv_1, grammarAccess.getAnyEventAccess().getLeftParenthesisKeyword_1());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getAnyEventAccess().getTimeVarUntypedVariableParserRuleCall_2_0());
				}
				lv_timeVar_2_0=ruleUntypedVariable
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getAnyEventRule());
					}
					set(
						$current,
						"timeVar",
						lv_timeVar_2_0,
						"org.artemis.sm.StateMachine.UntypedVariable");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_3=')'
		{
			newLeafNode(otherlv_3, grammarAccess.getAnyEventAccess().getRightParenthesisKeyword_3());
		}
	)
;

// Entry rule entryRuleUntypedVariable
entryRuleUntypedVariable returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getUntypedVariableRule()); }
	iv_ruleUntypedVariable=ruleUntypedVariable
	{ $current=$iv_ruleUntypedVariable.current; }
	EOF;

// Rule UntypedVariable
ruleUntypedVariable returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			lv_name_0_0=RULE_ID
			{
				newLeafNode(lv_name_0_0, grammarAccess.getUntypedVariableAccess().getNameIDTerminalRuleCall_0());
			}
			{
				if ($current==null) {
					$current = createModelElement(grammarAccess.getUntypedVariableRule());
				}
				setWithLastConsumed(
					$current,
					"name",
					lv_name_0_0,
					"org.eclipse.xtext.common.Terminals.ID");
			}
		)
	)
;

// Entry rule entryRuleTypedVariable
entryRuleTypedVariable returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getTypedVariableRule()); }
	iv_ruleTypedVariable=ruleTypedVariable
	{ $current=$iv_ruleTypedVariable.current; }
	EOF;

// Rule TypedVariable
ruleTypedVariable returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				{
					newCompositeNode(grammarAccess.getTypedVariableAccess().getTypeTypeParserRuleCall_0_0());
				}
				lv_type_0_0=ruleType
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getTypedVariableRule());
					}
					set(
						$current,
						"type",
						lv_type_0_0,
						"org.artemis.base.Base.Type");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			(
				lv_name_1_0=RULE_ID
				{
					newLeafNode(lv_name_1_0, grammarAccess.getTypedVariableAccess().getNameIDTerminalRuleCall_1_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getTypedVariableRule());
					}
					setWithLastConsumed(
						$current,
						"name",
						lv_name_1_0,
						"org.eclipse.xtext.common.Terminals.ID");
				}
			)
		)
		(
			otherlv_2='='
			{
				newLeafNode(otherlv_2, grammarAccess.getTypedVariableAccess().getEqualsSignKeyword_2_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getTypedVariableAccess().getExprExpressionParserRuleCall_2_1_0());
					}
					lv_expr_3_0=ruleExpression
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getTypedVariableRule());
						}
						set(
							$current,
							"expr",
							lv_expr_3_0,
							"org.artemis.sm.StateMachine.Expression");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)?
	)
;

// Entry rule entryRuleAction
entryRuleAction returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getActionRule()); }
	iv_ruleAction=ruleAction
	{ $current=$iv_ruleAction.current; }
	EOF;

// Rule Action
ruleAction returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	{
		newCompositeNode(grammarAccess.getActionAccess().getAssignmentActionParserRuleCall());
	}
	this_AssignmentAction_0=ruleAssignmentAction
	{
		$current = $this_AssignmentAction_0.current;
		afterParserOrEnumRuleCall();
	}
;

// Entry rule entryRuleAssignmentAction
entryRuleAssignmentAction returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getAssignmentActionRule()); }
	iv_ruleAssignmentAction=ruleAssignmentAction
	{ $current=$iv_ruleAssignmentAction.current; }
	EOF;

// Rule AssignmentAction
ruleAssignmentAction returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getAssignmentActionRule());
					}
				}
				otherlv_0=RULE_ID
				{
					newLeafNode(otherlv_0, grammarAccess.getAssignmentActionAccess().getVarVariableCrossReference_0_0());
				}
			)
		)
		otherlv_1='='
		{
			newLeafNode(otherlv_1, grammarAccess.getAssignmentActionAccess().getEqualsSignKeyword_1());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getAssignmentActionAccess().getExprExpressionParserRuleCall_2_0());
				}
				lv_expr_2_0=ruleExpression
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getAssignmentActionRule());
					}
					set(
						$current,
						"expr",
						lv_expr_2_0,
						"org.artemis.sm.StateMachine.Expression");
					afterParserOrEnumRuleCall();
				}
			)
		)
	)
;

// Entry rule entryRuleOnFailAction
entryRuleOnFailAction returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getOnFailActionRule()); }
	iv_ruleOnFailAction=ruleOnFailAction
	{ $current=$iv_ruleOnFailAction.current; }
	EOF;

// Rule OnFailAction
ruleOnFailAction returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		{
			newCompositeNode(grammarAccess.getOnFailActionAccess().getRestartPathParserRuleCall_0());
		}
		this_RestartPath_0=ruleRestartPath
		{
			$current = $this_RestartPath_0.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getOnFailActionAccess().getSkipPathParserRuleCall_1());
		}
		this_SkipPath_1=ruleSkipPath
		{
			$current = $this_SkipPath_1.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getOnFailActionAccess().getRestartTaskParserRuleCall_2());
		}
		this_RestartTask_2=ruleRestartTask
		{
			$current = $this_RestartTask_2.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getOnFailActionAccess().getSkipTaskParserRuleCall_3());
		}
		this_SkipTask_3=ruleSkipTask
		{
			$current = $this_SkipTask_3.current;
			afterParserOrEnumRuleCall();
		}
	)
;

// Entry rule entryRuleRestartPath
entryRuleRestartPath returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getRestartPathRule()); }
	iv_ruleRestartPath=ruleRestartPath
	{ $current=$iv_ruleRestartPath.current; }
	EOF;

// Rule RestartPath
ruleRestartPath returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				$current = forceCreateModelElement(
					grammarAccess.getRestartPathAccess().getRestartPathAction_0(),
					$current);
			}
		)
		otherlv_1='restartPath'
		{
			newLeafNode(otherlv_1, grammarAccess.getRestartPathAccess().getRestartPathKeyword_1());
		}
		(
			otherlv_2='Path:'
			{
				newLeafNode(otherlv_2, grammarAccess.getRestartPathAccess().getPathKeyword_2_0());
			}
			(
				(
					lv_path_3_0=RULE_INT
					{
						newLeafNode(lv_path_3_0, grammarAccess.getRestartPathAccess().getPathINTTerminalRuleCall_2_1_0());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getRestartPathRule());
						}
						setWithLastConsumed(
							$current,
							"path",
							lv_path_3_0,
							"org.eclipse.xtext.common.Terminals.INT");
					}
				)
			)
		)?
	)
;

// Entry rule entryRuleSkipPath
entryRuleSkipPath returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getSkipPathRule()); }
	iv_ruleSkipPath=ruleSkipPath
	{ $current=$iv_ruleSkipPath.current; }
	EOF;

// Rule SkipPath
ruleSkipPath returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				$current = forceCreateModelElement(
					grammarAccess.getSkipPathAccess().getSkipPathAction_0(),
					$current);
			}
		)
		otherlv_1='skipPath'
		{
			newLeafNode(otherlv_1, grammarAccess.getSkipPathAccess().getSkipPathKeyword_1());
		}
		(
			otherlv_2='Path:'
			{
				newLeafNode(otherlv_2, grammarAccess.getSkipPathAccess().getPathKeyword_2_0());
			}
			(
				(
					lv_path_3_0=RULE_INT
					{
						newLeafNode(lv_path_3_0, grammarAccess.getSkipPathAccess().getPathINTTerminalRuleCall_2_1_0());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getSkipPathRule());
						}
						setWithLastConsumed(
							$current,
							"path",
							lv_path_3_0,
							"org.eclipse.xtext.common.Terminals.INT");
					}
				)
			)
		)?
	)
;

// Entry rule entryRuleRestartTask
entryRuleRestartTask returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getRestartTaskRule()); }
	iv_ruleRestartTask=ruleRestartTask
	{ $current=$iv_ruleRestartTask.current; }
	EOF;

// Rule RestartTask
ruleRestartTask returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				$current = forceCreateModelElement(
					grammarAccess.getRestartTaskAccess().getRestartTaskAction_0(),
					$current);
			}
		)
		otherlv_1='restartTask'
		{
			newLeafNode(otherlv_1, grammarAccess.getRestartTaskAccess().getRestartTaskKeyword_1());
		}
	)
;

// Entry rule entryRuleSkipTask
entryRuleSkipTask returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getSkipTaskRule()); }
	iv_ruleSkipTask=ruleSkipTask
	{ $current=$iv_ruleSkipTask.current; }
	EOF;

// Rule SkipTask
ruleSkipTask returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				$current = forceCreateModelElement(
					grammarAccess.getSkipTaskAccess().getSkipTaskAction_0(),
					$current);
			}
		)
		otherlv_1='skipTask'
		{
			newLeafNode(otherlv_1, grammarAccess.getSkipTaskAccess().getSkipTaskKeyword_1());
		}
	)
;

// Entry rule entryRuleExpression
entryRuleExpression returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getExpressionRule()); }
	iv_ruleExpression=ruleExpression
	{ $current=$iv_ruleExpression.current; }
	EOF;

// Rule Expression
ruleExpression returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	{
		newCompositeNode(grammarAccess.getExpressionAccess().getExpressionLevel1ParserRuleCall());
	}
	this_ExpressionLevel1_0=ruleExpressionLevel1
	{
		$current = $this_ExpressionLevel1_0.current;
		afterParserOrEnumRuleCall();
	}
;

// Entry rule entryRuleExpressionLevel1
entryRuleExpressionLevel1 returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getExpressionLevel1Rule()); }
	iv_ruleExpressionLevel1=ruleExpressionLevel1
	{ $current=$iv_ruleExpressionLevel1.current; }
	EOF;

// Rule ExpressionLevel1
ruleExpressionLevel1 returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		{
			newCompositeNode(grammarAccess.getExpressionLevel1Access().getExpressionLevel2ParserRuleCall_0());
		}
		this_ExpressionLevel2_0=ruleExpressionLevel2
		{
			$current = $this_ExpressionLevel2_0.current;
			afterParserOrEnumRuleCall();
		}
		(
			(
				(
					{
						$current = forceCreateModelElementAndSet(
							grammarAccess.getExpressionLevel1Access().getExpressionAndLeftAction_1_0_0(),
							$current);
					}
				)
				(
					otherlv_2='AND'
					{
						newLeafNode(otherlv_2, grammarAccess.getExpressionLevel1Access().getANDKeyword_1_0_1_0());
					}
					    |
					otherlv_3='and'
					{
						newLeafNode(otherlv_3, grammarAccess.getExpressionLevel1Access().getAndKeyword_1_0_1_1());
					}
				)
				(
					(
						{
							newCompositeNode(grammarAccess.getExpressionLevel1Access().getRightExpressionLevel2ParserRuleCall_1_0_2_0());
						}
						lv_right_4_0=ruleExpressionLevel2
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getExpressionLevel1Rule());
							}
							set(
								$current,
								"right",
								lv_right_4_0,
								"org.artemis.sm.StateMachine.ExpressionLevel2");
							afterParserOrEnumRuleCall();
						}
					)
				)
			)
			    |
			(
				(
					{
						$current = forceCreateModelElementAndSet(
							grammarAccess.getExpressionLevel1Access().getExpressionOrLeftAction_1_1_0(),
							$current);
					}
				)
				(
					otherlv_6='OR'
					{
						newLeafNode(otherlv_6, grammarAccess.getExpressionLevel1Access().getORKeyword_1_1_1_0());
					}
					    |
					otherlv_7='or'
					{
						newLeafNode(otherlv_7, grammarAccess.getExpressionLevel1Access().getOrKeyword_1_1_1_1());
					}
				)
				(
					(
						{
							newCompositeNode(grammarAccess.getExpressionLevel1Access().getRightExpressionLevel2ParserRuleCall_1_1_2_0());
						}
						lv_right_8_0=ruleExpressionLevel2
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getExpressionLevel1Rule());
							}
							set(
								$current,
								"right",
								lv_right_8_0,
								"org.artemis.sm.StateMachine.ExpressionLevel2");
							afterParserOrEnumRuleCall();
						}
					)
				)
			)
		)*
	)
;

// Entry rule entryRuleExpressionLevel2
entryRuleExpressionLevel2 returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getExpressionLevel2Rule()); }
	iv_ruleExpressionLevel2=ruleExpressionLevel2
	{ $current=$iv_ruleExpressionLevel2.current; }
	EOF;

// Rule ExpressionLevel2
ruleExpressionLevel2 returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		{
			newCompositeNode(grammarAccess.getExpressionLevel2Access().getExpressionLevel3ParserRuleCall_0());
		}
		this_ExpressionLevel3_0=ruleExpressionLevel3
		{
			$current = $this_ExpressionLevel3_0.current;
			afterParserOrEnumRuleCall();
		}
		(
			(
				(
					{
						$current = forceCreateModelElementAndSet(
							grammarAccess.getExpressionLevel2Access().getExpressionEqualLeftAction_1_0_0(),
							$current);
					}
				)
				otherlv_2='=='
				{
					newLeafNode(otherlv_2, grammarAccess.getExpressionLevel2Access().getEqualsSignEqualsSignKeyword_1_0_1());
				}
				(
					(
						{
							newCompositeNode(grammarAccess.getExpressionLevel2Access().getRightExpressionLevel3ParserRuleCall_1_0_2_0());
						}
						lv_right_3_0=ruleExpressionLevel3
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getExpressionLevel2Rule());
							}
							set(
								$current,
								"right",
								lv_right_3_0,
								"org.artemis.sm.StateMachine.ExpressionLevel3");
							afterParserOrEnumRuleCall();
						}
					)
				)
			)
			    |
			(
				(
					{
						$current = forceCreateModelElementAndSet(
							grammarAccess.getExpressionLevel2Access().getExpressionNEqualLeftAction_1_1_0(),
							$current);
					}
				)
				otherlv_5='!='
				{
					newLeafNode(otherlv_5, grammarAccess.getExpressionLevel2Access().getExclamationMarkEqualsSignKeyword_1_1_1());
				}
				(
					(
						{
							newCompositeNode(grammarAccess.getExpressionLevel2Access().getRightExpressionLevel3ParserRuleCall_1_1_2_0());
						}
						lv_right_6_0=ruleExpressionLevel3
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getExpressionLevel2Rule());
							}
							set(
								$current,
								"right",
								lv_right_6_0,
								"org.artemis.sm.StateMachine.ExpressionLevel3");
							afterParserOrEnumRuleCall();
						}
					)
				)
			)
		)*
	)
;

// Entry rule entryRuleExpressionLevel3
entryRuleExpressionLevel3 returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getExpressionLevel3Rule()); }
	iv_ruleExpressionLevel3=ruleExpressionLevel3
	{ $current=$iv_ruleExpressionLevel3.current; }
	EOF;

// Rule ExpressionLevel3
ruleExpressionLevel3 returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		{
			newCompositeNode(grammarAccess.getExpressionLevel3Access().getExpressionLevel4ParserRuleCall_0());
		}
		this_ExpressionLevel4_0=ruleExpressionLevel4
		{
			$current = $this_ExpressionLevel4_0.current;
			afterParserOrEnumRuleCall();
		}
		(
			(
				(
					{
						$current = forceCreateModelElementAndSet(
							grammarAccess.getExpressionLevel3Access().getExpressionGeqLeftAction_1_0_0(),
							$current);
					}
				)
				otherlv_2='>='
				{
					newLeafNode(otherlv_2, grammarAccess.getExpressionLevel3Access().getGreaterThanSignEqualsSignKeyword_1_0_1());
				}
				(
					(
						{
							newCompositeNode(grammarAccess.getExpressionLevel3Access().getRightExpressionLevel4ParserRuleCall_1_0_2_0());
						}
						lv_right_3_0=ruleExpressionLevel4
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getExpressionLevel3Rule());
							}
							set(
								$current,
								"right",
								lv_right_3_0,
								"org.artemis.sm.StateMachine.ExpressionLevel4");
							afterParserOrEnumRuleCall();
						}
					)
				)
			)
			    |
			(
				(
					{
						$current = forceCreateModelElementAndSet(
							grammarAccess.getExpressionLevel3Access().getExpressionGreaterLeftAction_1_1_0(),
							$current);
					}
				)
				otherlv_5='>'
				{
					newLeafNode(otherlv_5, grammarAccess.getExpressionLevel3Access().getGreaterThanSignKeyword_1_1_1());
				}
				(
					(
						{
							newCompositeNode(grammarAccess.getExpressionLevel3Access().getRightExpressionLevel4ParserRuleCall_1_1_2_0());
						}
						lv_right_6_0=ruleExpressionLevel4
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getExpressionLevel3Rule());
							}
							set(
								$current,
								"right",
								lv_right_6_0,
								"org.artemis.sm.StateMachine.ExpressionLevel4");
							afterParserOrEnumRuleCall();
						}
					)
				)
			)
			    |
			(
				(
					{
						$current = forceCreateModelElementAndSet(
							grammarAccess.getExpressionLevel3Access().getExpressionLeqLeftAction_1_2_0(),
							$current);
					}
				)
				otherlv_8='<='
				{
					newLeafNode(otherlv_8, grammarAccess.getExpressionLevel3Access().getLessThanSignEqualsSignKeyword_1_2_1());
				}
				(
					(
						{
							newCompositeNode(grammarAccess.getExpressionLevel3Access().getRightExpressionLevel4ParserRuleCall_1_2_2_0());
						}
						lv_right_9_0=ruleExpressionLevel4
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getExpressionLevel3Rule());
							}
							set(
								$current,
								"right",
								lv_right_9_0,
								"org.artemis.sm.StateMachine.ExpressionLevel4");
							afterParserOrEnumRuleCall();
						}
					)
				)
			)
			    |
			(
				(
					{
						$current = forceCreateModelElementAndSet(
							grammarAccess.getExpressionLevel3Access().getExpressionLessLeftAction_1_3_0(),
							$current);
					}
				)
				otherlv_11='<'
				{
					newLeafNode(otherlv_11, grammarAccess.getExpressionLevel3Access().getLessThanSignKeyword_1_3_1());
				}
				(
					(
						{
							newCompositeNode(grammarAccess.getExpressionLevel3Access().getRightExpressionLevel4ParserRuleCall_1_3_2_0());
						}
						lv_right_12_0=ruleExpressionLevel4
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getExpressionLevel3Rule());
							}
							set(
								$current,
								"right",
								lv_right_12_0,
								"org.artemis.sm.StateMachine.ExpressionLevel4");
							afterParserOrEnumRuleCall();
						}
					)
				)
			)
		)*
	)
;

// Entry rule entryRuleExpressionLevel4
entryRuleExpressionLevel4 returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getExpressionLevel4Rule()); }
	iv_ruleExpressionLevel4=ruleExpressionLevel4
	{ $current=$iv_ruleExpressionLevel4.current; }
	EOF;

// Rule ExpressionLevel4
ruleExpressionLevel4 returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		{
			newCompositeNode(grammarAccess.getExpressionLevel4Access().getExpressionLevel5ParserRuleCall_0());
		}
		this_ExpressionLevel5_0=ruleExpressionLevel5
		{
			$current = $this_ExpressionLevel5_0.current;
			afterParserOrEnumRuleCall();
		}
		(
			(
				(
					{
						$current = forceCreateModelElementAndSet(
							grammarAccess.getExpressionLevel4Access().getExpressionAdditionLeftAction_1_0_0(),
							$current);
					}
				)
				otherlv_2='+'
				{
					newLeafNode(otherlv_2, grammarAccess.getExpressionLevel4Access().getPlusSignKeyword_1_0_1());
				}
				(
					(
						{
							newCompositeNode(grammarAccess.getExpressionLevel4Access().getRightExpressionLevel5ParserRuleCall_1_0_2_0());
						}
						lv_right_3_0=ruleExpressionLevel5
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getExpressionLevel4Rule());
							}
							set(
								$current,
								"right",
								lv_right_3_0,
								"org.artemis.sm.StateMachine.ExpressionLevel5");
							afterParserOrEnumRuleCall();
						}
					)
				)
			)
			    |
			(
				(
					{
						$current = forceCreateModelElementAndSet(
							grammarAccess.getExpressionLevel4Access().getExpressionSubtractionLeftAction_1_1_0(),
							$current);
					}
				)
				otherlv_5='-'
				{
					newLeafNode(otherlv_5, grammarAccess.getExpressionLevel4Access().getHyphenMinusKeyword_1_1_1());
				}
				(
					(
						{
							newCompositeNode(grammarAccess.getExpressionLevel4Access().getRightExpressionLevel5ParserRuleCall_1_1_2_0());
						}
						lv_right_6_0=ruleExpressionLevel5
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getExpressionLevel4Rule());
							}
							set(
								$current,
								"right",
								lv_right_6_0,
								"org.artemis.sm.StateMachine.ExpressionLevel5");
							afterParserOrEnumRuleCall();
						}
					)
				)
			)
		)*
	)
;

// Entry rule entryRuleExpressionLevel5
entryRuleExpressionLevel5 returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getExpressionLevel5Rule()); }
	iv_ruleExpressionLevel5=ruleExpressionLevel5
	{ $current=$iv_ruleExpressionLevel5.current; }
	EOF;

// Rule ExpressionLevel5
ruleExpressionLevel5 returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		{
			newCompositeNode(grammarAccess.getExpressionLevel5Access().getExpressionLevel6ParserRuleCall_0());
		}
		this_ExpressionLevel6_0=ruleExpressionLevel6
		{
			$current = $this_ExpressionLevel6_0.current;
			afterParserOrEnumRuleCall();
		}
		(
			(
				(
					{
						$current = forceCreateModelElementAndSet(
							grammarAccess.getExpressionLevel5Access().getExpressionMultiplyLeftAction_1_0_0(),
							$current);
					}
				)
				otherlv_2='*'
				{
					newLeafNode(otherlv_2, grammarAccess.getExpressionLevel5Access().getAsteriskKeyword_1_0_1());
				}
				(
					(
						{
							newCompositeNode(grammarAccess.getExpressionLevel5Access().getRightExpressionLevel6ParserRuleCall_1_0_2_0());
						}
						lv_right_3_0=ruleExpressionLevel6
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getExpressionLevel5Rule());
							}
							set(
								$current,
								"right",
								lv_right_3_0,
								"org.artemis.sm.StateMachine.ExpressionLevel6");
							afterParserOrEnumRuleCall();
						}
					)
				)
			)
			    |
			(
				(
					{
						$current = forceCreateModelElementAndSet(
							grammarAccess.getExpressionLevel5Access().getExpressionDivisionLeftAction_1_1_0(),
							$current);
					}
				)
				otherlv_5='/'
				{
					newLeafNode(otherlv_5, grammarAccess.getExpressionLevel5Access().getSolidusKeyword_1_1_1());
				}
				(
					(
						{
							newCompositeNode(grammarAccess.getExpressionLevel5Access().getRightExpressionLevel6ParserRuleCall_1_1_2_0());
						}
						lv_right_6_0=ruleExpressionLevel6
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getExpressionLevel5Rule());
							}
							set(
								$current,
								"right",
								lv_right_6_0,
								"org.artemis.sm.StateMachine.ExpressionLevel6");
							afterParserOrEnumRuleCall();
						}
					)
				)
			)
			    |
			(
				(
					{
						$current = forceCreateModelElementAndSet(
							grammarAccess.getExpressionLevel5Access().getExpressionMaximumLeftAction_1_2_0(),
							$current);
					}
				)
				otherlv_8='max'
				{
					newLeafNode(otherlv_8, grammarAccess.getExpressionLevel5Access().getMaxKeyword_1_2_1());
				}
				(
					(
						{
							newCompositeNode(grammarAccess.getExpressionLevel5Access().getRightExpressionLevel6ParserRuleCall_1_2_2_0());
						}
						lv_right_9_0=ruleExpressionLevel6
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getExpressionLevel5Rule());
							}
							set(
								$current,
								"right",
								lv_right_9_0,
								"org.artemis.sm.StateMachine.ExpressionLevel6");
							afterParserOrEnumRuleCall();
						}
					)
				)
			)
			    |
			(
				(
					{
						$current = forceCreateModelElementAndSet(
							grammarAccess.getExpressionLevel5Access().getExpressionMinimumLeftAction_1_3_0(),
							$current);
					}
				)
				otherlv_11='min'
				{
					newLeafNode(otherlv_11, grammarAccess.getExpressionLevel5Access().getMinKeyword_1_3_1());
				}
				(
					(
						{
							newCompositeNode(grammarAccess.getExpressionLevel5Access().getRightExpressionLevel6ParserRuleCall_1_3_2_0());
						}
						lv_right_12_0=ruleExpressionLevel6
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getExpressionLevel5Rule());
							}
							set(
								$current,
								"right",
								lv_right_12_0,
								"org.artemis.sm.StateMachine.ExpressionLevel6");
							afterParserOrEnumRuleCall();
						}
					)
				)
			)
		)*
	)
;

// Entry rule entryRuleExpressionLevel6
entryRuleExpressionLevel6 returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getExpressionLevel6Rule()); }
	iv_ruleExpressionLevel6=ruleExpressionLevel6
	{ $current=$iv_ruleExpressionLevel6.current; }
	EOF;

// Rule ExpressionLevel6
ruleExpressionLevel6 returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		{
			newCompositeNode(grammarAccess.getExpressionLevel6Access().getExpressionLevel7ParserRuleCall_0());
		}
		this_ExpressionLevel7_0=ruleExpressionLevel7
		{
			$current = $this_ExpressionLevel7_0.current;
			afterParserOrEnumRuleCall();
		}
		(
			(
				{
					$current = forceCreateModelElementAndSet(
						grammarAccess.getExpressionLevel6Access().getExpressionPowerLeftAction_1_0(),
						$current);
				}
			)
			otherlv_2='^'
			{
				newLeafNode(otherlv_2, grammarAccess.getExpressionLevel6Access().getCircumflexAccentKeyword_1_1());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getExpressionLevel6Access().getRightExpressionLevel6ParserRuleCall_1_2_0());
					}
					lv_right_3_0=ruleExpressionLevel6
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getExpressionLevel6Rule());
						}
						set(
							$current,
							"right",
							lv_right_3_0,
							"org.artemis.sm.StateMachine.ExpressionLevel6");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)?
	)
;

// Entry rule entryRuleExpressionLevel7
entryRuleExpressionLevel7 returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getExpressionLevel7Rule()); }
	iv_ruleExpressionLevel7=ruleExpressionLevel7
	{ $current=$iv_ruleExpressionLevel7.current; }
	EOF;

// Rule ExpressionLevel7
ruleExpressionLevel7 returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		{
			newCompositeNode(grammarAccess.getExpressionLevel7Access().getExpressionNotParserRuleCall_0());
		}
		this_ExpressionNot_0=ruleExpressionNot
		{
			$current = $this_ExpressionNot_0.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getExpressionLevel7Access().getExpressionMinusParserRuleCall_1());
		}
		this_ExpressionMinus_1=ruleExpressionMinus
		{
			$current = $this_ExpressionMinus_1.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getExpressionLevel7Access().getExpressionPlusParserRuleCall_2());
		}
		this_ExpressionPlus_2=ruleExpressionPlus
		{
			$current = $this_ExpressionPlus_2.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getExpressionLevel7Access().getExpressionLevel8ParserRuleCall_3());
		}
		this_ExpressionLevel8_3=ruleExpressionLevel8
		{
			$current = $this_ExpressionLevel8_3.current;
			afterParserOrEnumRuleCall();
		}
	)
;

// Entry rule entryRuleExpressionNot
entryRuleExpressionNot returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getExpressionNotRule()); }
	iv_ruleExpressionNot=ruleExpressionNot
	{ $current=$iv_ruleExpressionNot.current; }
	EOF;

// Rule ExpressionNot
ruleExpressionNot returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			otherlv_0='NOT'
			{
				newLeafNode(otherlv_0, grammarAccess.getExpressionNotAccess().getNOTKeyword_0_0());
			}
			    |
			otherlv_1='not'
			{
				newLeafNode(otherlv_1, grammarAccess.getExpressionNotAccess().getNotKeyword_0_1());
			}
		)
		(
			(
				{
					newCompositeNode(grammarAccess.getExpressionNotAccess().getSubExpressionLevel8ParserRuleCall_1_0());
				}
				lv_sub_2_0=ruleExpressionLevel8
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getExpressionNotRule());
					}
					set(
						$current,
						"sub",
						lv_sub_2_0,
						"org.artemis.sm.StateMachine.ExpressionLevel8");
					afterParserOrEnumRuleCall();
				}
			)
		)
	)
;

// Entry rule entryRuleExpressionMinus
entryRuleExpressionMinus returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getExpressionMinusRule()); }
	iv_ruleExpressionMinus=ruleExpressionMinus
	{ $current=$iv_ruleExpressionMinus.current; }
	EOF;

// Rule ExpressionMinus
ruleExpressionMinus returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='-'
		{
			newLeafNode(otherlv_0, grammarAccess.getExpressionMinusAccess().getHyphenMinusKeyword_0());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getExpressionMinusAccess().getSubExpressionLevel8ParserRuleCall_1_0());
				}
				lv_sub_1_0=ruleExpressionLevel8
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getExpressionMinusRule());
					}
					set(
						$current,
						"sub",
						lv_sub_1_0,
						"org.artemis.sm.StateMachine.ExpressionLevel8");
					afterParserOrEnumRuleCall();
				}
			)
		)
	)
;

// Entry rule entryRuleExpressionPlus
entryRuleExpressionPlus returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getExpressionPlusRule()); }
	iv_ruleExpressionPlus=ruleExpressionPlus
	{ $current=$iv_ruleExpressionPlus.current; }
	EOF;

// Rule ExpressionPlus
ruleExpressionPlus returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='+'
		{
			newLeafNode(otherlv_0, grammarAccess.getExpressionPlusAccess().getPlusSignKeyword_0());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getExpressionPlusAccess().getSubExpressionLevel8ParserRuleCall_1_0());
				}
				lv_sub_1_0=ruleExpressionLevel8
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getExpressionPlusRule());
					}
					set(
						$current,
						"sub",
						lv_sub_1_0,
						"org.artemis.sm.StateMachine.ExpressionLevel8");
					afterParserOrEnumRuleCall();
				}
			)
		)
	)
;

// Entry rule entryRuleExpressionLevel8
entryRuleExpressionLevel8 returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getExpressionLevel8Rule()); }
	iv_ruleExpressionLevel8=ruleExpressionLevel8
	{ $current=$iv_ruleExpressionLevel8.current; }
	EOF;

// Rule ExpressionLevel8
ruleExpressionLevel8 returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		{
			newCompositeNode(grammarAccess.getExpressionLevel8Access().getExpressionBracketParserRuleCall_0());
		}
		this_ExpressionBracket_0=ruleExpressionBracket
		{
			$current = $this_ExpressionBracket_0.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getExpressionLevel8Access().getExpressionConstantBoolParserRuleCall_1());
		}
		this_ExpressionConstantBool_1=ruleExpressionConstantBool
		{
			$current = $this_ExpressionConstantBool_1.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getExpressionLevel8Access().getExpressionConstantIntParserRuleCall_2());
		}
		this_ExpressionConstantInt_2=ruleExpressionConstantInt
		{
			$current = $this_ExpressionConstantInt_2.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getExpressionLevel8Access().getExpressionConstantRealParserRuleCall_3());
		}
		this_ExpressionConstantReal_3=ruleExpressionConstantReal
		{
			$current = $this_ExpressionConstantReal_3.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getExpressionLevel8Access().getExpressionConstantStringParserRuleCall_4());
		}
		this_ExpressionConstantString_4=ruleExpressionConstantString
		{
			$current = $this_ExpressionConstantString_4.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getExpressionLevel8Access().getExpressionVariableParserRuleCall_5());
		}
		this_ExpressionVariable_5=ruleExpressionVariable
		{
			$current = $this_ExpressionVariable_5.current;
			afterParserOrEnumRuleCall();
		}
	)
;

// Entry rule entryRuleExpressionBracket
entryRuleExpressionBracket returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getExpressionBracketRule()); }
	iv_ruleExpressionBracket=ruleExpressionBracket
	{ $current=$iv_ruleExpressionBracket.current; }
	EOF;

// Rule ExpressionBracket
ruleExpressionBracket returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='('
		{
			newLeafNode(otherlv_0, grammarAccess.getExpressionBracketAccess().getLeftParenthesisKeyword_0());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getExpressionBracketAccess().getSubExpressionParserRuleCall_1_0());
				}
				lv_sub_1_0=ruleExpression
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getExpressionBracketRule());
					}
					set(
						$current,
						"sub",
						lv_sub_1_0,
						"org.artemis.sm.StateMachine.Expression");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_2=')'
		{
			newLeafNode(otherlv_2, grammarAccess.getExpressionBracketAccess().getRightParenthesisKeyword_2());
		}
	)
;

// Entry rule entryRuleExpressionConstantBool
entryRuleExpressionConstantBool returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getExpressionConstantBoolRule()); }
	iv_ruleExpressionConstantBool=ruleExpressionConstantBool
	{ $current=$iv_ruleExpressionConstantBool.current; }
	EOF;

// Rule ExpressionConstantBool
ruleExpressionConstantBool returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			lv_value_0_0=RULE_BOOL_LITERAL
			{
				newLeafNode(lv_value_0_0, grammarAccess.getExpressionConstantBoolAccess().getValueBOOL_LITERALTerminalRuleCall_0());
			}
			{
				if ($current==null) {
					$current = createModelElement(grammarAccess.getExpressionConstantBoolRule());
				}
				setWithLastConsumed(
					$current,
					"value",
					lv_value_0_0,
					"org.artemis.sm.StateMachine.BOOL_LITERAL");
			}
		)
	)
;

// Entry rule entryRuleExpressionConstantInt
entryRuleExpressionConstantInt returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getExpressionConstantIntRule()); }
	iv_ruleExpressionConstantInt=ruleExpressionConstantInt
	{ $current=$iv_ruleExpressionConstantInt.current; }
	EOF;

// Rule ExpressionConstantInt
ruleExpressionConstantInt returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			lv_value_0_0=RULE_INT
			{
				newLeafNode(lv_value_0_0, grammarAccess.getExpressionConstantIntAccess().getValueINTTerminalRuleCall_0());
			}
			{
				if ($current==null) {
					$current = createModelElement(grammarAccess.getExpressionConstantIntRule());
				}
				setWithLastConsumed(
					$current,
					"value",
					lv_value_0_0,
					"org.eclipse.xtext.common.Terminals.INT");
			}
		)
	)
;

// Entry rule entryRuleExpressionConstantReal
entryRuleExpressionConstantReal returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getExpressionConstantRealRule()); }
	iv_ruleExpressionConstantReal=ruleExpressionConstantReal
	{ $current=$iv_ruleExpressionConstantReal.current; }
	EOF;

// Rule ExpressionConstantReal
ruleExpressionConstantReal returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			lv_value_0_0=RULE_FLOAT
			{
				newLeafNode(lv_value_0_0, grammarAccess.getExpressionConstantRealAccess().getValueFLOATTerminalRuleCall_0());
			}
			{
				if ($current==null) {
					$current = createModelElement(grammarAccess.getExpressionConstantRealRule());
				}
				setWithLastConsumed(
					$current,
					"value",
					lv_value_0_0,
					"org.artemis.sm.StateMachine.FLOAT");
			}
		)
	)
;

// Entry rule entryRuleExpressionConstantString
entryRuleExpressionConstantString returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getExpressionConstantStringRule()); }
	iv_ruleExpressionConstantString=ruleExpressionConstantString
	{ $current=$iv_ruleExpressionConstantString.current; }
	EOF;

// Rule ExpressionConstantString
ruleExpressionConstantString returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			lv_value_0_0=RULE_STRING
			{
				newLeafNode(lv_value_0_0, grammarAccess.getExpressionConstantStringAccess().getValueSTRINGTerminalRuleCall_0());
			}
			{
				if ($current==null) {
					$current = createModelElement(grammarAccess.getExpressionConstantStringRule());
				}
				setWithLastConsumed(
					$current,
					"value",
					lv_value_0_0,
					"org.eclipse.xtext.common.Terminals.STRING");
			}
		)
	)
;

// Entry rule entryRuleExpressionVariable
entryRuleExpressionVariable returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getExpressionVariableRule()); }
	iv_ruleExpressionVariable=ruleExpressionVariable
	{ $current=$iv_ruleExpressionVariable.current; }
	EOF;

// Rule ExpressionVariable
ruleExpressionVariable returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				if ($current==null) {
					$current = createModelElement(grammarAccess.getExpressionVariableRule());
				}
			}
			otherlv_0=RULE_ID
			{
				newLeafNode(otherlv_0, grammarAccess.getExpressionVariableAccess().getVariableVariableCrossReference_0());
			}
		)
	)
;

// Entry rule entryRuleTypeDecl
entryRuleTypeDecl returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getTypeDeclRule()); }
	iv_ruleTypeDecl=ruleTypeDecl
	{ $current=$iv_ruleTypeDecl.current; }
	EOF;

// Rule TypeDecl
ruleTypeDecl returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		{
			newCompositeNode(grammarAccess.getTypeDeclAccess().getEnumTypeDeclParserRuleCall_0());
		}
		this_EnumTypeDecl_0=ruleEnumTypeDecl
		{
			$current = $this_EnumTypeDecl_0.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getTypeDeclAccess().getSimpleTypeDeclParserRuleCall_1());
		}
		this_SimpleTypeDecl_1=ruleSimpleTypeDecl
		{
			$current = $this_SimpleTypeDecl_1.current;
			afterParserOrEnumRuleCall();
		}
	)
;

// Entry rule entryRuleSimpleTypeDecl
entryRuleSimpleTypeDecl returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getSimpleTypeDeclRule()); }
	iv_ruleSimpleTypeDecl=ruleSimpleTypeDecl
	{ $current=$iv_ruleSimpleTypeDecl.current; }
	EOF;

// Rule SimpleTypeDecl
ruleSimpleTypeDecl returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='type'
		{
			newLeafNode(otherlv_0, grammarAccess.getSimpleTypeDeclAccess().getTypeKeyword_0());
		}
		(
			(
				lv_name_1_0=RULE_ID
				{
					newLeafNode(lv_name_1_0, grammarAccess.getSimpleTypeDeclAccess().getNameIDTerminalRuleCall_1_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getSimpleTypeDeclRule());
					}
					setWithLastConsumed(
						$current,
						"name",
						lv_name_1_0,
						"org.eclipse.xtext.common.Terminals.ID");
				}
			)
		)
	)
;

// Entry rule entryRuleEnumTypeDecl
entryRuleEnumTypeDecl returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getEnumTypeDeclRule()); }
	iv_ruleEnumTypeDecl=ruleEnumTypeDecl
	{ $current=$iv_ruleEnumTypeDecl.current; }
	EOF;

// Rule EnumTypeDecl
ruleEnumTypeDecl returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='enum'
		{
			newLeafNode(otherlv_0, grammarAccess.getEnumTypeDeclAccess().getEnumKeyword_0());
		}
		(
			(
				lv_name_1_0=RULE_ID
				{
					newLeafNode(lv_name_1_0, grammarAccess.getEnumTypeDeclAccess().getNameIDTerminalRuleCall_1_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getEnumTypeDeclRule());
					}
					setWithLastConsumed(
						$current,
						"name",
						lv_name_1_0,
						"org.eclipse.xtext.common.Terminals.ID");
				}
			)
		)
		otherlv_2='{'
		{
			newLeafNode(otherlv_2, grammarAccess.getEnumTypeDeclAccess().getLeftCurlyBracketKeyword_2());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getEnumTypeDeclAccess().getLiteralsEnumElementParserRuleCall_3_0());
				}
				lv_literals_3_0=ruleEnumElement
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getEnumTypeDeclRule());
					}
					add(
						$current,
						"literals",
						lv_literals_3_0,
						"org.artemis.base.Base.EnumElement");
					afterParserOrEnumRuleCall();
				}
			)
		)+
		otherlv_4='}'
		{
			newLeafNode(otherlv_4, grammarAccess.getEnumTypeDeclAccess().getRightCurlyBracketKeyword_4());
		}
	)
;

// Entry rule entryRuleEnumElement
entryRuleEnumElement returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getEnumElementRule()); }
	iv_ruleEnumElement=ruleEnumElement
	{ $current=$iv_ruleEnumElement.current; }
	EOF;

// Rule EnumElement
ruleEnumElement returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			lv_name_0_0=RULE_ID
			{
				newLeafNode(lv_name_0_0, grammarAccess.getEnumElementAccess().getNameIDTerminalRuleCall_0());
			}
			{
				if ($current==null) {
					$current = createModelElement(grammarAccess.getEnumElementRule());
				}
				setWithLastConsumed(
					$current,
					"name",
					lv_name_0_0,
					"org.eclipse.xtext.common.Terminals.ID");
			}
		)
	)
;

// Entry rule entryRuleArray
entryRuleArray returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getArrayRule()); }
	iv_ruleArray=ruleArray
	{ $current=$iv_ruleArray.current; }
	EOF;

// Rule Array
ruleArray returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getArrayRule());
					}
				}
				otherlv_0=RULE_ID
				{
					newLeafNode(otherlv_0, grammarAccess.getArrayAccess().getBaseTypeTypeDeclCrossReference_0_0());
				}
			)
		)
		otherlv_1='['
		{
			newLeafNode(otherlv_1, grammarAccess.getArrayAccess().getLeftSquareBracketKeyword_1());
		}
		otherlv_2=']'
		{
			newLeafNode(otherlv_2, grammarAccess.getArrayAccess().getRightSquareBracketKeyword_2());
		}
	)
;

// Entry rule entryRuleType
entryRuleType returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getTypeRule()); }
	iv_ruleType=ruleType
	{ $current=$iv_ruleType.current; }
	EOF;

// Rule Type
ruleType returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		{
			newCompositeNode(grammarAccess.getTypeAccess().getTypeRefParserRuleCall_0());
		}
		this_TypeRef_0=ruleTypeRef
		{
			$current = $this_TypeRef_0.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getTypeAccess().getArrayParserRuleCall_1());
		}
		this_Array_1=ruleArray
		{
			$current = $this_Array_1.current;
			afterParserOrEnumRuleCall();
		}
	)
;

// Entry rule entryRuleTypeRef
entryRuleTypeRef returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getTypeRefRule()); }
	iv_ruleTypeRef=ruleTypeRef
	{ $current=$iv_ruleTypeRef.current; }
	EOF;

// Rule TypeRef
ruleTypeRef returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				if ($current==null) {
					$current = createModelElement(grammarAccess.getTypeRefRule());
				}
			}
			otherlv_0=RULE_ID
			{
				newLeafNode(otherlv_0, grammarAccess.getTypeRefAccess().getTypeTypeDeclCrossReference_0());
			}
		)
	)
;

RULE_BOOL_LITERAL : ('true'|'false'|'TRUE'|'FALSE'|'True'|'False');

RULE_FLOAT : RULE_INT '.' RULE_INT (('E'|'e') '-'? RULE_INT)?;

RULE_ID : '^'? ('a'..'z'|'A'..'Z'|'_') ('a'..'z'|'A'..'Z'|'_'|'0'..'9')*;

RULE_INT : ('0'..'9')+;

RULE_STRING : ('"' ('\\' .|~(('\\'|'"')))* '"'|'\'' ('\\' .|~(('\\'|'\'')))* '\'');

RULE_ML_COMMENT : '/*' ( options {greedy=false;} : . )*'*/';

RULE_SL_COMMENT : '//' ~(('\n'|'\r'))* ('\r'? '\n')?;

RULE_WS : (' '|'\t'|'\r'|'\n')+;

RULE_ANY_OTHER : .;
