/*
 * generated by Xtext 2.25.0
 */
grammar InternalStateMachine;

options {
	superClass=AbstractInternalContentAssistParser;
}

@lexer::header {
package org.artemis.sm.ide.contentassist.antlr.internal;

// Hack: Use our own Lexer superclass by means of import. 
// Currently there is no other way to specify the superclass for the lexer.
import org.eclipse.xtext.ide.editor.contentassist.antlr.internal.Lexer;
}

@parser::header {
package org.artemis.sm.ide.contentassist.antlr.internal;

import java.io.InputStream;
import org.eclipse.xtext.*;
import org.eclipse.xtext.parser.*;
import org.eclipse.xtext.parser.impl.*;
import org.eclipse.emf.ecore.util.EcoreUtil;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.xtext.parser.antlr.XtextTokenStream;
import org.eclipse.xtext.parser.antlr.XtextTokenStream.HiddenTokens;
import org.eclipse.xtext.ide.editor.contentassist.antlr.internal.AbstractInternalContentAssistParser;
import org.eclipse.xtext.ide.editor.contentassist.antlr.internal.DFA;
import org.artemis.sm.services.StateMachineGrammarAccess;

}
@parser::members {
	private StateMachineGrammarAccess grammarAccess;

	public void setGrammarAccess(StateMachineGrammarAccess grammarAccess) {
		this.grammarAccess = grammarAccess;
	}

	@Override
	protected Grammar getGrammar() {
		return grammarAccess.getGrammar();
	}

	@Override
	protected String getValueForTokenName(String tokenName) {
		return tokenName;
	}
}

// Entry rule entryRuleMonitor
entryRuleMonitor
:
{ before(grammarAccess.getMonitorRule()); }
	 ruleMonitor
{ after(grammarAccess.getMonitorRule()); } 
	 EOF 
;

// Rule Monitor
ruleMonitor 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		(
			{ before(grammarAccess.getMonitorAccess().getMachinesAssignment()); }
			(rule__Monitor__MachinesAssignment)
			{ after(grammarAccess.getMonitorAccess().getMachinesAssignment()); }
		)
		(
			{ before(grammarAccess.getMonitorAccess().getMachinesAssignment()); }
			(rule__Monitor__MachinesAssignment)*
			{ after(grammarAccess.getMonitorAccess().getMachinesAssignment()); }
		)
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleStateMachine
entryRuleStateMachine
:
{ before(grammarAccess.getStateMachineRule()); }
	 ruleStateMachine
{ after(grammarAccess.getStateMachineRule()); } 
	 EOF 
;

// Rule StateMachine
ruleStateMachine 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getStateMachineAccess().getGroup()); }
		(rule__StateMachine__Group__0)
		{ after(grammarAccess.getStateMachineAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleState
entryRuleState
:
{ before(grammarAccess.getStateRule()); }
	 ruleState
{ after(grammarAccess.getStateRule()); } 
	 EOF 
;

// Rule State
ruleState 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getStateAccess().getGroup()); }
		(rule__State__Group__0)
		{ after(grammarAccess.getStateAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleTransition
entryRuleTransition
:
{ before(grammarAccess.getTransitionRule()); }
	 ruleTransition
{ after(grammarAccess.getTransitionRule()); } 
	 EOF 
;

// Rule Transition
ruleTransition 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getTransitionAccess().getGroup()); }
		(rule__Transition__Group__0)
		{ after(grammarAccess.getTransitionAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleEvent
entryRuleEvent
:
{ before(grammarAccess.getEventRule()); }
	 ruleEvent
{ after(grammarAccess.getEventRule()); } 
	 EOF 
;

// Rule Event
ruleEvent 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getEventAccess().getAlternatives()); }
		(rule__Event__Alternatives)
		{ after(grammarAccess.getEventAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleStartTask
entryRuleStartTask
:
{ before(grammarAccess.getStartTaskRule()); }
	 ruleStartTask
{ after(grammarAccess.getStartTaskRule()); } 
	 EOF 
;

// Rule StartTask
ruleStartTask 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getStartTaskAccess().getGroup()); }
		(rule__StartTask__Group__0)
		{ after(grammarAccess.getStartTaskAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleEndTask
entryRuleEndTask
:
{ before(grammarAccess.getEndTaskRule()); }
	 ruleEndTask
{ after(grammarAccess.getEndTaskRule()); } 
	 EOF 
;

// Rule EndTask
ruleEndTask 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getEndTaskAccess().getGroup()); }
		(rule__EndTask__Group__0)
		{ after(grammarAccess.getEndTaskAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleAnyEvent
entryRuleAnyEvent
:
{ before(grammarAccess.getAnyEventRule()); }
	 ruleAnyEvent
{ after(grammarAccess.getAnyEventRule()); } 
	 EOF 
;

// Rule AnyEvent
ruleAnyEvent 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getAnyEventAccess().getGroup()); }
		(rule__AnyEvent__Group__0)
		{ after(grammarAccess.getAnyEventAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleUntypedVariable
entryRuleUntypedVariable
:
{ before(grammarAccess.getUntypedVariableRule()); }
	 ruleUntypedVariable
{ after(grammarAccess.getUntypedVariableRule()); } 
	 EOF 
;

// Rule UntypedVariable
ruleUntypedVariable 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getUntypedVariableAccess().getNameAssignment()); }
		(rule__UntypedVariable__NameAssignment)
		{ after(grammarAccess.getUntypedVariableAccess().getNameAssignment()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleTypedVariable
entryRuleTypedVariable
:
{ before(grammarAccess.getTypedVariableRule()); }
	 ruleTypedVariable
{ after(grammarAccess.getTypedVariableRule()); } 
	 EOF 
;

// Rule TypedVariable
ruleTypedVariable 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getTypedVariableAccess().getGroup()); }
		(rule__TypedVariable__Group__0)
		{ after(grammarAccess.getTypedVariableAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleAction
entryRuleAction
:
{ before(grammarAccess.getActionRule()); }
	 ruleAction
{ after(grammarAccess.getActionRule()); } 
	 EOF 
;

// Rule Action
ruleAction 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getActionAccess().getAssignmentActionParserRuleCall()); }
		ruleAssignmentAction
		{ after(grammarAccess.getActionAccess().getAssignmentActionParserRuleCall()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleAssignmentAction
entryRuleAssignmentAction
:
{ before(grammarAccess.getAssignmentActionRule()); }
	 ruleAssignmentAction
{ after(grammarAccess.getAssignmentActionRule()); } 
	 EOF 
;

// Rule AssignmentAction
ruleAssignmentAction 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getAssignmentActionAccess().getGroup()); }
		(rule__AssignmentAction__Group__0)
		{ after(grammarAccess.getAssignmentActionAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleOnFailAction
entryRuleOnFailAction
:
{ before(grammarAccess.getOnFailActionRule()); }
	 ruleOnFailAction
{ after(grammarAccess.getOnFailActionRule()); } 
	 EOF 
;

// Rule OnFailAction
ruleOnFailAction 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getOnFailActionAccess().getAlternatives()); }
		(rule__OnFailAction__Alternatives)
		{ after(grammarAccess.getOnFailActionAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleRestartPath
entryRuleRestartPath
:
{ before(grammarAccess.getRestartPathRule()); }
	 ruleRestartPath
{ after(grammarAccess.getRestartPathRule()); } 
	 EOF 
;

// Rule RestartPath
ruleRestartPath 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getRestartPathAccess().getGroup()); }
		(rule__RestartPath__Group__0)
		{ after(grammarAccess.getRestartPathAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleSkipPath
entryRuleSkipPath
:
{ before(grammarAccess.getSkipPathRule()); }
	 ruleSkipPath
{ after(grammarAccess.getSkipPathRule()); } 
	 EOF 
;

// Rule SkipPath
ruleSkipPath 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getSkipPathAccess().getGroup()); }
		(rule__SkipPath__Group__0)
		{ after(grammarAccess.getSkipPathAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleRestartTask
entryRuleRestartTask
:
{ before(grammarAccess.getRestartTaskRule()); }
	 ruleRestartTask
{ after(grammarAccess.getRestartTaskRule()); } 
	 EOF 
;

// Rule RestartTask
ruleRestartTask 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getRestartTaskAccess().getGroup()); }
		(rule__RestartTask__Group__0)
		{ after(grammarAccess.getRestartTaskAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleSkipTask
entryRuleSkipTask
:
{ before(grammarAccess.getSkipTaskRule()); }
	 ruleSkipTask
{ after(grammarAccess.getSkipTaskRule()); } 
	 EOF 
;

// Rule SkipTask
ruleSkipTask 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getSkipTaskAccess().getGroup()); }
		(rule__SkipTask__Group__0)
		{ after(grammarAccess.getSkipTaskAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleExpression
entryRuleExpression
:
{ before(grammarAccess.getExpressionRule()); }
	 ruleExpression
{ after(grammarAccess.getExpressionRule()); } 
	 EOF 
;

// Rule Expression
ruleExpression 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getExpressionAccess().getExpressionLevel1ParserRuleCall()); }
		ruleExpressionLevel1
		{ after(grammarAccess.getExpressionAccess().getExpressionLevel1ParserRuleCall()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleExpressionLevel1
entryRuleExpressionLevel1
:
{ before(grammarAccess.getExpressionLevel1Rule()); }
	 ruleExpressionLevel1
{ after(grammarAccess.getExpressionLevel1Rule()); } 
	 EOF 
;

// Rule ExpressionLevel1
ruleExpressionLevel1 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getExpressionLevel1Access().getGroup()); }
		(rule__ExpressionLevel1__Group__0)
		{ after(grammarAccess.getExpressionLevel1Access().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleExpressionLevel2
entryRuleExpressionLevel2
:
{ before(grammarAccess.getExpressionLevel2Rule()); }
	 ruleExpressionLevel2
{ after(grammarAccess.getExpressionLevel2Rule()); } 
	 EOF 
;

// Rule ExpressionLevel2
ruleExpressionLevel2 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getExpressionLevel2Access().getGroup()); }
		(rule__ExpressionLevel2__Group__0)
		{ after(grammarAccess.getExpressionLevel2Access().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleExpressionLevel3
entryRuleExpressionLevel3
:
{ before(grammarAccess.getExpressionLevel3Rule()); }
	 ruleExpressionLevel3
{ after(grammarAccess.getExpressionLevel3Rule()); } 
	 EOF 
;

// Rule ExpressionLevel3
ruleExpressionLevel3 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getExpressionLevel3Access().getGroup()); }
		(rule__ExpressionLevel3__Group__0)
		{ after(grammarAccess.getExpressionLevel3Access().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleExpressionLevel4
entryRuleExpressionLevel4
:
{ before(grammarAccess.getExpressionLevel4Rule()); }
	 ruleExpressionLevel4
{ after(grammarAccess.getExpressionLevel4Rule()); } 
	 EOF 
;

// Rule ExpressionLevel4
ruleExpressionLevel4 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getExpressionLevel4Access().getGroup()); }
		(rule__ExpressionLevel4__Group__0)
		{ after(grammarAccess.getExpressionLevel4Access().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleExpressionLevel5
entryRuleExpressionLevel5
:
{ before(grammarAccess.getExpressionLevel5Rule()); }
	 ruleExpressionLevel5
{ after(grammarAccess.getExpressionLevel5Rule()); } 
	 EOF 
;

// Rule ExpressionLevel5
ruleExpressionLevel5 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getExpressionLevel5Access().getGroup()); }
		(rule__ExpressionLevel5__Group__0)
		{ after(grammarAccess.getExpressionLevel5Access().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleExpressionLevel6
entryRuleExpressionLevel6
:
{ before(grammarAccess.getExpressionLevel6Rule()); }
	 ruleExpressionLevel6
{ after(grammarAccess.getExpressionLevel6Rule()); } 
	 EOF 
;

// Rule ExpressionLevel6
ruleExpressionLevel6 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getExpressionLevel6Access().getGroup()); }
		(rule__ExpressionLevel6__Group__0)
		{ after(grammarAccess.getExpressionLevel6Access().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleExpressionLevel7
entryRuleExpressionLevel7
:
{ before(grammarAccess.getExpressionLevel7Rule()); }
	 ruleExpressionLevel7
{ after(grammarAccess.getExpressionLevel7Rule()); } 
	 EOF 
;

// Rule ExpressionLevel7
ruleExpressionLevel7 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getExpressionLevel7Access().getAlternatives()); }
		(rule__ExpressionLevel7__Alternatives)
		{ after(grammarAccess.getExpressionLevel7Access().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleExpressionNot
entryRuleExpressionNot
:
{ before(grammarAccess.getExpressionNotRule()); }
	 ruleExpressionNot
{ after(grammarAccess.getExpressionNotRule()); } 
	 EOF 
;

// Rule ExpressionNot
ruleExpressionNot 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getExpressionNotAccess().getGroup()); }
		(rule__ExpressionNot__Group__0)
		{ after(grammarAccess.getExpressionNotAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleExpressionMinus
entryRuleExpressionMinus
:
{ before(grammarAccess.getExpressionMinusRule()); }
	 ruleExpressionMinus
{ after(grammarAccess.getExpressionMinusRule()); } 
	 EOF 
;

// Rule ExpressionMinus
ruleExpressionMinus 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getExpressionMinusAccess().getGroup()); }
		(rule__ExpressionMinus__Group__0)
		{ after(grammarAccess.getExpressionMinusAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleExpressionPlus
entryRuleExpressionPlus
:
{ before(grammarAccess.getExpressionPlusRule()); }
	 ruleExpressionPlus
{ after(grammarAccess.getExpressionPlusRule()); } 
	 EOF 
;

// Rule ExpressionPlus
ruleExpressionPlus 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getExpressionPlusAccess().getGroup()); }
		(rule__ExpressionPlus__Group__0)
		{ after(grammarAccess.getExpressionPlusAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleExpressionLevel8
entryRuleExpressionLevel8
:
{ before(grammarAccess.getExpressionLevel8Rule()); }
	 ruleExpressionLevel8
{ after(grammarAccess.getExpressionLevel8Rule()); } 
	 EOF 
;

// Rule ExpressionLevel8
ruleExpressionLevel8 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getExpressionLevel8Access().getAlternatives()); }
		(rule__ExpressionLevel8__Alternatives)
		{ after(grammarAccess.getExpressionLevel8Access().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleExpressionBracket
entryRuleExpressionBracket
:
{ before(grammarAccess.getExpressionBracketRule()); }
	 ruleExpressionBracket
{ after(grammarAccess.getExpressionBracketRule()); } 
	 EOF 
;

// Rule ExpressionBracket
ruleExpressionBracket 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getExpressionBracketAccess().getGroup()); }
		(rule__ExpressionBracket__Group__0)
		{ after(grammarAccess.getExpressionBracketAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleExpressionConstantBool
entryRuleExpressionConstantBool
:
{ before(grammarAccess.getExpressionConstantBoolRule()); }
	 ruleExpressionConstantBool
{ after(grammarAccess.getExpressionConstantBoolRule()); } 
	 EOF 
;

// Rule ExpressionConstantBool
ruleExpressionConstantBool 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getExpressionConstantBoolAccess().getValueAssignment()); }
		(rule__ExpressionConstantBool__ValueAssignment)
		{ after(grammarAccess.getExpressionConstantBoolAccess().getValueAssignment()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleExpressionConstantInt
entryRuleExpressionConstantInt
:
{ before(grammarAccess.getExpressionConstantIntRule()); }
	 ruleExpressionConstantInt
{ after(grammarAccess.getExpressionConstantIntRule()); } 
	 EOF 
;

// Rule ExpressionConstantInt
ruleExpressionConstantInt 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getExpressionConstantIntAccess().getValueAssignment()); }
		(rule__ExpressionConstantInt__ValueAssignment)
		{ after(grammarAccess.getExpressionConstantIntAccess().getValueAssignment()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleExpressionConstantReal
entryRuleExpressionConstantReal
:
{ before(grammarAccess.getExpressionConstantRealRule()); }
	 ruleExpressionConstantReal
{ after(grammarAccess.getExpressionConstantRealRule()); } 
	 EOF 
;

// Rule ExpressionConstantReal
ruleExpressionConstantReal 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getExpressionConstantRealAccess().getValueAssignment()); }
		(rule__ExpressionConstantReal__ValueAssignment)
		{ after(grammarAccess.getExpressionConstantRealAccess().getValueAssignment()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleExpressionConstantString
entryRuleExpressionConstantString
:
{ before(grammarAccess.getExpressionConstantStringRule()); }
	 ruleExpressionConstantString
{ after(grammarAccess.getExpressionConstantStringRule()); } 
	 EOF 
;

// Rule ExpressionConstantString
ruleExpressionConstantString 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getExpressionConstantStringAccess().getValueAssignment()); }
		(rule__ExpressionConstantString__ValueAssignment)
		{ after(grammarAccess.getExpressionConstantStringAccess().getValueAssignment()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleExpressionVariable
entryRuleExpressionVariable
:
{ before(grammarAccess.getExpressionVariableRule()); }
	 ruleExpressionVariable
{ after(grammarAccess.getExpressionVariableRule()); } 
	 EOF 
;

// Rule ExpressionVariable
ruleExpressionVariable 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getExpressionVariableAccess().getVariableAssignment()); }
		(rule__ExpressionVariable__VariableAssignment)
		{ after(grammarAccess.getExpressionVariableAccess().getVariableAssignment()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleTypeDecl
entryRuleTypeDecl
:
{ before(grammarAccess.getTypeDeclRule()); }
	 ruleTypeDecl
{ after(grammarAccess.getTypeDeclRule()); } 
	 EOF 
;

// Rule TypeDecl
ruleTypeDecl 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getTypeDeclAccess().getAlternatives()); }
		(rule__TypeDecl__Alternatives)
		{ after(grammarAccess.getTypeDeclAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleSimpleTypeDecl
entryRuleSimpleTypeDecl
:
{ before(grammarAccess.getSimpleTypeDeclRule()); }
	 ruleSimpleTypeDecl
{ after(grammarAccess.getSimpleTypeDeclRule()); } 
	 EOF 
;

// Rule SimpleTypeDecl
ruleSimpleTypeDecl 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getSimpleTypeDeclAccess().getGroup()); }
		(rule__SimpleTypeDecl__Group__0)
		{ after(grammarAccess.getSimpleTypeDeclAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleEnumTypeDecl
entryRuleEnumTypeDecl
:
{ before(grammarAccess.getEnumTypeDeclRule()); }
	 ruleEnumTypeDecl
{ after(grammarAccess.getEnumTypeDeclRule()); } 
	 EOF 
;

// Rule EnumTypeDecl
ruleEnumTypeDecl 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getEnumTypeDeclAccess().getGroup()); }
		(rule__EnumTypeDecl__Group__0)
		{ after(grammarAccess.getEnumTypeDeclAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleEnumElement
entryRuleEnumElement
:
{ before(grammarAccess.getEnumElementRule()); }
	 ruleEnumElement
{ after(grammarAccess.getEnumElementRule()); } 
	 EOF 
;

// Rule EnumElement
ruleEnumElement 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getEnumElementAccess().getNameAssignment()); }
		(rule__EnumElement__NameAssignment)
		{ after(grammarAccess.getEnumElementAccess().getNameAssignment()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleArray
entryRuleArray
:
{ before(grammarAccess.getArrayRule()); }
	 ruleArray
{ after(grammarAccess.getArrayRule()); } 
	 EOF 
;

// Rule Array
ruleArray 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getArrayAccess().getGroup()); }
		(rule__Array__Group__0)
		{ after(grammarAccess.getArrayAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleType
entryRuleType
:
{ before(grammarAccess.getTypeRule()); }
	 ruleType
{ after(grammarAccess.getTypeRule()); } 
	 EOF 
;

// Rule Type
ruleType 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getTypeAccess().getAlternatives()); }
		(rule__Type__Alternatives)
		{ after(grammarAccess.getTypeAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleTypeRef
entryRuleTypeRef
:
{ before(grammarAccess.getTypeRefRule()); }
	 ruleTypeRef
{ after(grammarAccess.getTypeRefRule()); } 
	 EOF 
;

// Rule TypeRef
ruleTypeRef 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getTypeRefAccess().getTypeAssignment()); }
		(rule__TypeRef__TypeAssignment)
		{ after(grammarAccess.getTypeRefAccess().getTypeAssignment()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Event__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getEventAccess().getStartTaskParserRuleCall_0()); }
		ruleStartTask
		{ after(grammarAccess.getEventAccess().getStartTaskParserRuleCall_0()); }
	)
	|
	(
		{ before(grammarAccess.getEventAccess().getEndTaskParserRuleCall_1()); }
		ruleEndTask
		{ after(grammarAccess.getEventAccess().getEndTaskParserRuleCall_1()); }
	)
	|
	(
		{ before(grammarAccess.getEventAccess().getAnyEventParserRuleCall_2()); }
		ruleAnyEvent
		{ after(grammarAccess.getEventAccess().getAnyEventParserRuleCall_2()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__OnFailAction__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getOnFailActionAccess().getRestartPathParserRuleCall_0()); }
		ruleRestartPath
		{ after(grammarAccess.getOnFailActionAccess().getRestartPathParserRuleCall_0()); }
	)
	|
	(
		{ before(grammarAccess.getOnFailActionAccess().getSkipPathParserRuleCall_1()); }
		ruleSkipPath
		{ after(grammarAccess.getOnFailActionAccess().getSkipPathParserRuleCall_1()); }
	)
	|
	(
		{ before(grammarAccess.getOnFailActionAccess().getRestartTaskParserRuleCall_2()); }
		ruleRestartTask
		{ after(grammarAccess.getOnFailActionAccess().getRestartTaskParserRuleCall_2()); }
	)
	|
	(
		{ before(grammarAccess.getOnFailActionAccess().getSkipTaskParserRuleCall_3()); }
		ruleSkipTask
		{ after(grammarAccess.getOnFailActionAccess().getSkipTaskParserRuleCall_3()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ExpressionLevel1__Alternatives_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getExpressionLevel1Access().getGroup_1_0()); }
		(rule__ExpressionLevel1__Group_1_0__0)
		{ after(grammarAccess.getExpressionLevel1Access().getGroup_1_0()); }
	)
	|
	(
		{ before(grammarAccess.getExpressionLevel1Access().getGroup_1_1()); }
		(rule__ExpressionLevel1__Group_1_1__0)
		{ after(grammarAccess.getExpressionLevel1Access().getGroup_1_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ExpressionLevel1__Alternatives_1_0_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getExpressionLevel1Access().getANDKeyword_1_0_1_0()); }
		'AND'
		{ after(grammarAccess.getExpressionLevel1Access().getANDKeyword_1_0_1_0()); }
	)
	|
	(
		{ before(grammarAccess.getExpressionLevel1Access().getAndKeyword_1_0_1_1()); }
		'and'
		{ after(grammarAccess.getExpressionLevel1Access().getAndKeyword_1_0_1_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ExpressionLevel1__Alternatives_1_1_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getExpressionLevel1Access().getORKeyword_1_1_1_0()); }
		'OR'
		{ after(grammarAccess.getExpressionLevel1Access().getORKeyword_1_1_1_0()); }
	)
	|
	(
		{ before(grammarAccess.getExpressionLevel1Access().getOrKeyword_1_1_1_1()); }
		'or'
		{ after(grammarAccess.getExpressionLevel1Access().getOrKeyword_1_1_1_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ExpressionLevel2__Alternatives_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getExpressionLevel2Access().getGroup_1_0()); }
		(rule__ExpressionLevel2__Group_1_0__0)
		{ after(grammarAccess.getExpressionLevel2Access().getGroup_1_0()); }
	)
	|
	(
		{ before(grammarAccess.getExpressionLevel2Access().getGroup_1_1()); }
		(rule__ExpressionLevel2__Group_1_1__0)
		{ after(grammarAccess.getExpressionLevel2Access().getGroup_1_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ExpressionLevel3__Alternatives_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getExpressionLevel3Access().getGroup_1_0()); }
		(rule__ExpressionLevel3__Group_1_0__0)
		{ after(grammarAccess.getExpressionLevel3Access().getGroup_1_0()); }
	)
	|
	(
		{ before(grammarAccess.getExpressionLevel3Access().getGroup_1_1()); }
		(rule__ExpressionLevel3__Group_1_1__0)
		{ after(grammarAccess.getExpressionLevel3Access().getGroup_1_1()); }
	)
	|
	(
		{ before(grammarAccess.getExpressionLevel3Access().getGroup_1_2()); }
		(rule__ExpressionLevel3__Group_1_2__0)
		{ after(grammarAccess.getExpressionLevel3Access().getGroup_1_2()); }
	)
	|
	(
		{ before(grammarAccess.getExpressionLevel3Access().getGroup_1_3()); }
		(rule__ExpressionLevel3__Group_1_3__0)
		{ after(grammarAccess.getExpressionLevel3Access().getGroup_1_3()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ExpressionLevel4__Alternatives_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getExpressionLevel4Access().getGroup_1_0()); }
		(rule__ExpressionLevel4__Group_1_0__0)
		{ after(grammarAccess.getExpressionLevel4Access().getGroup_1_0()); }
	)
	|
	(
		{ before(grammarAccess.getExpressionLevel4Access().getGroup_1_1()); }
		(rule__ExpressionLevel4__Group_1_1__0)
		{ after(grammarAccess.getExpressionLevel4Access().getGroup_1_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ExpressionLevel5__Alternatives_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getExpressionLevel5Access().getGroup_1_0()); }
		(rule__ExpressionLevel5__Group_1_0__0)
		{ after(grammarAccess.getExpressionLevel5Access().getGroup_1_0()); }
	)
	|
	(
		{ before(grammarAccess.getExpressionLevel5Access().getGroup_1_1()); }
		(rule__ExpressionLevel5__Group_1_1__0)
		{ after(grammarAccess.getExpressionLevel5Access().getGroup_1_1()); }
	)
	|
	(
		{ before(grammarAccess.getExpressionLevel5Access().getGroup_1_2()); }
		(rule__ExpressionLevel5__Group_1_2__0)
		{ after(grammarAccess.getExpressionLevel5Access().getGroup_1_2()); }
	)
	|
	(
		{ before(grammarAccess.getExpressionLevel5Access().getGroup_1_3()); }
		(rule__ExpressionLevel5__Group_1_3__0)
		{ after(grammarAccess.getExpressionLevel5Access().getGroup_1_3()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ExpressionLevel7__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getExpressionLevel7Access().getExpressionNotParserRuleCall_0()); }
		ruleExpressionNot
		{ after(grammarAccess.getExpressionLevel7Access().getExpressionNotParserRuleCall_0()); }
	)
	|
	(
		{ before(grammarAccess.getExpressionLevel7Access().getExpressionMinusParserRuleCall_1()); }
		ruleExpressionMinus
		{ after(grammarAccess.getExpressionLevel7Access().getExpressionMinusParserRuleCall_1()); }
	)
	|
	(
		{ before(grammarAccess.getExpressionLevel7Access().getExpressionPlusParserRuleCall_2()); }
		ruleExpressionPlus
		{ after(grammarAccess.getExpressionLevel7Access().getExpressionPlusParserRuleCall_2()); }
	)
	|
	(
		{ before(grammarAccess.getExpressionLevel7Access().getExpressionLevel8ParserRuleCall_3()); }
		ruleExpressionLevel8
		{ after(grammarAccess.getExpressionLevel7Access().getExpressionLevel8ParserRuleCall_3()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ExpressionNot__Alternatives_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getExpressionNotAccess().getNOTKeyword_0_0()); }
		'NOT'
		{ after(grammarAccess.getExpressionNotAccess().getNOTKeyword_0_0()); }
	)
	|
	(
		{ before(grammarAccess.getExpressionNotAccess().getNotKeyword_0_1()); }
		'not'
		{ after(grammarAccess.getExpressionNotAccess().getNotKeyword_0_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ExpressionLevel8__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getExpressionLevel8Access().getExpressionBracketParserRuleCall_0()); }
		ruleExpressionBracket
		{ after(grammarAccess.getExpressionLevel8Access().getExpressionBracketParserRuleCall_0()); }
	)
	|
	(
		{ before(grammarAccess.getExpressionLevel8Access().getExpressionConstantBoolParserRuleCall_1()); }
		ruleExpressionConstantBool
		{ after(grammarAccess.getExpressionLevel8Access().getExpressionConstantBoolParserRuleCall_1()); }
	)
	|
	(
		{ before(grammarAccess.getExpressionLevel8Access().getExpressionConstantIntParserRuleCall_2()); }
		ruleExpressionConstantInt
		{ after(grammarAccess.getExpressionLevel8Access().getExpressionConstantIntParserRuleCall_2()); }
	)
	|
	(
		{ before(grammarAccess.getExpressionLevel8Access().getExpressionConstantRealParserRuleCall_3()); }
		ruleExpressionConstantReal
		{ after(grammarAccess.getExpressionLevel8Access().getExpressionConstantRealParserRuleCall_3()); }
	)
	|
	(
		{ before(grammarAccess.getExpressionLevel8Access().getExpressionConstantStringParserRuleCall_4()); }
		ruleExpressionConstantString
		{ after(grammarAccess.getExpressionLevel8Access().getExpressionConstantStringParserRuleCall_4()); }
	)
	|
	(
		{ before(grammarAccess.getExpressionLevel8Access().getExpressionVariableParserRuleCall_5()); }
		ruleExpressionVariable
		{ after(grammarAccess.getExpressionLevel8Access().getExpressionVariableParserRuleCall_5()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__TypeDecl__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getTypeDeclAccess().getEnumTypeDeclParserRuleCall_0()); }
		ruleEnumTypeDecl
		{ after(grammarAccess.getTypeDeclAccess().getEnumTypeDeclParserRuleCall_0()); }
	)
	|
	(
		{ before(grammarAccess.getTypeDeclAccess().getSimpleTypeDeclParserRuleCall_1()); }
		ruleSimpleTypeDecl
		{ after(grammarAccess.getTypeDeclAccess().getSimpleTypeDeclParserRuleCall_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Type__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getTypeAccess().getTypeRefParserRuleCall_0()); }
		ruleTypeRef
		{ after(grammarAccess.getTypeAccess().getTypeRefParserRuleCall_0()); }
	)
	|
	(
		{ before(grammarAccess.getTypeAccess().getArrayParserRuleCall_1()); }
		ruleArray
		{ after(grammarAccess.getTypeAccess().getArrayParserRuleCall_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__StateMachine__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__StateMachine__Group__0__Impl
	rule__StateMachine__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__StateMachine__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getStateMachineAccess().getMachineKeyword_0()); }
	'machine'
	{ after(grammarAccess.getStateMachineAccess().getMachineKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__StateMachine__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__StateMachine__Group__1__Impl
	rule__StateMachine__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__StateMachine__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getStateMachineAccess().getNameAssignment_1()); }
	(rule__StateMachine__NameAssignment_1)
	{ after(grammarAccess.getStateMachineAccess().getNameAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__StateMachine__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__StateMachine__Group__2__Impl
	rule__StateMachine__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__StateMachine__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getStateMachineAccess().getLeftCurlyBracketKeyword_2()); }
	'{'
	{ after(grammarAccess.getStateMachineAccess().getLeftCurlyBracketKeyword_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__StateMachine__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__StateMachine__Group__3__Impl
	rule__StateMachine__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__StateMachine__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getStateMachineAccess().getGroup_3()); }
	(rule__StateMachine__Group_3__0)?
	{ after(grammarAccess.getStateMachineAccess().getGroup_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__StateMachine__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__StateMachine__Group__4__Impl
	rule__StateMachine__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__StateMachine__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	(
		{ before(grammarAccess.getStateMachineAccess().getStatesAssignment_4()); }
		(rule__StateMachine__StatesAssignment_4)
		{ after(grammarAccess.getStateMachineAccess().getStatesAssignment_4()); }
	)
	(
		{ before(grammarAccess.getStateMachineAccess().getStatesAssignment_4()); }
		(rule__StateMachine__StatesAssignment_4)*
		{ after(grammarAccess.getStateMachineAccess().getStatesAssignment_4()); }
	)
)
;
finally {
	restoreStackSize(stackSize);
}

rule__StateMachine__Group__5
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__StateMachine__Group__5__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__StateMachine__Group__5__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getStateMachineAccess().getRightCurlyBracketKeyword_5()); }
	'}'
	{ after(grammarAccess.getStateMachineAccess().getRightCurlyBracketKeyword_5()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__StateMachine__Group_3__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__StateMachine__Group_3__0__Impl
	rule__StateMachine__Group_3__1
;
finally {
	restoreStackSize(stackSize);
}

rule__StateMachine__Group_3__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getStateMachineAccess().getVariablesKeyword_3_0()); }
	'variables'
	{ after(grammarAccess.getStateMachineAccess().getVariablesKeyword_3_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__StateMachine__Group_3__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__StateMachine__Group_3__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__StateMachine__Group_3__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	(
		{ before(grammarAccess.getStateMachineAccess().getVarsAssignment_3_1()); }
		(rule__StateMachine__VarsAssignment_3_1)
		{ after(grammarAccess.getStateMachineAccess().getVarsAssignment_3_1()); }
	)
	(
		{ before(grammarAccess.getStateMachineAccess().getVarsAssignment_3_1()); }
		(rule__StateMachine__VarsAssignment_3_1)*
		{ after(grammarAccess.getStateMachineAccess().getVarsAssignment_3_1()); }
	)
)
;
finally {
	restoreStackSize(stackSize);
}


rule__State__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__State__Group__0__Impl
	rule__State__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__State__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getStateAccess().getInitialAssignment_0()); }
	(rule__State__InitialAssignment_0)?
	{ after(grammarAccess.getStateAccess().getInitialAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__State__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__State__Group__1__Impl
	rule__State__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__State__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getStateAccess().getStateKeyword_1()); }
	'state'
	{ after(grammarAccess.getStateAccess().getStateKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__State__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__State__Group__2__Impl
	rule__State__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__State__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getStateAccess().getNameAssignment_2()); }
	(rule__State__NameAssignment_2)
	{ after(grammarAccess.getStateAccess().getNameAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__State__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__State__Group__3__Impl
	rule__State__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__State__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getStateAccess().getLeftCurlyBracketKeyword_3()); }
	'{'
	{ after(grammarAccess.getStateAccess().getLeftCurlyBracketKeyword_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__State__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__State__Group__4__Impl
	rule__State__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__State__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getStateAccess().getTransitionsAssignment_4()); }
	(rule__State__TransitionsAssignment_4)*
	{ after(grammarAccess.getStateAccess().getTransitionsAssignment_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__State__Group__5
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__State__Group__5__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__State__Group__5__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getStateAccess().getRightCurlyBracketKeyword_5()); }
	'}'
	{ after(grammarAccess.getStateAccess().getRightCurlyBracketKeyword_5()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Transition__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Transition__Group__0__Impl
	rule__Transition__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Transition__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTransitionAccess().getOnKeyword_0()); }
	'on'
	{ after(grammarAccess.getTransitionAccess().getOnKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Transition__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Transition__Group__1__Impl
	rule__Transition__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Transition__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTransitionAccess().getEventAssignment_1()); }
	(rule__Transition__EventAssignment_1)
	{ after(grammarAccess.getTransitionAccess().getEventAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Transition__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Transition__Group__2__Impl
	rule__Transition__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Transition__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTransitionAccess().getGroup_2()); }
	(rule__Transition__Group_2__0)?
	{ after(grammarAccess.getTransitionAccess().getGroup_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Transition__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Transition__Group__3__Impl
	rule__Transition__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Transition__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTransitionAccess().getActionsAssignment_3()); }
	(rule__Transition__ActionsAssignment_3)*
	{ after(grammarAccess.getTransitionAccess().getActionsAssignment_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Transition__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Transition__Group__4__Impl
	rule__Transition__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__Transition__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTransitionAccess().getOnFailAssignment_4()); }
	(rule__Transition__OnFailAssignment_4)?
	{ after(grammarAccess.getTransitionAccess().getOnFailAssignment_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Transition__Group__5
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Transition__Group__5__Impl
	rule__Transition__Group__6
;
finally {
	restoreStackSize(stackSize);
}

rule__Transition__Group__5__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTransitionAccess().getNextKeyword_5()); }
	'next'
	{ after(grammarAccess.getTransitionAccess().getNextKeyword_5()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Transition__Group__6
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Transition__Group__6__Impl
	rule__Transition__Group__7
;
finally {
	restoreStackSize(stackSize);
}

rule__Transition__Group__6__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTransitionAccess().getStateKeyword_6()); }
	'state:'
	{ after(grammarAccess.getTransitionAccess().getStateKeyword_6()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Transition__Group__7
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Transition__Group__7__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Transition__Group__7__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTransitionAccess().getNextAssignment_7()); }
	(rule__Transition__NextAssignment_7)
	{ after(grammarAccess.getTransitionAccess().getNextAssignment_7()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Transition__Group_2__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Transition__Group_2__0__Impl
	rule__Transition__Group_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Transition__Group_2__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTransitionAccess().getGuardKeyword_2_0()); }
	'guard:'
	{ after(grammarAccess.getTransitionAccess().getGuardKeyword_2_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Transition__Group_2__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Transition__Group_2__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Transition__Group_2__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTransitionAccess().getGuardAssignment_2_1()); }
	(rule__Transition__GuardAssignment_2_1)
	{ after(grammarAccess.getTransitionAccess().getGuardAssignment_2_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__StartTask__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__StartTask__Group__0__Impl
	rule__StartTask__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__StartTask__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getStartTaskAccess().getStartTaskKeyword_0()); }
	'startTask'
	{ after(grammarAccess.getStartTaskAccess().getStartTaskKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__StartTask__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__StartTask__Group__1__Impl
	rule__StartTask__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__StartTask__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getStartTaskAccess().getLeftParenthesisKeyword_1()); }
	'('
	{ after(grammarAccess.getStartTaskAccess().getLeftParenthesisKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__StartTask__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__StartTask__Group__2__Impl
	rule__StartTask__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__StartTask__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getStartTaskAccess().getTaskAssignment_2()); }
	(rule__StartTask__TaskAssignment_2)
	{ after(grammarAccess.getStartTaskAccess().getTaskAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__StartTask__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__StartTask__Group__3__Impl
	rule__StartTask__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__StartTask__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getStartTaskAccess().getCommaKeyword_3()); }
	','
	{ after(grammarAccess.getStartTaskAccess().getCommaKeyword_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__StartTask__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__StartTask__Group__4__Impl
	rule__StartTask__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__StartTask__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getStartTaskAccess().getTimeVarAssignment_4()); }
	(rule__StartTask__TimeVarAssignment_4)
	{ after(grammarAccess.getStartTaskAccess().getTimeVarAssignment_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__StartTask__Group__5
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__StartTask__Group__5__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__StartTask__Group__5__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getStartTaskAccess().getRightParenthesisKeyword_5()); }
	')'
	{ after(grammarAccess.getStartTaskAccess().getRightParenthesisKeyword_5()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__EndTask__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__EndTask__Group__0__Impl
	rule__EndTask__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__EndTask__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEndTaskAccess().getEndTaskKeyword_0()); }
	'endTask'
	{ after(grammarAccess.getEndTaskAccess().getEndTaskKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__EndTask__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__EndTask__Group__1__Impl
	rule__EndTask__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__EndTask__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEndTaskAccess().getLeftParenthesisKeyword_1()); }
	'('
	{ after(grammarAccess.getEndTaskAccess().getLeftParenthesisKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__EndTask__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__EndTask__Group__2__Impl
	rule__EndTask__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__EndTask__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEndTaskAccess().getTaskAssignment_2()); }
	(rule__EndTask__TaskAssignment_2)
	{ after(grammarAccess.getEndTaskAccess().getTaskAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__EndTask__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__EndTask__Group__3__Impl
	rule__EndTask__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__EndTask__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEndTaskAccess().getCommaKeyword_3()); }
	','
	{ after(grammarAccess.getEndTaskAccess().getCommaKeyword_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__EndTask__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__EndTask__Group__4__Impl
	rule__EndTask__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__EndTask__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEndTaskAccess().getTimeVarAssignment_4()); }
	(rule__EndTask__TimeVarAssignment_4)
	{ after(grammarAccess.getEndTaskAccess().getTimeVarAssignment_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__EndTask__Group__5
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__EndTask__Group__5__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__EndTask__Group__5__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEndTaskAccess().getRightParenthesisKeyword_5()); }
	')'
	{ after(grammarAccess.getEndTaskAccess().getRightParenthesisKeyword_5()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__AnyEvent__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AnyEvent__Group__0__Impl
	rule__AnyEvent__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__AnyEvent__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAnyEventAccess().getAnyEventKeyword_0()); }
	'anyEvent'
	{ after(grammarAccess.getAnyEventAccess().getAnyEventKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__AnyEvent__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AnyEvent__Group__1__Impl
	rule__AnyEvent__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__AnyEvent__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAnyEventAccess().getLeftParenthesisKeyword_1()); }
	'('
	{ after(grammarAccess.getAnyEventAccess().getLeftParenthesisKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__AnyEvent__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AnyEvent__Group__2__Impl
	rule__AnyEvent__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__AnyEvent__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAnyEventAccess().getTimeVarAssignment_2()); }
	(rule__AnyEvent__TimeVarAssignment_2)
	{ after(grammarAccess.getAnyEventAccess().getTimeVarAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__AnyEvent__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AnyEvent__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__AnyEvent__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAnyEventAccess().getRightParenthesisKeyword_3()); }
	')'
	{ after(grammarAccess.getAnyEventAccess().getRightParenthesisKeyword_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__TypedVariable__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__TypedVariable__Group__0__Impl
	rule__TypedVariable__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__TypedVariable__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTypedVariableAccess().getTypeAssignment_0()); }
	(rule__TypedVariable__TypeAssignment_0)
	{ after(grammarAccess.getTypedVariableAccess().getTypeAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__TypedVariable__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__TypedVariable__Group__1__Impl
	rule__TypedVariable__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__TypedVariable__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTypedVariableAccess().getNameAssignment_1()); }
	(rule__TypedVariable__NameAssignment_1)
	{ after(grammarAccess.getTypedVariableAccess().getNameAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__TypedVariable__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__TypedVariable__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__TypedVariable__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTypedVariableAccess().getGroup_2()); }
	(rule__TypedVariable__Group_2__0)?
	{ after(grammarAccess.getTypedVariableAccess().getGroup_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__TypedVariable__Group_2__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__TypedVariable__Group_2__0__Impl
	rule__TypedVariable__Group_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__TypedVariable__Group_2__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTypedVariableAccess().getEqualsSignKeyword_2_0()); }
	'='
	{ after(grammarAccess.getTypedVariableAccess().getEqualsSignKeyword_2_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__TypedVariable__Group_2__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__TypedVariable__Group_2__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__TypedVariable__Group_2__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTypedVariableAccess().getExprAssignment_2_1()); }
	(rule__TypedVariable__ExprAssignment_2_1)
	{ after(grammarAccess.getTypedVariableAccess().getExprAssignment_2_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__AssignmentAction__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AssignmentAction__Group__0__Impl
	rule__AssignmentAction__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__AssignmentAction__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAssignmentActionAccess().getVarAssignment_0()); }
	(rule__AssignmentAction__VarAssignment_0)
	{ after(grammarAccess.getAssignmentActionAccess().getVarAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__AssignmentAction__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AssignmentAction__Group__1__Impl
	rule__AssignmentAction__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__AssignmentAction__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAssignmentActionAccess().getEqualsSignKeyword_1()); }
	'='
	{ after(grammarAccess.getAssignmentActionAccess().getEqualsSignKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__AssignmentAction__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AssignmentAction__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__AssignmentAction__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAssignmentActionAccess().getExprAssignment_2()); }
	(rule__AssignmentAction__ExprAssignment_2)
	{ after(grammarAccess.getAssignmentActionAccess().getExprAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__RestartPath__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__RestartPath__Group__0__Impl
	rule__RestartPath__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__RestartPath__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRestartPathAccess().getRestartPathAction_0()); }
	()
	{ after(grammarAccess.getRestartPathAccess().getRestartPathAction_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__RestartPath__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__RestartPath__Group__1__Impl
	rule__RestartPath__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__RestartPath__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRestartPathAccess().getRestartPathKeyword_1()); }
	'restartPath'
	{ after(grammarAccess.getRestartPathAccess().getRestartPathKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__RestartPath__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__RestartPath__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__RestartPath__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRestartPathAccess().getGroup_2()); }
	(rule__RestartPath__Group_2__0)?
	{ after(grammarAccess.getRestartPathAccess().getGroup_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__RestartPath__Group_2__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__RestartPath__Group_2__0__Impl
	rule__RestartPath__Group_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__RestartPath__Group_2__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRestartPathAccess().getPathKeyword_2_0()); }
	'Path:'
	{ after(grammarAccess.getRestartPathAccess().getPathKeyword_2_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__RestartPath__Group_2__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__RestartPath__Group_2__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__RestartPath__Group_2__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRestartPathAccess().getPathAssignment_2_1()); }
	(rule__RestartPath__PathAssignment_2_1)
	{ after(grammarAccess.getRestartPathAccess().getPathAssignment_2_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__SkipPath__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__SkipPath__Group__0__Impl
	rule__SkipPath__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__SkipPath__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSkipPathAccess().getSkipPathAction_0()); }
	()
	{ after(grammarAccess.getSkipPathAccess().getSkipPathAction_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__SkipPath__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__SkipPath__Group__1__Impl
	rule__SkipPath__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__SkipPath__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSkipPathAccess().getSkipPathKeyword_1()); }
	'skipPath'
	{ after(grammarAccess.getSkipPathAccess().getSkipPathKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__SkipPath__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__SkipPath__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__SkipPath__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSkipPathAccess().getGroup_2()); }
	(rule__SkipPath__Group_2__0)?
	{ after(grammarAccess.getSkipPathAccess().getGroup_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__SkipPath__Group_2__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__SkipPath__Group_2__0__Impl
	rule__SkipPath__Group_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__SkipPath__Group_2__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSkipPathAccess().getPathKeyword_2_0()); }
	'Path:'
	{ after(grammarAccess.getSkipPathAccess().getPathKeyword_2_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__SkipPath__Group_2__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__SkipPath__Group_2__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__SkipPath__Group_2__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSkipPathAccess().getPathAssignment_2_1()); }
	(rule__SkipPath__PathAssignment_2_1)
	{ after(grammarAccess.getSkipPathAccess().getPathAssignment_2_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__RestartTask__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__RestartTask__Group__0__Impl
	rule__RestartTask__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__RestartTask__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRestartTaskAccess().getRestartTaskAction_0()); }
	()
	{ after(grammarAccess.getRestartTaskAccess().getRestartTaskAction_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__RestartTask__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__RestartTask__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__RestartTask__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRestartTaskAccess().getRestartTaskKeyword_1()); }
	'restartTask'
	{ after(grammarAccess.getRestartTaskAccess().getRestartTaskKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__SkipTask__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__SkipTask__Group__0__Impl
	rule__SkipTask__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__SkipTask__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSkipTaskAccess().getSkipTaskAction_0()); }
	()
	{ after(grammarAccess.getSkipTaskAccess().getSkipTaskAction_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__SkipTask__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__SkipTask__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__SkipTask__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSkipTaskAccess().getSkipTaskKeyword_1()); }
	'skipTask'
	{ after(grammarAccess.getSkipTaskAccess().getSkipTaskKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ExpressionLevel1__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ExpressionLevel1__Group__0__Impl
	rule__ExpressionLevel1__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ExpressionLevel1__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getExpressionLevel1Access().getExpressionLevel2ParserRuleCall_0()); }
	ruleExpressionLevel2
	{ after(grammarAccess.getExpressionLevel1Access().getExpressionLevel2ParserRuleCall_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ExpressionLevel1__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ExpressionLevel1__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ExpressionLevel1__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getExpressionLevel1Access().getAlternatives_1()); }
	(rule__ExpressionLevel1__Alternatives_1)*
	{ after(grammarAccess.getExpressionLevel1Access().getAlternatives_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ExpressionLevel1__Group_1_0__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ExpressionLevel1__Group_1_0__0__Impl
	rule__ExpressionLevel1__Group_1_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ExpressionLevel1__Group_1_0__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getExpressionLevel1Access().getExpressionAndLeftAction_1_0_0()); }
	()
	{ after(grammarAccess.getExpressionLevel1Access().getExpressionAndLeftAction_1_0_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ExpressionLevel1__Group_1_0__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ExpressionLevel1__Group_1_0__1__Impl
	rule__ExpressionLevel1__Group_1_0__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ExpressionLevel1__Group_1_0__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getExpressionLevel1Access().getAlternatives_1_0_1()); }
	(rule__ExpressionLevel1__Alternatives_1_0_1)
	{ after(grammarAccess.getExpressionLevel1Access().getAlternatives_1_0_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ExpressionLevel1__Group_1_0__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ExpressionLevel1__Group_1_0__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ExpressionLevel1__Group_1_0__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getExpressionLevel1Access().getRightAssignment_1_0_2()); }
	(rule__ExpressionLevel1__RightAssignment_1_0_2)
	{ after(grammarAccess.getExpressionLevel1Access().getRightAssignment_1_0_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ExpressionLevel1__Group_1_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ExpressionLevel1__Group_1_1__0__Impl
	rule__ExpressionLevel1__Group_1_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ExpressionLevel1__Group_1_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getExpressionLevel1Access().getExpressionOrLeftAction_1_1_0()); }
	()
	{ after(grammarAccess.getExpressionLevel1Access().getExpressionOrLeftAction_1_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ExpressionLevel1__Group_1_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ExpressionLevel1__Group_1_1__1__Impl
	rule__ExpressionLevel1__Group_1_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ExpressionLevel1__Group_1_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getExpressionLevel1Access().getAlternatives_1_1_1()); }
	(rule__ExpressionLevel1__Alternatives_1_1_1)
	{ after(grammarAccess.getExpressionLevel1Access().getAlternatives_1_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ExpressionLevel1__Group_1_1__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ExpressionLevel1__Group_1_1__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ExpressionLevel1__Group_1_1__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getExpressionLevel1Access().getRightAssignment_1_1_2()); }
	(rule__ExpressionLevel1__RightAssignment_1_1_2)
	{ after(grammarAccess.getExpressionLevel1Access().getRightAssignment_1_1_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ExpressionLevel2__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ExpressionLevel2__Group__0__Impl
	rule__ExpressionLevel2__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ExpressionLevel2__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getExpressionLevel2Access().getExpressionLevel3ParserRuleCall_0()); }
	ruleExpressionLevel3
	{ after(grammarAccess.getExpressionLevel2Access().getExpressionLevel3ParserRuleCall_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ExpressionLevel2__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ExpressionLevel2__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ExpressionLevel2__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getExpressionLevel2Access().getAlternatives_1()); }
	(rule__ExpressionLevel2__Alternatives_1)*
	{ after(grammarAccess.getExpressionLevel2Access().getAlternatives_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ExpressionLevel2__Group_1_0__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ExpressionLevel2__Group_1_0__0__Impl
	rule__ExpressionLevel2__Group_1_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ExpressionLevel2__Group_1_0__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getExpressionLevel2Access().getExpressionEqualLeftAction_1_0_0()); }
	()
	{ after(grammarAccess.getExpressionLevel2Access().getExpressionEqualLeftAction_1_0_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ExpressionLevel2__Group_1_0__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ExpressionLevel2__Group_1_0__1__Impl
	rule__ExpressionLevel2__Group_1_0__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ExpressionLevel2__Group_1_0__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getExpressionLevel2Access().getEqualsSignEqualsSignKeyword_1_0_1()); }
	'=='
	{ after(grammarAccess.getExpressionLevel2Access().getEqualsSignEqualsSignKeyword_1_0_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ExpressionLevel2__Group_1_0__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ExpressionLevel2__Group_1_0__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ExpressionLevel2__Group_1_0__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getExpressionLevel2Access().getRightAssignment_1_0_2()); }
	(rule__ExpressionLevel2__RightAssignment_1_0_2)
	{ after(grammarAccess.getExpressionLevel2Access().getRightAssignment_1_0_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ExpressionLevel2__Group_1_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ExpressionLevel2__Group_1_1__0__Impl
	rule__ExpressionLevel2__Group_1_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ExpressionLevel2__Group_1_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getExpressionLevel2Access().getExpressionNEqualLeftAction_1_1_0()); }
	()
	{ after(grammarAccess.getExpressionLevel2Access().getExpressionNEqualLeftAction_1_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ExpressionLevel2__Group_1_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ExpressionLevel2__Group_1_1__1__Impl
	rule__ExpressionLevel2__Group_1_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ExpressionLevel2__Group_1_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getExpressionLevel2Access().getExclamationMarkEqualsSignKeyword_1_1_1()); }
	'!='
	{ after(grammarAccess.getExpressionLevel2Access().getExclamationMarkEqualsSignKeyword_1_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ExpressionLevel2__Group_1_1__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ExpressionLevel2__Group_1_1__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ExpressionLevel2__Group_1_1__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getExpressionLevel2Access().getRightAssignment_1_1_2()); }
	(rule__ExpressionLevel2__RightAssignment_1_1_2)
	{ after(grammarAccess.getExpressionLevel2Access().getRightAssignment_1_1_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ExpressionLevel3__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ExpressionLevel3__Group__0__Impl
	rule__ExpressionLevel3__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ExpressionLevel3__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getExpressionLevel3Access().getExpressionLevel4ParserRuleCall_0()); }
	ruleExpressionLevel4
	{ after(grammarAccess.getExpressionLevel3Access().getExpressionLevel4ParserRuleCall_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ExpressionLevel3__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ExpressionLevel3__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ExpressionLevel3__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getExpressionLevel3Access().getAlternatives_1()); }
	(rule__ExpressionLevel3__Alternatives_1)*
	{ after(grammarAccess.getExpressionLevel3Access().getAlternatives_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ExpressionLevel3__Group_1_0__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ExpressionLevel3__Group_1_0__0__Impl
	rule__ExpressionLevel3__Group_1_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ExpressionLevel3__Group_1_0__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getExpressionLevel3Access().getExpressionGeqLeftAction_1_0_0()); }
	()
	{ after(grammarAccess.getExpressionLevel3Access().getExpressionGeqLeftAction_1_0_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ExpressionLevel3__Group_1_0__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ExpressionLevel3__Group_1_0__1__Impl
	rule__ExpressionLevel3__Group_1_0__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ExpressionLevel3__Group_1_0__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getExpressionLevel3Access().getGreaterThanSignEqualsSignKeyword_1_0_1()); }
	'>='
	{ after(grammarAccess.getExpressionLevel3Access().getGreaterThanSignEqualsSignKeyword_1_0_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ExpressionLevel3__Group_1_0__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ExpressionLevel3__Group_1_0__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ExpressionLevel3__Group_1_0__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getExpressionLevel3Access().getRightAssignment_1_0_2()); }
	(rule__ExpressionLevel3__RightAssignment_1_0_2)
	{ after(grammarAccess.getExpressionLevel3Access().getRightAssignment_1_0_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ExpressionLevel3__Group_1_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ExpressionLevel3__Group_1_1__0__Impl
	rule__ExpressionLevel3__Group_1_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ExpressionLevel3__Group_1_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getExpressionLevel3Access().getExpressionGreaterLeftAction_1_1_0()); }
	()
	{ after(grammarAccess.getExpressionLevel3Access().getExpressionGreaterLeftAction_1_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ExpressionLevel3__Group_1_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ExpressionLevel3__Group_1_1__1__Impl
	rule__ExpressionLevel3__Group_1_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ExpressionLevel3__Group_1_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getExpressionLevel3Access().getGreaterThanSignKeyword_1_1_1()); }
	'>'
	{ after(grammarAccess.getExpressionLevel3Access().getGreaterThanSignKeyword_1_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ExpressionLevel3__Group_1_1__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ExpressionLevel3__Group_1_1__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ExpressionLevel3__Group_1_1__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getExpressionLevel3Access().getRightAssignment_1_1_2()); }
	(rule__ExpressionLevel3__RightAssignment_1_1_2)
	{ after(grammarAccess.getExpressionLevel3Access().getRightAssignment_1_1_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ExpressionLevel3__Group_1_2__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ExpressionLevel3__Group_1_2__0__Impl
	rule__ExpressionLevel3__Group_1_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ExpressionLevel3__Group_1_2__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getExpressionLevel3Access().getExpressionLeqLeftAction_1_2_0()); }
	()
	{ after(grammarAccess.getExpressionLevel3Access().getExpressionLeqLeftAction_1_2_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ExpressionLevel3__Group_1_2__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ExpressionLevel3__Group_1_2__1__Impl
	rule__ExpressionLevel3__Group_1_2__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ExpressionLevel3__Group_1_2__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getExpressionLevel3Access().getLessThanSignEqualsSignKeyword_1_2_1()); }
	'<='
	{ after(grammarAccess.getExpressionLevel3Access().getLessThanSignEqualsSignKeyword_1_2_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ExpressionLevel3__Group_1_2__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ExpressionLevel3__Group_1_2__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ExpressionLevel3__Group_1_2__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getExpressionLevel3Access().getRightAssignment_1_2_2()); }
	(rule__ExpressionLevel3__RightAssignment_1_2_2)
	{ after(grammarAccess.getExpressionLevel3Access().getRightAssignment_1_2_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ExpressionLevel3__Group_1_3__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ExpressionLevel3__Group_1_3__0__Impl
	rule__ExpressionLevel3__Group_1_3__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ExpressionLevel3__Group_1_3__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getExpressionLevel3Access().getExpressionLessLeftAction_1_3_0()); }
	()
	{ after(grammarAccess.getExpressionLevel3Access().getExpressionLessLeftAction_1_3_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ExpressionLevel3__Group_1_3__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ExpressionLevel3__Group_1_3__1__Impl
	rule__ExpressionLevel3__Group_1_3__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ExpressionLevel3__Group_1_3__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getExpressionLevel3Access().getLessThanSignKeyword_1_3_1()); }
	'<'
	{ after(grammarAccess.getExpressionLevel3Access().getLessThanSignKeyword_1_3_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ExpressionLevel3__Group_1_3__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ExpressionLevel3__Group_1_3__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ExpressionLevel3__Group_1_3__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getExpressionLevel3Access().getRightAssignment_1_3_2()); }
	(rule__ExpressionLevel3__RightAssignment_1_3_2)
	{ after(grammarAccess.getExpressionLevel3Access().getRightAssignment_1_3_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ExpressionLevel4__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ExpressionLevel4__Group__0__Impl
	rule__ExpressionLevel4__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ExpressionLevel4__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getExpressionLevel4Access().getExpressionLevel5ParserRuleCall_0()); }
	ruleExpressionLevel5
	{ after(grammarAccess.getExpressionLevel4Access().getExpressionLevel5ParserRuleCall_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ExpressionLevel4__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ExpressionLevel4__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ExpressionLevel4__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getExpressionLevel4Access().getAlternatives_1()); }
	(rule__ExpressionLevel4__Alternatives_1)*
	{ after(grammarAccess.getExpressionLevel4Access().getAlternatives_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ExpressionLevel4__Group_1_0__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ExpressionLevel4__Group_1_0__0__Impl
	rule__ExpressionLevel4__Group_1_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ExpressionLevel4__Group_1_0__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getExpressionLevel4Access().getExpressionAdditionLeftAction_1_0_0()); }
	()
	{ after(grammarAccess.getExpressionLevel4Access().getExpressionAdditionLeftAction_1_0_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ExpressionLevel4__Group_1_0__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ExpressionLevel4__Group_1_0__1__Impl
	rule__ExpressionLevel4__Group_1_0__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ExpressionLevel4__Group_1_0__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getExpressionLevel4Access().getPlusSignKeyword_1_0_1()); }
	'+'
	{ after(grammarAccess.getExpressionLevel4Access().getPlusSignKeyword_1_0_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ExpressionLevel4__Group_1_0__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ExpressionLevel4__Group_1_0__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ExpressionLevel4__Group_1_0__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getExpressionLevel4Access().getRightAssignment_1_0_2()); }
	(rule__ExpressionLevel4__RightAssignment_1_0_2)
	{ after(grammarAccess.getExpressionLevel4Access().getRightAssignment_1_0_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ExpressionLevel4__Group_1_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ExpressionLevel4__Group_1_1__0__Impl
	rule__ExpressionLevel4__Group_1_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ExpressionLevel4__Group_1_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getExpressionLevel4Access().getExpressionSubtractionLeftAction_1_1_0()); }
	()
	{ after(grammarAccess.getExpressionLevel4Access().getExpressionSubtractionLeftAction_1_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ExpressionLevel4__Group_1_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ExpressionLevel4__Group_1_1__1__Impl
	rule__ExpressionLevel4__Group_1_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ExpressionLevel4__Group_1_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getExpressionLevel4Access().getHyphenMinusKeyword_1_1_1()); }
	'-'
	{ after(grammarAccess.getExpressionLevel4Access().getHyphenMinusKeyword_1_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ExpressionLevel4__Group_1_1__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ExpressionLevel4__Group_1_1__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ExpressionLevel4__Group_1_1__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getExpressionLevel4Access().getRightAssignment_1_1_2()); }
	(rule__ExpressionLevel4__RightAssignment_1_1_2)
	{ after(grammarAccess.getExpressionLevel4Access().getRightAssignment_1_1_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ExpressionLevel5__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ExpressionLevel5__Group__0__Impl
	rule__ExpressionLevel5__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ExpressionLevel5__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getExpressionLevel5Access().getExpressionLevel6ParserRuleCall_0()); }
	ruleExpressionLevel6
	{ after(grammarAccess.getExpressionLevel5Access().getExpressionLevel6ParserRuleCall_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ExpressionLevel5__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ExpressionLevel5__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ExpressionLevel5__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getExpressionLevel5Access().getAlternatives_1()); }
	(rule__ExpressionLevel5__Alternatives_1)*
	{ after(grammarAccess.getExpressionLevel5Access().getAlternatives_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ExpressionLevel5__Group_1_0__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ExpressionLevel5__Group_1_0__0__Impl
	rule__ExpressionLevel5__Group_1_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ExpressionLevel5__Group_1_0__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getExpressionLevel5Access().getExpressionMultiplyLeftAction_1_0_0()); }
	()
	{ after(grammarAccess.getExpressionLevel5Access().getExpressionMultiplyLeftAction_1_0_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ExpressionLevel5__Group_1_0__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ExpressionLevel5__Group_1_0__1__Impl
	rule__ExpressionLevel5__Group_1_0__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ExpressionLevel5__Group_1_0__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getExpressionLevel5Access().getAsteriskKeyword_1_0_1()); }
	'*'
	{ after(grammarAccess.getExpressionLevel5Access().getAsteriskKeyword_1_0_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ExpressionLevel5__Group_1_0__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ExpressionLevel5__Group_1_0__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ExpressionLevel5__Group_1_0__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getExpressionLevel5Access().getRightAssignment_1_0_2()); }
	(rule__ExpressionLevel5__RightAssignment_1_0_2)
	{ after(grammarAccess.getExpressionLevel5Access().getRightAssignment_1_0_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ExpressionLevel5__Group_1_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ExpressionLevel5__Group_1_1__0__Impl
	rule__ExpressionLevel5__Group_1_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ExpressionLevel5__Group_1_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getExpressionLevel5Access().getExpressionDivisionLeftAction_1_1_0()); }
	()
	{ after(grammarAccess.getExpressionLevel5Access().getExpressionDivisionLeftAction_1_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ExpressionLevel5__Group_1_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ExpressionLevel5__Group_1_1__1__Impl
	rule__ExpressionLevel5__Group_1_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ExpressionLevel5__Group_1_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getExpressionLevel5Access().getSolidusKeyword_1_1_1()); }
	'/'
	{ after(grammarAccess.getExpressionLevel5Access().getSolidusKeyword_1_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ExpressionLevel5__Group_1_1__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ExpressionLevel5__Group_1_1__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ExpressionLevel5__Group_1_1__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getExpressionLevel5Access().getRightAssignment_1_1_2()); }
	(rule__ExpressionLevel5__RightAssignment_1_1_2)
	{ after(grammarAccess.getExpressionLevel5Access().getRightAssignment_1_1_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ExpressionLevel5__Group_1_2__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ExpressionLevel5__Group_1_2__0__Impl
	rule__ExpressionLevel5__Group_1_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ExpressionLevel5__Group_1_2__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getExpressionLevel5Access().getExpressionMaximumLeftAction_1_2_0()); }
	()
	{ after(grammarAccess.getExpressionLevel5Access().getExpressionMaximumLeftAction_1_2_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ExpressionLevel5__Group_1_2__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ExpressionLevel5__Group_1_2__1__Impl
	rule__ExpressionLevel5__Group_1_2__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ExpressionLevel5__Group_1_2__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getExpressionLevel5Access().getMaxKeyword_1_2_1()); }
	'max'
	{ after(grammarAccess.getExpressionLevel5Access().getMaxKeyword_1_2_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ExpressionLevel5__Group_1_2__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ExpressionLevel5__Group_1_2__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ExpressionLevel5__Group_1_2__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getExpressionLevel5Access().getRightAssignment_1_2_2()); }
	(rule__ExpressionLevel5__RightAssignment_1_2_2)
	{ after(grammarAccess.getExpressionLevel5Access().getRightAssignment_1_2_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ExpressionLevel5__Group_1_3__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ExpressionLevel5__Group_1_3__0__Impl
	rule__ExpressionLevel5__Group_1_3__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ExpressionLevel5__Group_1_3__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getExpressionLevel5Access().getExpressionMinimumLeftAction_1_3_0()); }
	()
	{ after(grammarAccess.getExpressionLevel5Access().getExpressionMinimumLeftAction_1_3_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ExpressionLevel5__Group_1_3__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ExpressionLevel5__Group_1_3__1__Impl
	rule__ExpressionLevel5__Group_1_3__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ExpressionLevel5__Group_1_3__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getExpressionLevel5Access().getMinKeyword_1_3_1()); }
	'min'
	{ after(grammarAccess.getExpressionLevel5Access().getMinKeyword_1_3_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ExpressionLevel5__Group_1_3__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ExpressionLevel5__Group_1_3__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ExpressionLevel5__Group_1_3__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getExpressionLevel5Access().getRightAssignment_1_3_2()); }
	(rule__ExpressionLevel5__RightAssignment_1_3_2)
	{ after(grammarAccess.getExpressionLevel5Access().getRightAssignment_1_3_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ExpressionLevel6__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ExpressionLevel6__Group__0__Impl
	rule__ExpressionLevel6__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ExpressionLevel6__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getExpressionLevel6Access().getExpressionLevel7ParserRuleCall_0()); }
	ruleExpressionLevel7
	{ after(grammarAccess.getExpressionLevel6Access().getExpressionLevel7ParserRuleCall_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ExpressionLevel6__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ExpressionLevel6__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ExpressionLevel6__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getExpressionLevel6Access().getGroup_1()); }
	(rule__ExpressionLevel6__Group_1__0)?
	{ after(grammarAccess.getExpressionLevel6Access().getGroup_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ExpressionLevel6__Group_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ExpressionLevel6__Group_1__0__Impl
	rule__ExpressionLevel6__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ExpressionLevel6__Group_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getExpressionLevel6Access().getExpressionPowerLeftAction_1_0()); }
	()
	{ after(grammarAccess.getExpressionLevel6Access().getExpressionPowerLeftAction_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ExpressionLevel6__Group_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ExpressionLevel6__Group_1__1__Impl
	rule__ExpressionLevel6__Group_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ExpressionLevel6__Group_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getExpressionLevel6Access().getCircumflexAccentKeyword_1_1()); }
	'^'
	{ after(grammarAccess.getExpressionLevel6Access().getCircumflexAccentKeyword_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ExpressionLevel6__Group_1__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ExpressionLevel6__Group_1__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ExpressionLevel6__Group_1__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getExpressionLevel6Access().getRightAssignment_1_2()); }
	(rule__ExpressionLevel6__RightAssignment_1_2)
	{ after(grammarAccess.getExpressionLevel6Access().getRightAssignment_1_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ExpressionNot__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ExpressionNot__Group__0__Impl
	rule__ExpressionNot__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ExpressionNot__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getExpressionNotAccess().getAlternatives_0()); }
	(rule__ExpressionNot__Alternatives_0)
	{ after(grammarAccess.getExpressionNotAccess().getAlternatives_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ExpressionNot__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ExpressionNot__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ExpressionNot__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getExpressionNotAccess().getSubAssignment_1()); }
	(rule__ExpressionNot__SubAssignment_1)
	{ after(grammarAccess.getExpressionNotAccess().getSubAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ExpressionMinus__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ExpressionMinus__Group__0__Impl
	rule__ExpressionMinus__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ExpressionMinus__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getExpressionMinusAccess().getHyphenMinusKeyword_0()); }
	'-'
	{ after(grammarAccess.getExpressionMinusAccess().getHyphenMinusKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ExpressionMinus__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ExpressionMinus__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ExpressionMinus__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getExpressionMinusAccess().getSubAssignment_1()); }
	(rule__ExpressionMinus__SubAssignment_1)
	{ after(grammarAccess.getExpressionMinusAccess().getSubAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ExpressionPlus__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ExpressionPlus__Group__0__Impl
	rule__ExpressionPlus__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ExpressionPlus__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getExpressionPlusAccess().getPlusSignKeyword_0()); }
	'+'
	{ after(grammarAccess.getExpressionPlusAccess().getPlusSignKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ExpressionPlus__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ExpressionPlus__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ExpressionPlus__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getExpressionPlusAccess().getSubAssignment_1()); }
	(rule__ExpressionPlus__SubAssignment_1)
	{ after(grammarAccess.getExpressionPlusAccess().getSubAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ExpressionBracket__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ExpressionBracket__Group__0__Impl
	rule__ExpressionBracket__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ExpressionBracket__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getExpressionBracketAccess().getLeftParenthesisKeyword_0()); }
	'('
	{ after(grammarAccess.getExpressionBracketAccess().getLeftParenthesisKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ExpressionBracket__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ExpressionBracket__Group__1__Impl
	rule__ExpressionBracket__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ExpressionBracket__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getExpressionBracketAccess().getSubAssignment_1()); }
	(rule__ExpressionBracket__SubAssignment_1)
	{ after(grammarAccess.getExpressionBracketAccess().getSubAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ExpressionBracket__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ExpressionBracket__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ExpressionBracket__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getExpressionBracketAccess().getRightParenthesisKeyword_2()); }
	')'
	{ after(grammarAccess.getExpressionBracketAccess().getRightParenthesisKeyword_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__SimpleTypeDecl__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__SimpleTypeDecl__Group__0__Impl
	rule__SimpleTypeDecl__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__SimpleTypeDecl__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSimpleTypeDeclAccess().getTypeKeyword_0()); }
	'type'
	{ after(grammarAccess.getSimpleTypeDeclAccess().getTypeKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__SimpleTypeDecl__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__SimpleTypeDecl__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__SimpleTypeDecl__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSimpleTypeDeclAccess().getNameAssignment_1()); }
	(rule__SimpleTypeDecl__NameAssignment_1)
	{ after(grammarAccess.getSimpleTypeDeclAccess().getNameAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__EnumTypeDecl__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__EnumTypeDecl__Group__0__Impl
	rule__EnumTypeDecl__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__EnumTypeDecl__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEnumTypeDeclAccess().getEnumKeyword_0()); }
	'enum'
	{ after(grammarAccess.getEnumTypeDeclAccess().getEnumKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__EnumTypeDecl__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__EnumTypeDecl__Group__1__Impl
	rule__EnumTypeDecl__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__EnumTypeDecl__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEnumTypeDeclAccess().getNameAssignment_1()); }
	(rule__EnumTypeDecl__NameAssignment_1)
	{ after(grammarAccess.getEnumTypeDeclAccess().getNameAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__EnumTypeDecl__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__EnumTypeDecl__Group__2__Impl
	rule__EnumTypeDecl__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__EnumTypeDecl__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEnumTypeDeclAccess().getLeftCurlyBracketKeyword_2()); }
	'{'
	{ after(grammarAccess.getEnumTypeDeclAccess().getLeftCurlyBracketKeyword_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__EnumTypeDecl__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__EnumTypeDecl__Group__3__Impl
	rule__EnumTypeDecl__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__EnumTypeDecl__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	(
		{ before(grammarAccess.getEnumTypeDeclAccess().getLiteralsAssignment_3()); }
		(rule__EnumTypeDecl__LiteralsAssignment_3)
		{ after(grammarAccess.getEnumTypeDeclAccess().getLiteralsAssignment_3()); }
	)
	(
		{ before(grammarAccess.getEnumTypeDeclAccess().getLiteralsAssignment_3()); }
		(rule__EnumTypeDecl__LiteralsAssignment_3)*
		{ after(grammarAccess.getEnumTypeDeclAccess().getLiteralsAssignment_3()); }
	)
)
;
finally {
	restoreStackSize(stackSize);
}

rule__EnumTypeDecl__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__EnumTypeDecl__Group__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__EnumTypeDecl__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEnumTypeDeclAccess().getRightCurlyBracketKeyword_4()); }
	'}'
	{ after(grammarAccess.getEnumTypeDeclAccess().getRightCurlyBracketKeyword_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Array__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Array__Group__0__Impl
	rule__Array__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Array__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getArrayAccess().getBaseTypeAssignment_0()); }
	(rule__Array__BaseTypeAssignment_0)
	{ after(grammarAccess.getArrayAccess().getBaseTypeAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Array__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Array__Group__1__Impl
	rule__Array__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Array__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getArrayAccess().getLeftSquareBracketKeyword_1()); }
	'['
	{ after(grammarAccess.getArrayAccess().getLeftSquareBracketKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Array__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Array__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Array__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getArrayAccess().getRightSquareBracketKeyword_2()); }
	']'
	{ after(grammarAccess.getArrayAccess().getRightSquareBracketKeyword_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Monitor__MachinesAssignment
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getMonitorAccess().getMachinesStateMachineParserRuleCall_0()); }
		ruleStateMachine
		{ after(grammarAccess.getMonitorAccess().getMachinesStateMachineParserRuleCall_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__StateMachine__NameAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getStateMachineAccess().getNameIDTerminalRuleCall_1_0()); }
		RULE_ID
		{ after(grammarAccess.getStateMachineAccess().getNameIDTerminalRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__StateMachine__VarsAssignment_3_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getStateMachineAccess().getVarsTypedVariableParserRuleCall_3_1_0()); }
		ruleTypedVariable
		{ after(grammarAccess.getStateMachineAccess().getVarsTypedVariableParserRuleCall_3_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__StateMachine__StatesAssignment_4
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getStateMachineAccess().getStatesStateParserRuleCall_4_0()); }
		ruleState
		{ after(grammarAccess.getStateMachineAccess().getStatesStateParserRuleCall_4_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__State__InitialAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getStateAccess().getInitialInitialKeyword_0_0()); }
		(
			{ before(grammarAccess.getStateAccess().getInitialInitialKeyword_0_0()); }
			'initial'
			{ after(grammarAccess.getStateAccess().getInitialInitialKeyword_0_0()); }
		)
		{ after(grammarAccess.getStateAccess().getInitialInitialKeyword_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__State__NameAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getStateAccess().getNameIDTerminalRuleCall_2_0()); }
		RULE_ID
		{ after(grammarAccess.getStateAccess().getNameIDTerminalRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__State__TransitionsAssignment_4
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getStateAccess().getTransitionsTransitionParserRuleCall_4_0()); }
		ruleTransition
		{ after(grammarAccess.getStateAccess().getTransitionsTransitionParserRuleCall_4_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Transition__EventAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getTransitionAccess().getEventEventParserRuleCall_1_0()); }
		ruleEvent
		{ after(grammarAccess.getTransitionAccess().getEventEventParserRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Transition__GuardAssignment_2_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getTransitionAccess().getGuardExpressionParserRuleCall_2_1_0()); }
		ruleExpression
		{ after(grammarAccess.getTransitionAccess().getGuardExpressionParserRuleCall_2_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Transition__ActionsAssignment_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getTransitionAccess().getActionsActionParserRuleCall_3_0()); }
		ruleAction
		{ after(grammarAccess.getTransitionAccess().getActionsActionParserRuleCall_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Transition__OnFailAssignment_4
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getTransitionAccess().getOnFailOnFailActionParserRuleCall_4_0()); }
		ruleOnFailAction
		{ after(grammarAccess.getTransitionAccess().getOnFailOnFailActionParserRuleCall_4_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Transition__NextAssignment_7
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getTransitionAccess().getNextStateCrossReference_7_0()); }
		(
			{ before(grammarAccess.getTransitionAccess().getNextStateIDTerminalRuleCall_7_0_1()); }
			RULE_ID
			{ after(grammarAccess.getTransitionAccess().getNextStateIDTerminalRuleCall_7_0_1()); }
		)
		{ after(grammarAccess.getTransitionAccess().getNextStateCrossReference_7_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__StartTask__TaskAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getStartTaskAccess().getTaskIDTerminalRuleCall_2_0()); }
		RULE_ID
		{ after(grammarAccess.getStartTaskAccess().getTaskIDTerminalRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__StartTask__TimeVarAssignment_4
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getStartTaskAccess().getTimeVarUntypedVariableParserRuleCall_4_0()); }
		ruleUntypedVariable
		{ after(grammarAccess.getStartTaskAccess().getTimeVarUntypedVariableParserRuleCall_4_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__EndTask__TaskAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getEndTaskAccess().getTaskIDTerminalRuleCall_2_0()); }
		RULE_ID
		{ after(grammarAccess.getEndTaskAccess().getTaskIDTerminalRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__EndTask__TimeVarAssignment_4
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getEndTaskAccess().getTimeVarUntypedVariableParserRuleCall_4_0()); }
		ruleUntypedVariable
		{ after(grammarAccess.getEndTaskAccess().getTimeVarUntypedVariableParserRuleCall_4_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__AnyEvent__TimeVarAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getAnyEventAccess().getTimeVarUntypedVariableParserRuleCall_2_0()); }
		ruleUntypedVariable
		{ after(grammarAccess.getAnyEventAccess().getTimeVarUntypedVariableParserRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__UntypedVariable__NameAssignment
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getUntypedVariableAccess().getNameIDTerminalRuleCall_0()); }
		RULE_ID
		{ after(grammarAccess.getUntypedVariableAccess().getNameIDTerminalRuleCall_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__TypedVariable__TypeAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getTypedVariableAccess().getTypeTypeParserRuleCall_0_0()); }
		ruleType
		{ after(grammarAccess.getTypedVariableAccess().getTypeTypeParserRuleCall_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__TypedVariable__NameAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getTypedVariableAccess().getNameIDTerminalRuleCall_1_0()); }
		RULE_ID
		{ after(grammarAccess.getTypedVariableAccess().getNameIDTerminalRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__TypedVariable__ExprAssignment_2_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getTypedVariableAccess().getExprExpressionParserRuleCall_2_1_0()); }
		ruleExpression
		{ after(grammarAccess.getTypedVariableAccess().getExprExpressionParserRuleCall_2_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__AssignmentAction__VarAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getAssignmentActionAccess().getVarVariableCrossReference_0_0()); }
		(
			{ before(grammarAccess.getAssignmentActionAccess().getVarVariableIDTerminalRuleCall_0_0_1()); }
			RULE_ID
			{ after(grammarAccess.getAssignmentActionAccess().getVarVariableIDTerminalRuleCall_0_0_1()); }
		)
		{ after(grammarAccess.getAssignmentActionAccess().getVarVariableCrossReference_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__AssignmentAction__ExprAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getAssignmentActionAccess().getExprExpressionParserRuleCall_2_0()); }
		ruleExpression
		{ after(grammarAccess.getAssignmentActionAccess().getExprExpressionParserRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__RestartPath__PathAssignment_2_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getRestartPathAccess().getPathINTTerminalRuleCall_2_1_0()); }
		RULE_INT
		{ after(grammarAccess.getRestartPathAccess().getPathINTTerminalRuleCall_2_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__SkipPath__PathAssignment_2_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getSkipPathAccess().getPathINTTerminalRuleCall_2_1_0()); }
		RULE_INT
		{ after(grammarAccess.getSkipPathAccess().getPathINTTerminalRuleCall_2_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ExpressionLevel1__RightAssignment_1_0_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getExpressionLevel1Access().getRightExpressionLevel2ParserRuleCall_1_0_2_0()); }
		ruleExpressionLevel2
		{ after(grammarAccess.getExpressionLevel1Access().getRightExpressionLevel2ParserRuleCall_1_0_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ExpressionLevel1__RightAssignment_1_1_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getExpressionLevel1Access().getRightExpressionLevel2ParserRuleCall_1_1_2_0()); }
		ruleExpressionLevel2
		{ after(grammarAccess.getExpressionLevel1Access().getRightExpressionLevel2ParserRuleCall_1_1_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ExpressionLevel2__RightAssignment_1_0_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getExpressionLevel2Access().getRightExpressionLevel3ParserRuleCall_1_0_2_0()); }
		ruleExpressionLevel3
		{ after(grammarAccess.getExpressionLevel2Access().getRightExpressionLevel3ParserRuleCall_1_0_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ExpressionLevel2__RightAssignment_1_1_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getExpressionLevel2Access().getRightExpressionLevel3ParserRuleCall_1_1_2_0()); }
		ruleExpressionLevel3
		{ after(grammarAccess.getExpressionLevel2Access().getRightExpressionLevel3ParserRuleCall_1_1_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ExpressionLevel3__RightAssignment_1_0_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getExpressionLevel3Access().getRightExpressionLevel4ParserRuleCall_1_0_2_0()); }
		ruleExpressionLevel4
		{ after(grammarAccess.getExpressionLevel3Access().getRightExpressionLevel4ParserRuleCall_1_0_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ExpressionLevel3__RightAssignment_1_1_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getExpressionLevel3Access().getRightExpressionLevel4ParserRuleCall_1_1_2_0()); }
		ruleExpressionLevel4
		{ after(grammarAccess.getExpressionLevel3Access().getRightExpressionLevel4ParserRuleCall_1_1_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ExpressionLevel3__RightAssignment_1_2_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getExpressionLevel3Access().getRightExpressionLevel4ParserRuleCall_1_2_2_0()); }
		ruleExpressionLevel4
		{ after(grammarAccess.getExpressionLevel3Access().getRightExpressionLevel4ParserRuleCall_1_2_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ExpressionLevel3__RightAssignment_1_3_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getExpressionLevel3Access().getRightExpressionLevel4ParserRuleCall_1_3_2_0()); }
		ruleExpressionLevel4
		{ after(grammarAccess.getExpressionLevel3Access().getRightExpressionLevel4ParserRuleCall_1_3_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ExpressionLevel4__RightAssignment_1_0_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getExpressionLevel4Access().getRightExpressionLevel5ParserRuleCall_1_0_2_0()); }
		ruleExpressionLevel5
		{ after(grammarAccess.getExpressionLevel4Access().getRightExpressionLevel5ParserRuleCall_1_0_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ExpressionLevel4__RightAssignment_1_1_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getExpressionLevel4Access().getRightExpressionLevel5ParserRuleCall_1_1_2_0()); }
		ruleExpressionLevel5
		{ after(grammarAccess.getExpressionLevel4Access().getRightExpressionLevel5ParserRuleCall_1_1_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ExpressionLevel5__RightAssignment_1_0_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getExpressionLevel5Access().getRightExpressionLevel6ParserRuleCall_1_0_2_0()); }
		ruleExpressionLevel6
		{ after(grammarAccess.getExpressionLevel5Access().getRightExpressionLevel6ParserRuleCall_1_0_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ExpressionLevel5__RightAssignment_1_1_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getExpressionLevel5Access().getRightExpressionLevel6ParserRuleCall_1_1_2_0()); }
		ruleExpressionLevel6
		{ after(grammarAccess.getExpressionLevel5Access().getRightExpressionLevel6ParserRuleCall_1_1_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ExpressionLevel5__RightAssignment_1_2_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getExpressionLevel5Access().getRightExpressionLevel6ParserRuleCall_1_2_2_0()); }
		ruleExpressionLevel6
		{ after(grammarAccess.getExpressionLevel5Access().getRightExpressionLevel6ParserRuleCall_1_2_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ExpressionLevel5__RightAssignment_1_3_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getExpressionLevel5Access().getRightExpressionLevel6ParserRuleCall_1_3_2_0()); }
		ruleExpressionLevel6
		{ after(grammarAccess.getExpressionLevel5Access().getRightExpressionLevel6ParserRuleCall_1_3_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ExpressionLevel6__RightAssignment_1_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getExpressionLevel6Access().getRightExpressionLevel6ParserRuleCall_1_2_0()); }
		ruleExpressionLevel6
		{ after(grammarAccess.getExpressionLevel6Access().getRightExpressionLevel6ParserRuleCall_1_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ExpressionNot__SubAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getExpressionNotAccess().getSubExpressionLevel8ParserRuleCall_1_0()); }
		ruleExpressionLevel8
		{ after(grammarAccess.getExpressionNotAccess().getSubExpressionLevel8ParserRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ExpressionMinus__SubAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getExpressionMinusAccess().getSubExpressionLevel8ParserRuleCall_1_0()); }
		ruleExpressionLevel8
		{ after(grammarAccess.getExpressionMinusAccess().getSubExpressionLevel8ParserRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ExpressionPlus__SubAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getExpressionPlusAccess().getSubExpressionLevel8ParserRuleCall_1_0()); }
		ruleExpressionLevel8
		{ after(grammarAccess.getExpressionPlusAccess().getSubExpressionLevel8ParserRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ExpressionBracket__SubAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getExpressionBracketAccess().getSubExpressionParserRuleCall_1_0()); }
		ruleExpression
		{ after(grammarAccess.getExpressionBracketAccess().getSubExpressionParserRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ExpressionConstantBool__ValueAssignment
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getExpressionConstantBoolAccess().getValueBOOL_LITERALTerminalRuleCall_0()); }
		RULE_BOOL_LITERAL
		{ after(grammarAccess.getExpressionConstantBoolAccess().getValueBOOL_LITERALTerminalRuleCall_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ExpressionConstantInt__ValueAssignment
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getExpressionConstantIntAccess().getValueINTTerminalRuleCall_0()); }
		RULE_INT
		{ after(grammarAccess.getExpressionConstantIntAccess().getValueINTTerminalRuleCall_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ExpressionConstantReal__ValueAssignment
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getExpressionConstantRealAccess().getValueFLOATTerminalRuleCall_0()); }
		RULE_FLOAT
		{ after(grammarAccess.getExpressionConstantRealAccess().getValueFLOATTerminalRuleCall_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ExpressionConstantString__ValueAssignment
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getExpressionConstantStringAccess().getValueSTRINGTerminalRuleCall_0()); }
		RULE_STRING
		{ after(grammarAccess.getExpressionConstantStringAccess().getValueSTRINGTerminalRuleCall_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ExpressionVariable__VariableAssignment
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getExpressionVariableAccess().getVariableVariableCrossReference_0()); }
		(
			{ before(grammarAccess.getExpressionVariableAccess().getVariableVariableIDTerminalRuleCall_0_1()); }
			RULE_ID
			{ after(grammarAccess.getExpressionVariableAccess().getVariableVariableIDTerminalRuleCall_0_1()); }
		)
		{ after(grammarAccess.getExpressionVariableAccess().getVariableVariableCrossReference_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__SimpleTypeDecl__NameAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getSimpleTypeDeclAccess().getNameIDTerminalRuleCall_1_0()); }
		RULE_ID
		{ after(grammarAccess.getSimpleTypeDeclAccess().getNameIDTerminalRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__EnumTypeDecl__NameAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getEnumTypeDeclAccess().getNameIDTerminalRuleCall_1_0()); }
		RULE_ID
		{ after(grammarAccess.getEnumTypeDeclAccess().getNameIDTerminalRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__EnumTypeDecl__LiteralsAssignment_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getEnumTypeDeclAccess().getLiteralsEnumElementParserRuleCall_3_0()); }
		ruleEnumElement
		{ after(grammarAccess.getEnumTypeDeclAccess().getLiteralsEnumElementParserRuleCall_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__EnumElement__NameAssignment
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getEnumElementAccess().getNameIDTerminalRuleCall_0()); }
		RULE_ID
		{ after(grammarAccess.getEnumElementAccess().getNameIDTerminalRuleCall_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Array__BaseTypeAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getArrayAccess().getBaseTypeTypeDeclCrossReference_0_0()); }
		(
			{ before(grammarAccess.getArrayAccess().getBaseTypeTypeDeclIDTerminalRuleCall_0_0_1()); }
			RULE_ID
			{ after(grammarAccess.getArrayAccess().getBaseTypeTypeDeclIDTerminalRuleCall_0_0_1()); }
		)
		{ after(grammarAccess.getArrayAccess().getBaseTypeTypeDeclCrossReference_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__TypeRef__TypeAssignment
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getTypeRefAccess().getTypeTypeDeclCrossReference_0()); }
		(
			{ before(grammarAccess.getTypeRefAccess().getTypeTypeDeclIDTerminalRuleCall_0_1()); }
			RULE_ID
			{ after(grammarAccess.getTypeRefAccess().getTypeTypeDeclIDTerminalRuleCall_0_1()); }
		)
		{ after(grammarAccess.getTypeRefAccess().getTypeTypeDeclCrossReference_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

RULE_BOOL_LITERAL : ('true'|'false'|'TRUE'|'FALSE'|'True'|'False');

RULE_FLOAT : RULE_INT '.' RULE_INT (('E'|'e') '-'? RULE_INT)?;

RULE_ID : '^'? ('a'..'z'|'A'..'Z'|'_') ('a'..'z'|'A'..'Z'|'_'|'0'..'9')*;

RULE_INT : ('0'..'9')+;

RULE_STRING : ('"' ('\\' .|~(('\\'|'"')))* '"'|'\'' ('\\' .|~(('\\'|'\'')))* '\'');

RULE_ML_COMMENT : '/*' ( options {greedy=false;} : . )*'*/';

RULE_SL_COMMENT : '//' ~(('\n'|'\r'))* ('\r'? '\n')?;

RULE_WS : (' '|'\t'|'\r'|'\n')+;

RULE_ANY_OTHER : .;
